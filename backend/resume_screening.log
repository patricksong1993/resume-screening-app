2025-09-05 10:54:19,463 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 10:54:19,468 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 10:54:24,745 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 10:54:24,746 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:54:24,746 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 10:54:24,746 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:24] "GET /api/health HTTP/1.1" 200 -
2025-09-05 10:54:35,432 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 10:54:35,433 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 10:54:35,437 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 10:54:35,437 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:35] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 10:54:35,472 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 10:54:35,479 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1756953860.6670468-21131-2280592960"', 'If-Modified-Since': 'Thu, 04 Sep 2025 02:44:20 GMT'}
2025-09-05 10:54:35,480 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 10:54:35,480 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757040661.9939997-48590-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:51:01 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:54:35,480 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 21131 bytes
2025-09-05 10:54:35,480 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:35] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 10:54:35,481 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 48590 bytes
2025-09-05 10:54:35,481 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:35] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 10:54:35,489 - werkzeug - ERROR - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:35] code 400, message Bad request version ('\x1b\xad\x96rcC;B\xad\x07*R÷ô\x11ÈGBÂ')
2025-09-05 10:54:35,489 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:35] "[31m[1m\x16\x03\x01\x06ò\x01\x00\x06î\x03\x03BY\x10LÚØ¸\x9fh\x97ÍÏR;ÿß§\x08\x13ü¨jL\x06F¡ Ì\x12aÁ» é¥Di:\x1d\x1b­\x96rcC;B­\x07*R÷ô\x11ÈGBÂ[0m" 400 -
2025-09-05 10:54:35,490 - werkzeug - ERROR - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:35] code 400, message Bad request version ('\x03M\x06à%±\x82´}U\x10\x80FxÍ\x98+}\x13\x7fAéYZ')
2025-09-05 10:54:35,491 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:35] "[31m[1m\x16\x03\x01\x06Ò\x01\x00\x06Î\x03\x03¯\x02q\x99²ªõh\x91\x11T®\x9c$Ó\x9aá\x96Çþì\x0eíð¬~\x1c[N2õp U\x031±\x91\x88Ü\x8e\x12@C¨4Ø\x19,\x84\x17\x8a\x1cp\x1aÈ\\5½\x7f\x1c\x0b.\x0eM\x00 **\x13\x01\x13\x02\x13\x03À+À/À,À0Ì©Ì¨À\x13À\x14\x00\x9c\x00\x9d\x00/\x005\x01\x00\x06eÚÚ\x00\x00\x00\x05\x00\x05\x01\x00\x00\x00\x00\x00\x17\x00\x00\x00\x1b\x00\x03\x02\x00\x02\x003\x04ï\x04ízz\x00\x01\x00\x11ì\x04ÀUñq·7\\n4´\x0c5v\x9fc¥üz\x81µaÂ­\x81\x08¸ëu.*Ê\x12¡\x19Hi~%\x8b"F×`'uiÕ¼"W[[6Ñ< !\x9c\x10xË«ÊÈ\x1e\x9aÏ\x1fZÂ'õ3zJ\x87\x18¤\x06\x9c¦sË¸¨àÈ\x05f`\x96yè\x14ËØÄ|¢X¿é\x92Ý£K;\x82¬\x0d\x99\x98\x1cÃ\x90\x9a\x09=*·Eép-×\x16\x1dGÛ\x84¡`\x0fh0Q½\x95¢\x06¬3Ê':Ã\x08Ï«d\x1a éU¢r\x86ÿØuÉ@\x1b>²\x0f~"P¿C\x90 0#"g[{á9 ØÅ*\x82\x06$¢À\x95x\x97\x00¦p\x80"EË6\x16°\x84\x13\x87Â\x9f÷%ÉËG0\x9b1AÁ»l))\x03tB ?\x16\x99\x14èXoT·\x9aç\x00\x08\x18\x17`â\x9d¾I\x99\x00=\x13wõ¥Ñ\x17\x10ä¡N®\x82\x82\x14â);´\x11\x99\x014\x9eÊJ\x07º\x8e\x1b\x1c2\x08\x95\x1d=ì'\x1a6\x98ôÙ,]3¶y\x15\x83\x89\x08º\x05Ò\x8c)\x85'jd¢°¤\x001ã\x9e\x10úA\x13ÚÌnIv1:²KÐ\x15´\x968aù"i¡\x06\x8cD'\x06h~gA\x044Ì\x103\x0c_Y\x82¼.[®ÎQMÖ[Q¡bc\x07\x91}!\x10w®\x1aÀf¶Îc\x9c}ÚJ_[»v\x86{E\x84»UMú¶U3U·5\x0e\x1dûH\x1bã¯N ³Ûb´\x19Q_(\x80\x87+\x07FÒÔ5\x0bi\x94í\x87·Ü\x05\x8f \x03M\x06à%±\x82´}U\x10\x80FxÍ\x98+}\x13\x7fAéYZ[0m" 400 -
2025-09-05 10:54:35,497 - werkzeug - ERROR - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:35] code 400, message Bad request version ('jj\x13\x01\x13\x02\x13\x03À+À/À,À0Ì©Ì¨À\x13À\x14\x00\x9c\x00\x9d\x00/\x005\x01\x00\x06E::\x00\x00DÍ\x00\x05\x00\x03\x02h2\x00')
2025-09-05 10:54:35,497 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:35] "[31m[1m\x16\x03\x01\x06²\x01\x00\x06®\x03\x03üü&Æöüù¢-[K\x185kå\x11ºRÙÝ\\\x86wZ\x8bD®ZìøUG E\x8cÞ´\x95Dç\x08\x81áËI\x0f~gdâ_3§\x03ê"dÖè\x0e®åÝè8\x00 jj\x13\x01\x13\x02\x13\x03À+À/À,À0Ì©Ì¨À\x13À\x14\x00\x9c\x00\x9d\x00/\x005\x01\x00\x06E::\x00\x00DÍ\x00\x05\x00\x03\x02h2\x00[0m" 400 -
2025-09-05 10:54:35,498 - werkzeug - ERROR - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:35] code 400, message Bad request version ('localhost\x00+\x00\x07\x06\x8a\x8a\x03\x04\x03\x03DÍ\x00\x05\x00\x03\x02h2ÿ\x01\x00\x01\x00\x00#\x00\x00\x00\x12\x00\x00\x00')
2025-09-05 10:54:35,498 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:35] "[31m[1m\x16\x03\x01\x06ò\x01\x00\x06î\x03\x03\x11¦!ý\x19A\x87´Â\x97]\x99\x06Ãn\x05ñt\x9b¤'E\x9c\x16ç]R\x13.Æñá ûAbä\x08\x8déM\x89²2J7ò\x9e\x89\x9bbÙ-Ò\x10\x96©7e\x01\x91\x8e}\x0bü\x00 ::\x13\x01\x13\x02\x13\x03À+À/À,À0Ì©Ì¨À\x13À\x14\x00\x9c\x00\x9d\x00/\x005\x01\x00\x06\x85ÊÊ\x00\x00\x00\x00\x00\x0e\x00\x0c\x00\x00\x09localhost\x00+\x00\x07\x06\x8a\x8a\x03\x04\x03\x03DÍ\x00\x05\x00\x03\x02h2ÿ\x01\x00\x01\x00\x00#\x00\x00\x00\x12\x00\x00\x00[0m" 400 -
2025-09-05 10:54:42,765 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 10:54:43,285 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 10:54:43,290 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 10:54:48,358 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 10:54:48,921 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 10:54:48,926 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 10:54:54,105 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 10:54:54,105 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 10:54:54,107 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 10:54:54,108 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:54] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 10:54:54,120 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 10:54:54,121 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1756953860.6670468-21131-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Thu, 04 Sep 2025 02:44:20 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:54:54,122 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 10:54:54,124 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757040661.9939997-48590-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:51:01 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:54:54,124 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 21131 bytes
2025-09-05 10:54:54,125 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 48590 bytes
2025-09-05 10:54:54,125 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:54] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 10:54:54,125 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:54] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 10:54:54,131 - werkzeug - ERROR - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:54] code 400, message Bad request version ('\x8a³\x90\x86Ý\x7fn\x87Ú-<>3¼<Ó±ezwxþþ¡ñ~')
2025-09-05 10:54:54,131 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:54] "[31m[1m\x16\x03\x01\x06ò\x01\x00\x06î\x03\x03\x98\x02\x02ùÝ\x14\x14êõ½~\x12\\¢\x1e}á\x86\x84=»7\x17X¼-\x11\x82Ô\x03¦R [D=·Ê\x01¥c\x88\x8dåË\x87´\x13jË\x03[£Á\x99ó\x93fka\x11µßrã\x00 úú\x13\x01\x13\x02\x13\x03À+À/À,À0Ì©Ì¨À\x13À\x14\x00\x9c\x00\x9d\x00/\x005\x01\x00\x06\x85JJ\x00\x00\x00+\x00\x07\x06ZZ\x03\x04\x03\x03\x00\x05\x00\x05\x01\x00\x00\x00\x00\x00\x0b\x00\x02\x01\x00þ\x0d\x00ú\x00\x00\x01\x00\x01H\x00 \x8a³\x90\x86Ý\x7fn\x87Ú-<>3¼<Ó±ezwxþþ¡ñ~[0m" 400 -
2025-09-05 10:54:54,132 - werkzeug - ERROR - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:54] code 400, message Bad request version ('Ä£=[yÍÏ\x17a&\x80')
2025-09-05 10:54:54,132 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:54] "[31m[1m\x16\x03\x01\x06ò\x01\x00\x06î\x03\x03\x98M\x98·7Ñß\x89+\x91ÜÝ\x8cü\x12IvBçz\x83y¨Ð\x13\x84àÛ\x91\x13ç\x06 \x97QP1\x89\x13X\x9c©Ê$.a\x1b NîÊL\x1f¥\x031Ô5,{«uÊºî\x00 \x8a\x8a\x13\x01\x13\x02\x13\x03À+À/À,À0Ì©Ì¨À\x13À\x14\x00\x9c\x00\x9d\x00/\x005\x01\x00\x06\x85jj\x00\x00\x00\x17\x00\x00þ\x0d\x00ú\x00\x00\x01\x00\x01k\x00 ÐiÞ\x1dª\x964-æÏ³;\x16+T æ\x11ú_k\x1dÎ<\x9b¡Zt÷ªx^\x00Ð\x0cÖn\x98\x8dº\x150VgÒ#tDX»ô#Ô\x9f\x0d4Oö\x8b\x1eöüAµ|µ\x93HSÅ1\x05Ý\x9c\x04v\x17\x81\x16\x0e\x9d\x7f§\x9e\x03®Gî'õµ \x10\x18È\x9e¸¤Ñé\x15\x1az\x97Sñ\x93>Ì¾\x97\x8a\x0c1D)Mi\x1cÄ£=[yÍÏ\x17a&\x80[0m" 400 -
2025-09-05 10:54:54,135 - werkzeug - ERROR - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:54] code 400, message Bad request version ('::\x13\x01\x13\x02\x13\x03À+À/À,À0Ì©Ì¨À\x13À\x14\x00\x9c\x00\x9d\x00/\x005\x01\x00\x06e::\x00\x00\x00')
2025-09-05 10:54:54,135 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:54] "[31m[1m\x16\x03\x01\x06Ò\x01\x00\x06Î\x03\x03¤{¸\x9b\x12\x81\x80:oRÃò\x95É9\x9d\x89\x03Ý\x93dÍ\x88æ\x91h+\x87©\x82>¢ \x17!ÐÏS\x95\x84ë\x92\x97¡\x93´óã\x0dx·¥ñÅin!\x81_ðÉóGX´\x00 ::\x13\x01\x13\x02\x13\x03À+À/À,À0Ì©Ì¨À\x13À\x14\x00\x9c\x00\x9d\x00/\x005\x01\x00\x06e::\x00\x00\x00[0m" 400 -
2025-09-05 10:54:54,136 - werkzeug - ERROR - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:54] code 400, message Bad request syntax ('\x16\x03\x01\x06²\x01\x00\x06®\x03\x03®(N1Öf^"øÉØ:ø´++<')
2025-09-05 10:54:54,136 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:54:54] "[31m[1m\x16\x03\x01\x06²\x01\x00\x06®\x03\x03®(N1Öf^"øÉØ:ø´++<[0m" 400 -
2025-09-05 10:55:03,946 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 10:55:03,946 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1756953860.6670468-21131-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Thu, 04 Sep 2025 02:44:20 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:55:03,947 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 21131 bytes
2025-09-05 10:55:03,948 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:03] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 10:55:03,955 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-05 10:55:03,955 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:55:03,956 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-05 10:55:03,956 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:03] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-05 10:55:07,191 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 10:55:07,712 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 10:55:07,717 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 10:55:22,920 - werkzeug - ERROR - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:22] code 400, message Bad request version ('\x00\x12\x00\x10\x04\x03\x08\x04\x04\x01\x05\x03\x08\x05\x05\x01\x08\x06\x06\x01\x00')
2025-09-05 10:55:22,920 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:22] "[31m[1m\x16\x03\x01\x06²\x01\x00\x06®\x03\x03csL«Èå\x0e\x8b\x922O\x86\x04\x00¦\x13\x04$\x09V\x13çKbqÂ¶lpòÖë è.\\\x05®u¸¶\x15_bp&(i\x09W¯A\x81é¨ÇõuÌ\x14\x97­±\x07­\x00 êê\x13\x01\x13\x02\x13\x03À+À/À,À0Ì©Ì¨À\x13À\x14\x00\x9c\x00\x9d\x00/\x005\x01\x00\x06EJJ\x00\x00\x00\x17\x00\x00\x00\x10\x00\x0e\x00\x0c\x02h2\x08http/1.1DÍ\x00\x05\x00\x03\x02h2\x00\x12\x00\x00\x00\x00\x00\x0e\x00\x0c\x00\x00\x09localhostþ\x0d\x00º\x00\x00\x01\x00\x01\x86\x00 ÏFê\x1aÚ³n;j*ä«çjëü÷\x7fÁ[\x0c^y\x0dï¿`á°Ý7K\x00\x908\x12ÿnMªÅÎrü«¤Ù¨è{lBK9ðP\x8b¨:¶(ï;\x89\x90\x11£\x07kÄ\x06{Ü÷\x04E\x89÷'ß^ôñFÑ\x83.\x09½\x10\x18\x16\x02\x03|\x10»Õ?\x9f`\x01\x05Â\x7f¥â¡yë\x02hõçgM\x9eí\x97ëÛ÷ýØõCÛà\x150-¨}áPæs³ªÂ\x9e\x12}JAt0\x14:ï¥&'@\x86\x1c:TBÃf\x08\x9ew \x9fKM.È\x1d\x01Ïº\x9f_Ü\x9d\x00\x0b\x00\x02\x01\x00\x00\x0d\x00\x12\x00\x10\x04\x03\x08\x04\x04\x01\x05\x03\x08\x05\x05\x01\x08\x06\x06\x01\x00[0m" 400 -
2025-09-05 10:55:22,921 - werkzeug - ERROR - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:22] code 400, message Bad request version ('x\x9bæ7')
2025-09-05 10:55:22,922 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:22] "[31m[1m\x16\x03\x01\x06²\x01\x00\x06®\x03\x03¦\x02 \x9e\x13/«2½('\x9aa+Å\x0dt®s\x83\x03\x12\x15ægbâ\x84\x1d(3f [¡b\x91\x002éà\x91Þ\x9b\x09! \x86>þ*\x87GL*,>0\x05®ÖJð×\x86\x00 **\x13\x01\x13\x02\x13\x03À+À/À,À0Ì©Ì¨À\x13À\x14\x00\x9c\x00\x9d\x00/\x005\x01\x00\x06E**\x00\x00\x00\x00\x00\x0e\x00\x0c\x00\x00\x09localhost\x00+\x00\x07\x06êê\x03\x04\x03\x03\x00\x1b\x00\x03\x02\x00\x02\x00#\x00\x00\x00\x17\x00\x00\x00\x05\x00\x05\x01\x00\x00\x00\x00\x003\x04ï\x04íÊÊ\x00\x01\x00\x11ì\x04ÀBSN\x96áI),Ì¼\\%¡%4g\x83\x8e±§\x7f\x83Ð³Ê\x16!Å´.iH|¶Äq\x19q|¨Ö\x0dE\x94y\x93C\x97«X´ÿè\x84mdtHC¥\x9e#]L{\x8f­£¥×áÌÄ\x9b:áIG$e(\x1dx\x9bæ7[0m" 400 -
2025-09-05 10:55:22,923 - werkzeug - ERROR - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:22] code 400, message Bad request version ('\x02h2\x08http/1.1\x00')
2025-09-05 10:55:22,923 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:22] "[31m[1m\x16\x03\x01\x06ò\x01\x00\x06î\x03\x03\x85\x86n\\Tfô¯/\x1dÐ{L/).fkü`ãÕ^l!ð<@ÅûÊo \x81w\x8byÆ!<YñÁøöP\x9fÇW'»1[FÐ¶^GU\x06RSæ=\x09\x00 \x9a\x9a\x13\x01\x13\x02\x13\x03À+À/À,À0Ì©Ì¨À\x13À\x14\x00\x9c\x00\x9d\x00/\x005\x01\x00\x06\x85\x1a\x1a\x00\x00\x00\x0b\x00\x02\x01\x00\x00\x1b\x00\x03\x02\x00\x02\x00#\x00\x00DÍ\x00\x05\x00\x03\x02h2\x00\x10\x00\x0e\x00\x0c\x02h2\x08http/1.1\x00[0m" 400 -
2025-09-05 10:55:22,923 - werkzeug - ERROR - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:22] code 400, message Bad request version ('\x00\x02\x01\x00\x003\x04ï\x04íJJ\x00\x01\x00\x11ì\x04À\x90ÉÇ\x98\x96\x13^{wÂâ¼¤')
2025-09-05 10:55:22,924 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:22] "[31m[1m\x16\x03\x01\x06²\x01\x00\x06®\x03\x03^W½Í6&\x99Þq\x8dd¬\x9akE\x81K\x9a\x9a\x0eÙ\x9b<Ð\x97µZk\x07I Ó ç\x983|\x98\x18ÛG&vñ@Ç\x11Z==\x7f\x18¸ïÝÌÑwùÎ²ôZ\x18ã\x00 ZZ\x13\x01\x13\x02\x13\x03À+À/À,À0Ì©Ì¨À\x13À\x14\x00\x9c\x00\x9d\x00/\x005\x01\x00\x06E\x1a\x1a\x00\x00\x00\x1b\x00\x03\x02\x00\x02\x00\x0b\x00\x02\x01\x00\x003\x04ï\x04íJJ\x00\x01\x00\x11ì\x04À\x90ÉÇ\x98\x96\x13^{wÂâ¼¤[0m" 400 -
2025-09-05 10:55:36,099 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 10:55:36,763 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 10:55:36,768 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 10:55:43,955 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 10:55:43,955 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:55:43,957 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 10:55:43,958 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:43] "GET /api/health HTTP/1.1" 200 -
2025-09-05 10:55:50,859 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 10:55:50,859 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:55:50,859 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 10:55:50,859 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:50] "GET /api/health HTTP/1.1" 200 -
2025-09-05 10:55:51,770 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 10:55:51,771 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:55:51,771 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 10:55:51,771 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:51] "GET /api/health HTTP/1.1" 200 -
2025-09-05 10:55:52,848 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 10:55:52,848 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 10:55:52,851 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 10:55:52,851 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:52] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 10:55:52,867 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 10:55:52,867 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1756953860.6670468-21131-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Thu, 04 Sep 2025 02:44:20 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:55:52,869 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 10:55:52,869 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757040661.9939997-48590-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:51:01 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:55:52,870 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 200 - 48522 bytes
2025-09-05 10:55:52,870 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:52] "GET /static/script.js HTTP/1.1" 200 -
2025-09-05 10:55:52,871 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 21131 bytes
2025-09-05 10:55:52,872 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:52] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 10:55:52,883 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-05 10:55:52,883 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:55:52,883 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-05 10:55:52,884 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:52] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-05 10:55:52,924 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 10:55:52,924 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:55:52,924 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 10:55:52,925 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:52] "GET /api/health HTTP/1.1" 200 -
2025-09-05 10:55:55,314 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 10:55:55,316 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 10:55:55,317 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 10:55:55,318 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:55] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 10:55:55,363 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 10:55:55,371 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 10:55:55,371 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757040950.3264692-48522-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:55:50 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:55:55,372 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-05 10:55:55,372 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1756953860.6670468-21131-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Thu, 04 Sep 2025 02:44:20 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:55:55,372 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:55:55,373 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 48522 bytes
2025-09-05 10:55:55,373 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-05 10:55:55,374 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:55] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 10:55:55,374 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 21131 bytes
2025-09-05 10:55:55,374 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:55] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-05 10:55:55,374 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:55] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 10:55:55,396 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 10:55:55,396 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:55:55,396 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 10:55:55,396 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:55:55] "GET /api/health HTTP/1.1" 200 -
2025-09-05 10:56:06,126 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 10:56:06,719 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 10:56:06,723 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 10:56:09,240 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 10:56:09,240 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '10301', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryixHBcrinbzjiaRTK', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:56:09,240 - app.main - INFO - [main.py:46] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryixHBcrinbzjiaRTK
2025-09-05 10:56:09,241 - app.main - INFO - [main.py:47] - log_request_info() - 📊 Content-Length: 10301
2025-09-05 10:56:09,242 - app.main - INFO - [main.py:49] - log_request_info() - 📎 Files: ['resume_4.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf']
2025-09-05 10:56:09,243 - app.main - INFO - [main.py:55] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-05 10:56:09,243 - app.main - INFO - [main.py:92] - process_single_file() - 🚀 [Thread-6147420160] Starting processing file: resume_4.pdf
2025-09-05 10:56:09,244 - app.main - INFO - [main.py:92] - process_single_file() - 🚀 [Thread-6164246528] Starting processing file: resume_7.pdf
2025-09-05 10:56:09,244 - app.main - INFO - [main.py:92] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_6.pdf
2025-09-05 10:56:09,244 - app.main - DEBUG - [main.py:95] - process_single_file() - 📋 [Thread-6147420160] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 10:56:09,244 - app.main - INFO - [main.py:92] - process_single_file() - 🚀 [Thread-13052751872] Starting processing file: resume_5.pdf
2025-09-05 10:56:09,244 - app.main - DEBUG - [main.py:95] - process_single_file() - 📋 [Thread-6164246528] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 10:56:09,245 - app.main - DEBUG - [main.py:95] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 10:56:09,245 - app.main - DEBUG - [main.py:98] - process_single_file() - 🔍 [Thread-6147420160] Validating file type...
2025-09-05 10:56:09,245 - app.main - DEBUG - [main.py:95] - process_single_file() - 📋 [Thread-13052751872] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 10:56:09,245 - app.main - DEBUG - [main.py:98] - process_single_file() - 🔍 [Thread-6164246528] Validating file type...
2025-09-05 10:56:09,245 - app.main - DEBUG - [main.py:98] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-05 10:56:09,245 - app.main - DEBUG - [main.py:110] - process_single_file() - 💾 [Thread-6147420160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_105609_6147420160_resume_4.pdf
2025-09-05 10:56:09,245 - app.main - DEBUG - [main.py:98] - process_single_file() - 🔍 [Thread-13052751872] Validating file type...
2025-09-05 10:56:09,245 - app.main - DEBUG - [main.py:110] - process_single_file() - 💾 [Thread-6164246528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_105609_6164246528_resume_7.pdf
2025-09-05 10:56:09,246 - app.main - DEBUG - [main.py:110] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_105609_13035925504_resume_6.pdf
2025-09-05 10:56:09,246 - app.main - DEBUG - [main.py:110] - process_single_file() - 💾 [Thread-13052751872] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_105609_13052751872_resume_5.pdf
2025-09-05 10:56:09,247 - app.main - INFO - [main.py:112] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-05 10:56:09,247 - app.main - DEBUG - [main.py:115] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-05 10:56:09,247 - app.main - INFO - [main.py:112] - process_single_file() - ✅ [Thread-13052751872] File saved successfully
2025-09-05 10:56:09,247 - app.main - INFO - [main.py:112] - process_single_file() - ✅ [Thread-6147420160] File saved successfully
2025-09-05 10:56:09,247 - app.main - INFO - [main.py:112] - process_single_file() - ✅ [Thread-6164246528] File saved successfully
2025-09-05 10:56:09,247 - app.main - DEBUG - [main.py:115] - process_single_file() - 🔍 [Thread-13052751872] Validating PDF structure...
2025-09-05 10:56:09,247 - app.main - DEBUG - [main.py:115] - process_single_file() - 🔍 [Thread-6147420160] Validating PDF structure...
2025-09-05 10:56:09,247 - app.main - DEBUG - [main.py:115] - process_single_file() - 🔍 [Thread-6164246528] Validating PDF structure...
2025-09-05 10:56:09,249 - app.main - INFO - [main.py:125] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-05 10:56:09,249 - app.main - DEBUG - [main.py:128] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-05 10:56:09,250 - app.main - INFO - [main.py:125] - process_single_file() - ✅ [Thread-13052751872] PDF validation passed
2025-09-05 10:56:09,254 - app.main - DEBUG - [main.py:128] - process_single_file() - 📄 [Thread-13052751872] Extracting text from PDF...
2025-09-05 10:56:09,254 - app.main - INFO - [main.py:125] - process_single_file() - ✅ [Thread-6147420160] PDF validation passed
2025-09-05 10:56:09,254 - app.main - INFO - [main.py:143] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 873 characters
2025-09-05 10:56:09,255 - app.main - INFO - [main.py:125] - process_single_file() - ✅ [Thread-6164246528] PDF validation passed
2025-09-05 10:56:09,256 - app.main - DEBUG - [main.py:128] - process_single_file() - 📄 [Thread-6147420160] Extracting text from PDF...
2025-09-05 10:56:09,257 - app.main - INFO - [main.py:143] - process_single_file() - ✅ [Thread-13052751872] Text extracted successfully - 922 characters
2025-09-05 10:56:09,257 - app.main - INFO - [main.py:148] - process_single_file() - 🤖 [Thread-13035925504] Starting AI analysis with Qwen...
2025-09-05 10:56:09,257 - app.main - DEBUG - [main.py:128] - process_single_file() - 📄 [Thread-6164246528] Extracting text from PDF...
2025-09-05 10:56:09,258 - app.main - INFO - [main.py:148] - process_single_file() - 🤖 [Thread-13052751872] Starting AI analysis with Qwen...
2025-09-05 10:56:09,258 - app.main - DEBUG - [main.py:149] - process_single_file() - 📊 [Thread-13035925504] Job description length: 17 chars
2025-09-05 10:56:09,258 - app.main - DEBUG - [main.py:149] - process_single_file() - 📊 [Thread-13052751872] Job description length: 17 chars
2025-09-05 10:56:09,258 - app.main - DEBUG - [main.py:150] - process_single_file() - 📊 [Thread-13035925504] Resume text length: 873 chars
2025-09-05 10:56:09,258 - app.main - DEBUG - [main.py:150] - process_single_file() - 📊 [Thread-13052751872] Resume text length: 922 chars
2025-09-05 10:56:09,261 - app.main - INFO - [main.py:143] - process_single_file() - ✅ [Thread-6147420160] Text extracted successfully - 889 characters
2025-09-05 10:56:09,262 - app.main - INFO - [main.py:148] - process_single_file() - 🤖 [Thread-6147420160] Starting AI analysis with Qwen...
2025-09-05 10:56:09,264 - app.main - INFO - [main.py:143] - process_single_file() - ✅ [Thread-6164246528] Text extracted successfully - 1070 characters
2025-09-05 10:56:09,265 - app.main - DEBUG - [main.py:149] - process_single_file() - 📊 [Thread-6147420160] Job description length: 17 chars
2025-09-05 10:56:09,265 - app.main - INFO - [main.py:148] - process_single_file() - 🤖 [Thread-6164246528] Starting AI analysis with Qwen...
2025-09-05 10:56:09,265 - app.main - DEBUG - [main.py:150] - process_single_file() - 📊 [Thread-6147420160] Resume text length: 889 chars
2025-09-05 10:56:09,265 - app.main - DEBUG - [main.py:149] - process_single_file() - 📊 [Thread-6164246528] Job description length: 17 chars
2025-09-05 10:56:09,265 - app.main - DEBUG - [main.py:150] - process_single_file() - 📊 [Thread-6164246528] Resume text length: 1070 chars
2025-09-05 10:56:09,394 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-5cfdc052-8bc1-4841-94cc-a6e21d1b25aa', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nEmily Taylor\n Email: emily.taylor@gmail.com | Phone: +1-751-470-4245\nAddress: 848 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Airbnb (2016 - 2018)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Apple (2018 - 2020)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nBackend Engineer, Stripe (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, MIT (2010 - 2016)\nSkills\nGraphQL, Machine Learning, AWS, JavaScript, TypeScript, C++, Go, React\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 10:56:09,395 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2fb156d1-6e2e-4eab-8c68-faeb28f80a34', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nOlivia Johnson\n Email: olivia.johnson@gmail.com | Phone: +1-745-334-3029\nAddress: 544 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSoftware Engineer, Bloomberg (2017 - 2018)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nFull Stack Developer, Bloomberg (2019 - 2021)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Carnegie Mellon (2012 - 2016)\nSkills\nC++, Machine Learning, REST APIs, Node.js, Docker, Kubernetes, React, Java\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 10:56:09,395 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-271c22dd-4c23-4398-aead-de8e889b2c6c', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nEmily Miller\n Email: emily.miller@gmail.com | Phone: +1-258-807-8181\nAddress: 518 Main Street, Seattle, WA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Apple (2015 - 2017)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Bloomberg (2017 - 2019)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Oxford University (2010 - 2014)\nSkills\nSQL, Java, Python, Docker, AWS, Microservices, Kubernetes, TypeScript\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 10:56:09,395 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-10809eb7-df9e-415a-a8e5-a5ed6e530cb2', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nDavid Lee\n Email: david.lee@gmail.com | Phone: +1-788-771-2191\nAddress: 684 Main Street, New York, NY\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Airbnb (2016 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nData Engineer, Amazon (2018 - 2020)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Carnegie Mellon (2010 - 2016)\nSkills\nGraphQL, Node.js, Python, C++, Kubernetes, SQL, REST APIs, Docker\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 10:56:09,412 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 10:56:09,412 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 10:56:09,413 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 10:56:09,413 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 10:56:09,413 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 10:56:09,413 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 10:56:09,413 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 10:56:09,413 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 10:56:09,414 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10fb616a0>
2025-09-05 10:56:09,414 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10fb756d0>
2025-09-05 10:56:09,414 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10fb75810>
2025-09-05 10:56:09,414 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10fa6d5b0>
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 10:56:09,414 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 10:56:09,415 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 10:56:09,415 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 10:56:09,415 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 10:56:09,415 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 10:56:09,415 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 10:56:09,415 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 10:56:09,415 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 10:56:09,415 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 10:56:09,415 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 10:56:09,415 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x109896960> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 10:56:09,415 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 10:56:09,415 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x109896840> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 10:56:09,415 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1098967b0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 10:56:09,415 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1098968d0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 10:56:09,482 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10fa6df30>
2025-09-05 10:56:09,482 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10fa628d0>
2025-09-05 10:56:09,483 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 10:56:09,483 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 10:56:09,483 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 10:56:09,483 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 10:56:09,483 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 10:56:09,483 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 10:56:09,483 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 10:56:09,483 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 10:56:09,483 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 10:56:09,483 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 10:56:09,485 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10fb0d6a0>
2025-09-05 10:56:09,485 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 10:56:09,485 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 10:56:09,485 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 10:56:09,485 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 10:56:09,485 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 10:56:09,490 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10fb0dd00>
2025-09-05 10:56:09,491 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 10:56:09,491 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 10:56:09,491 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 10:56:09,491 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 10:56:09,491 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 10:56:13,956 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'6be3f7c7-2a99-9674-a878-b549d9c043d3'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4441'), (b'req-arrive-time', b'1757040969574'), (b'resp-start-time', b'1757040974016'), (b'x-envoy-upstream-service-time', b'4438'), (b'set-cookie', b'acw_tc=6be3f7c7-2a99-9674-a878-b549d9c043d3fba90deef63b83689ba09fc6e80ed2a3;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 02:56:13 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 10:56:13,957 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 10:56:13,957 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 10:56:13,957 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 10:56:13,957 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 10:56:13,957 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 10:56:13,958 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '6be3f7c7-2a99-9674-a878-b549d9c043d3', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4441', 'req-arrive-time': '1757040969574', 'resp-start-time': '1757040974016', 'x-envoy-upstream-service-time': '4438', 'set-cookie': 'acw_tc=6be3f7c7-2a99-9674-a878-b549d9c043d3fba90deef63b83689ba09fc6e80ed2a3;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 02:56:13 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 10:56:13,958 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 6be3f7c7-2a99-9674-a878-b549d9c043d3
2025-09-05 10:56:13,972 - app.main - INFO - [main.py:154] - process_single_file() - ✅ [Thread-6147420160] AI analysis completed successfully
2025-09-05 10:56:13,972 - app.main - DEBUG - [main.py:155] - process_single_file() - 📊 [Thread-6147420160] Analysis result - Candidate: Emily Miller, Score: 85
2025-09-05 10:56:13,972 - app.main - DEBUG - [main.py:189] - process_single_file() - 🗑️ [Thread-6147420160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_105609_6147420160_resume_4.pdf
2025-09-05 10:56:13,973 - app.main - INFO - [main.py:191] - process_single_file() - ✅ [Thread-6147420160] File processing completed successfully for: resume_4.pdf
2025-09-05 10:56:13,973 - app.main - DEBUG - [main.py:209] - process_single_file() - 📊 [Thread-6147420160] Returning result: Emily Miller - 85%
2025-09-05 10:56:14,523 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'1c389803-f852-9c26-8d63-77b8445b424d'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'5008'), (b'req-arrive-time', b'1757040969575'), (b'resp-start-time', b'1757040974583'), (b'x-envoy-upstream-service-time', b'5006'), (b'set-cookie', b'acw_tc=1c389803-f852-9c26-8d63-77b8445b424d3c890ad05ffb1c7e7a30514ee6e8db05;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 02:56:14 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 10:56:14,524 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 10:56:14,525 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 10:56:14,526 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 10:56:14,526 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 10:56:14,527 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 10:56:14,527 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '1c389803-f852-9c26-8d63-77b8445b424d', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '5008', 'req-arrive-time': '1757040969575', 'resp-start-time': '1757040974583', 'x-envoy-upstream-service-time': '5006', 'set-cookie': 'acw_tc=1c389803-f852-9c26-8d63-77b8445b424d3c890ad05ffb1c7e7a30514ee6e8db05;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 02:56:14 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 10:56:14,527 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 1c389803-f852-9c26-8d63-77b8445b424d
2025-09-05 10:56:14,528 - app.main - INFO - [main.py:154] - process_single_file() - ✅ [Thread-13035925504] AI analysis completed successfully
2025-09-05 10:56:14,528 - app.main - DEBUG - [main.py:155] - process_single_file() - 📊 [Thread-13035925504] Analysis result - Candidate: David Lee, Score: 75
2025-09-05 10:56:14,528 - app.main - DEBUG - [main.py:189] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_105609_13035925504_resume_6.pdf
2025-09-05 10:56:14,529 - app.main - INFO - [main.py:191] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_6.pdf
2025-09-05 10:56:14,529 - app.main - DEBUG - [main.py:209] - process_single_file() - 📊 [Thread-13035925504] Returning result: David Lee - 75%
2025-09-05 10:56:14,579 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'b61cadfe-130a-9099-bfd7-e1770f0772ac'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'5057'), (b'req-arrive-time', b'1757040969581'), (b'resp-start-time', b'1757040974639'), (b'x-envoy-upstream-service-time', b'5041'), (b'set-cookie', b'acw_tc=b61cadfe-130a-9099-bfd7-e1770f0772ac4b0a1baed5e65b55e38593337c8177ab;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 02:56:14 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 10:56:14,580 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 10:56:14,580 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 10:56:14,580 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 10:56:14,581 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 10:56:14,581 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 10:56:14,581 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'b61cadfe-130a-9099-bfd7-e1770f0772ac', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '5057', 'req-arrive-time': '1757040969581', 'resp-start-time': '1757040974639', 'x-envoy-upstream-service-time': '5041', 'set-cookie': 'acw_tc=b61cadfe-130a-9099-bfd7-e1770f0772ac4b0a1baed5e65b55e38593337c8177ab;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 02:56:14 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 10:56:14,581 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: b61cadfe-130a-9099-bfd7-e1770f0772ac
2025-09-05 10:56:14,582 - app.main - INFO - [main.py:154] - process_single_file() - ✅ [Thread-6164246528] AI analysis completed successfully
2025-09-05 10:56:14,582 - app.main - DEBUG - [main.py:155] - process_single_file() - 📊 [Thread-6164246528] Analysis result - Candidate: Emily Taylor, Score: 75
2025-09-05 10:56:14,582 - app.main - DEBUG - [main.py:189] - process_single_file() - 🗑️ [Thread-6164246528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_105609_6164246528_resume_7.pdf
2025-09-05 10:56:14,583 - app.main - INFO - [main.py:191] - process_single_file() - ✅ [Thread-6164246528] File processing completed successfully for: resume_7.pdf
2025-09-05 10:56:14,583 - app.main - DEBUG - [main.py:209] - process_single_file() - 📊 [Thread-6164246528] Returning result: Emily Taylor - 75%
2025-09-05 10:56:15,072 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'304b7153-d69a-995d-9571-d2c8cd017510'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'5541'), (b'req-arrive-time', b'1757040969590'), (b'resp-start-time', b'1757040975131'), (b'x-envoy-upstream-service-time', b'5529'), (b'set-cookie', b'acw_tc=304b7153-d69a-995d-9571-d2c8cd01751033ca0bd6fb06590cc7468f9edf59c69b;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 02:56:14 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 10:56:15,073 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 10:56:15,073 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 10:56:15,073 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 10:56:15,073 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 10:56:15,073 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 10:56:15,073 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '304b7153-d69a-995d-9571-d2c8cd017510', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '5541', 'req-arrive-time': '1757040969590', 'resp-start-time': '1757040975131', 'x-envoy-upstream-service-time': '5529', 'set-cookie': 'acw_tc=304b7153-d69a-995d-9571-d2c8cd01751033ca0bd6fb06590cc7468f9edf59c69b;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 02:56:14 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 10:56:15,074 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 304b7153-d69a-995d-9571-d2c8cd017510
2025-09-05 10:56:15,074 - app.main - INFO - [main.py:154] - process_single_file() - ✅ [Thread-13052751872] AI analysis completed successfully
2025-09-05 10:56:15,074 - app.main - DEBUG - [main.py:155] - process_single_file() - 📊 [Thread-13052751872] Analysis result - Candidate: Olivia Johnson, Score: 85
2025-09-05 10:56:15,074 - app.main - DEBUG - [main.py:189] - process_single_file() - 🗑️ [Thread-13052751872] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_105609_13052751872_resume_5.pdf
2025-09-05 10:56:15,075 - app.main - INFO - [main.py:191] - process_single_file() - ✅ [Thread-13052751872] File processing completed successfully for: resume_5.pdf
2025-09-05 10:56:15,075 - app.main - DEBUG - [main.py:209] - process_single_file() - 📊 [Thread-13052751872] Returning result: Olivia Johnson - 85%
2025-09-05 10:56:15,076 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 200 - 9023 bytes
2025-09-05 10:56:15,077 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:56:15] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 10:56:24,954 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 10:56:24,954 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '5036', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarySdiWrRmuBV54HHDo', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:56:24,954 - app.main - INFO - [main.py:46] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarySdiWrRmuBV54HHDo
2025-09-05 10:56:24,954 - app.main - INFO - [main.py:47] - log_request_info() - 📊 Content-Length: 5036
2025-09-05 10:56:24,956 - app.main - INFO - [main.py:49] - log_request_info() - 📎 Files: ['Baisheng_Song_Resume.pdf']
2025-09-05 10:56:24,956 - app.main - INFO - [main.py:55] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-05 10:56:24,957 - app.main - INFO - [main.py:92] - process_single_file() - 🚀 [Thread-6147420160] Starting processing file: Baisheng_Song_Resume.pdf
2025-09-05 10:56:24,957 - app.main - DEBUG - [main.py:95] - process_single_file() - 📋 [Thread-6147420160] File details - Name: Baisheng_Song_Resume.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 10:56:24,957 - app.main - DEBUG - [main.py:98] - process_single_file() - 🔍 [Thread-6147420160] Validating file type...
2025-09-05 10:56:24,957 - app.main - DEBUG - [main.py:110] - process_single_file() - 💾 [Thread-6147420160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_105624_6147420160_Baisheng_Song_Resume.pdf
2025-09-05 10:56:24,958 - app.main - INFO - [main.py:112] - process_single_file() - ✅ [Thread-6147420160] File saved successfully
2025-09-05 10:56:24,958 - app.main - DEBUG - [main.py:115] - process_single_file() - 🔍 [Thread-6147420160] Validating PDF structure...
2025-09-05 10:56:24,959 - app.main - INFO - [main.py:125] - process_single_file() - ✅ [Thread-6147420160] PDF validation passed
2025-09-05 10:56:24,959 - app.main - DEBUG - [main.py:128] - process_single_file() - 📄 [Thread-6147420160] Extracting text from PDF...
2025-09-05 10:56:24,966 - app.main - INFO - [main.py:143] - process_single_file() - ✅ [Thread-6147420160] Text extracted successfully - 3471 characters
2025-09-05 10:56:24,966 - app.main - INFO - [main.py:148] - process_single_file() - 🤖 [Thread-6147420160] Starting AI analysis with Qwen...
2025-09-05 10:56:24,966 - app.main - DEBUG - [main.py:149] - process_single_file() - 📊 [Thread-6147420160] Job description length: 17 chars
2025-09-05 10:56:24,966 - app.main - DEBUG - [main.py:150] - process_single_file() - 📊 [Thread-6147420160] Resume text length: 3471 chars
2025-09-05 10:56:24,990 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-303a83b8-e401-45cd-af6a-283dd79ad787', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nBaisheng Song\n London, UK \x7f [email] \x7f [phone] \x7f [LinkedIn] \x7f [GitHub]\nProfessional Summary\nSenior Software Engineer with 9+ years of experience designing and building high-performance trading systems,\ndata platforms, and risk modeling frameworks across hedge funds, investment management, and financial\ntechnology. Proven ability to lead development of scalable, low-latency infrastructure and collaborate closely with\nquantitative researchers, traders, and risk teams. Strong expertise in Python, algorithms, and time series data,\nwith additional experience in C++ and distributed systems. Adept at translating complex financial strategies into\nrobust, production-grade code with rigorous risk and compliance standards.\nProfessional Experience\nOakNorth, London — Senior Software Engineer    Jan 2020 – Present\n- Led development of an impact model framework to forecast climate and credit risk, incorporating stress testing\nand scenario analysis.\n- Built data integration workflows and APIs enabling real-time ingestion of external and client-provided datasets;\noptimized pipelines for performance and reliability.\n- Designed and developed a federated API platform to unify access to distributed financial and market data\nsources.\n- Partnered with quantitative analysts and product managers to deliver scalable Python-based data processing\nsystems, ensuring quality, compliance, and resilience.\n- Championed code quality, CI/CD pipelines, and testing frameworks to ensure maintainability and robustness.\nBloomberg, London — Senior Software Engineer    Aug 2016 – Dec 2019\n- Designed and implemented FX and IRS order book systems with a distributed matching algorithm, enabling\nhigh-throughput, low-latency primary market trading.\n- Led cross-business-unit initiative to deliver a multi-asset auction platform (government bonds, repo, FX).\n- Developed a trade reporting platform handling large-scale financial transactions with strict latency and\ncompliance requirements.\n- Acted as a technical representative for the fixed-income trading group, building DevX tools and interfacing with\nresearch, operations, and product stakeholders.\n- Optimized C++ and Python codebases for performance and reliability, focusing on algorithms, memory\nefficiency, and concurrency.\nBlackRock, London — Software Engineer    Apr 2015 – Aug 2016\n- Built quantitative algorithms and frameworks to enable passive fixed-income portfolio management at scale.\n- Designed software to process time series financial data for strategy backtesting and risk analysis.\n- Partnered with portfolio managers to translate financial models into production-grade code.\nEducation\nBSc Computer Science, First Class Honours — [University Name], [Year]\nTechnical Skills\nProgramming: Python (advanced), C++ (strong), Java, Rust (familiar)\nLibraries: pandas, numpy, scipy, SQL/NoSQL\nSystems: Linux, distributed systems, APIs, CI/CD, testing frameworks\nDomains: Systematic trading, risk modeling, financial data, time series analysis\nOther: Cloud computing (AWS/GCP), version control (Git), performance optimization\nSelected Achievements\n- Designed real-time trading infrastructure at Bloomberg supporting sub-millisecond order execution.\n\n\n--- Page 2 ---\n- Built risk and scenario analysis frameworks at OakNorth, enabling regulatory-grade climate and credit risk\nforecasting.\n- Delivered multi-asset trading platforms used by institutional clients, integrating compliance and operational\nsafeguards.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 10:56:24,990 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 10:56:24,991 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 10:56:24,991 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10f976e50>
2025-09-05 10:56:24,991 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 10:56:24,991 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 10:56:24,991 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 10:56:24,991 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 10:56:24,991 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 10:56:24,991 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 10:56:24,991 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x10f593f50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 10:56:25,061 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10f977c50>
2025-09-05 10:56:25,061 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 10:56:25,061 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 10:56:25,061 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 10:56:25,062 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 10:56:25,062 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 10:56:29,102 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 10:56:30,986 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'69da8d81-0e22-9e7e-b259-e2172dc7c79e'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'5868'), (b'req-arrive-time', b'1757040985154'), (b'resp-start-time', b'1757040991023'), (b'x-envoy-upstream-service-time', b'5865'), (b'set-cookie', b'acw_tc=69da8d81-0e22-9e7e-b259-e2172dc7c79efc497c4d5cf64f6587633ded1616ce19;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 02:56:30 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 10:56:30,986 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 10:56:30,986 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 10:56:30,986 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 10:56:30,986 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 10:56:30,987 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 10:56:30,987 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '69da8d81-0e22-9e7e-b259-e2172dc7c79e', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '5868', 'req-arrive-time': '1757040985154', 'resp-start-time': '1757040991023', 'x-envoy-upstream-service-time': '5865', 'set-cookie': 'acw_tc=69da8d81-0e22-9e7e-b259-e2172dc7c79efc497c4d5cf64f6587633ded1616ce19;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 02:56:30 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 10:56:30,987 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 69da8d81-0e22-9e7e-b259-e2172dc7c79e
2025-09-05 10:56:30,987 - app.main - INFO - [main.py:154] - process_single_file() - ✅ [Thread-6147420160] AI analysis completed successfully
2025-09-05 10:56:30,987 - app.main - DEBUG - [main.py:155] - process_single_file() - 📊 [Thread-6147420160] Analysis result - Candidate: Baisheng Song, Score: 88
2025-09-05 10:56:30,987 - app.main - DEBUG - [main.py:189] - process_single_file() - 🗑️ [Thread-6147420160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_105624_6147420160_Baisheng_Song_Resume.pdf
2025-09-05 10:56:30,987 - app.main - INFO - [main.py:191] - process_single_file() - ✅ [Thread-6147420160] File processing completed successfully for: Baisheng_Song_Resume.pdf
2025-09-05 10:56:30,987 - app.main - DEBUG - [main.py:209] - process_single_file() - 📊 [Thread-6147420160] Returning result: Baisheng Song - 88%
2025-09-05 10:56:30,988 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 200 - 5535 bytes
2025-09-05 10:56:30,988 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:56:30] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 10:56:31,493 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 10:56:31,498 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 10:56:53,813 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 10:56:54,408 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 10:56:54,416 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 10:57:02,338 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 10:57:02,339 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 10:57:02,343 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 10:57:02,344 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:57:02] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 10:57:02,370 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 10:57:02,371 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1756953860.6670468-21131-2280592960"', 'If-Modified-Since': 'Thu, 04 Sep 2025 02:44:20 GMT'}
2025-09-05 10:57:02,373 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 10:57:02,374 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040950.3264692-48522-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:55:50 GMT'}
2025-09-05 10:57:02,375 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 21131 bytes
2025-09-05 10:57:02,376 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:57:02] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 10:57:02,377 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 304 - 48522 bytes
2025-09-05 10:57:02,378 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:57:02] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 10:57:02,406 - app.main - INFO - [main.py:43] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 10:57:02,406 - app.main - INFO - [main.py:44] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 10:57:02,407 - app.main - INFO - [main.py:59] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 10:57:02,408 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 10:57:02] "GET /api/health HTTP/1.1" 200 -
2025-09-05 10:57:32,953 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 10:57:33,573 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 10:57:33,579 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 10:57:58,949 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 10:57:59,464 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 10:57:59,469 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 10:58:31,935 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/qwen_analyzer.py', reloading
2025-09-05 10:58:32,483 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 10:58:32,489 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 10:59:42,453 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/qwen_analyzer.py', reloading
2025-09-05 10:59:42,950 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 10:59:42,954 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:00:27,570 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:00:28,135 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:00:28,143 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:01:19,974 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:01:20,501 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:01:20,507 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:01:44,870 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:01:45,398 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:01:45,402 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:02:18,921 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:02:19,471 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:02:19,479 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:02:49,913 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:02:50,449 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:02:50,454 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:03:13,755 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:03:14,283 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:03:14,290 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:03:38,655 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:03:39,211 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:03:39,216 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:04:02,538 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:04:03,012 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:04:03,017 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:05:27,236 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:05:27,722 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:05:27,726 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:05:47,025 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:05:47,028 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:05:47,033 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:05:47,033 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:05:47] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:05:47,054 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:05:47,055 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1756953860.6670468-21131-2280592960"', 'If-Modified-Since': 'Thu, 04 Sep 2025 02:44:20 GMT'}
2025-09-05 11:05:47,058 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 21131 bytes
2025-09-05 11:05:47,059 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:05:47,059 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:05:47] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:05:47,059 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040950.3264692-48522-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:55:50 GMT'}
2025-09-05 11:05:47,062 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 48522 bytes
2025-09-05 11:05:47,062 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:05:47] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:05:47,066 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:05:47,066 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:05:47,066 - app.main - DEBUG - [main.py:489] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:05:47,067 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:05:47,068 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:05:47] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:05:53,436 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:05:53,436 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '5036', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryalupeiyCVT7rcY1g', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:05:53,436 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryalupeiyCVT7rcY1g
2025-09-05 11:05:53,436 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 5036
2025-09-05 11:05:53,438 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['Baisheng_Song_Resume.pdf']
2025-09-05 11:05:53,438 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-05 11:05:53,438 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:05:53,438 - app.main - INFO - [main.py:365] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-05 11:05:53,438 - app.main - DEBUG - [main.py:366] - upload_resume() - 📎 File names: ['Baisheng_Song_Resume.pdf']
2025-09-05 11:05:53,438 - app.main - INFO - [main.py:378] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-05 11:05:53,439 - app.main - DEBUG - [main.py:382] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:05:53,439 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6176681984] Starting processing file: Baisheng_Song_Resume.pdf
2025-09-05 11:05:53,439 - app.main - INFO - [main.py:388] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-05 11:05:53,439 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6176681984] File details - Name: Baisheng_Song_Resume.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:05:53,439 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6176681984] Validating file type...
2025-09-05 11:05:53,439 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6176681984] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110553_6176681984_Baisheng_Song_Resume.pdf
2025-09-05 11:05:53,440 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6176681984] File saved successfully
2025-09-05 11:05:53,440 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6176681984] Validating PDF structure...
2025-09-05 11:05:53,444 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6176681984] PDF validation passed
2025-09-05 11:05:53,445 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6176681984] Extracting text from PDF...
2025-09-05 11:05:53,456 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6176681984] Text extracted successfully - 3471 characters
2025-09-05 11:05:53,456 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6176681984] Starting AI analysis with Qwen...
2025-09-05 11:05:53,456 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6176681984] Job description length: 17 chars
2025-09-05 11:05:53,457 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6176681984] Resume text length: 3471 chars
2025-09-05 11:05:53,457 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:05:53,457 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 3471 chars
2025-09-05 11:05:53,586 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c63292a6-80f2-49c5-a7f2-109b5cab7171', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nBaisheng Song\n London, UK \x7f [email] \x7f [phone] \x7f [LinkedIn] \x7f [GitHub]\nProfessional Summary\nSenior Software Engineer with 9+ years of experience designing and building high-performance trading systems,\ndata platforms, and risk modeling frameworks across hedge funds, investment management, and financial\ntechnology. Proven ability to lead development of scalable, low-latency infrastructure and collaborate closely with\nquantitative researchers, traders, and risk teams. Strong expertise in Python, algorithms, and time series data,\nwith additional experience in C++ and distributed systems. Adept at translating complex financial strategies into\nrobust, production-grade code with rigorous risk and compliance standards.\nProfessional Experience\nOakNorth, London — Senior Software Engineer    Jan 2020 – Present\n- Led development of an impact model framework to forecast climate and credit risk, incorporating stress testing\nand scenario analysis.\n- Built data integration workflows and APIs enabling real-time ingestion of external and client-provided datasets;\noptimized pipelines for performance and reliability.\n- Designed and developed a federated API platform to unify access to distributed financial and market data\nsources.\n- Partnered with quantitative analysts and product managers to deliver scalable Python-based data processing\nsystems, ensuring quality, compliance, and resilience.\n- Championed code quality, CI/CD pipelines, and testing frameworks to ensure maintainability and robustness.\nBloomberg, London — Senior Software Engineer    Aug 2016 – Dec 2019\n- Designed and implemented FX and IRS order book systems with a distributed matching algorithm, enabling\nhigh-throughput, low-latency primary market trading.\n- Led cross-business-unit initiative to deliver a multi-asset auction platform (government bonds, repo, FX).\n- Developed a trade reporting platform handling large-scale financial transactions with strict latency and\ncompliance requirements.\n- Acted as a technical representative for the fixed-income trading group, building DevX tools and interfacing with\nresearch, operations, and product stakeholders.\n- Optimized C++ and Python codebases for performance and reliability, focusing on algorithms, memory\nefficiency, and concurrency.\nBlackRock, London — Software Engineer    Apr 2015 – Aug 2016\n- Built quantitative algorithms and frameworks to enable passive fixed-income portfolio management at scale.\n- Designed software to process time series financial data for strategy backtesting and risk analysis.\n- Partnered with portfolio managers to translate financial models into production-grade code.\nEducation\nBSc Computer Science, First Class Honours — [University Name], [Year]\nTechnical Skills\nProgramming: Python (advanced), C++ (strong), Java, Rust (familiar)\nLibraries: pandas, numpy, scipy, SQL/NoSQL\nSystems: Linux, distributed systems, APIs, CI/CD, testing frameworks\nDomains: Systematic trading, risk modeling, financial data, time series analysis\nOther: Cloud computing (AWS/GCP), version control (Git), performance optimization\nSelected Achievements\n- Designed real-time trading infrastructure at Bloomberg supporting sub-millisecond order execution.\n\n\n--- Page 2 ---\n- Built risk and scenario analysis frameworks at OakNorth, enabling regulatory-grade climate and credit risk\nforecasting.\n- Delivered multi-asset trading platforms used by institutional clients, integrating compliance and operational\nsafeguards.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:05:53,597 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:05:53,597 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:05:53,598 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bd7cd70>
2025-09-05 11:05:53,598 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:05:53,598 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:05:53,598 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:05:53,598 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:05:53,598 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:05:53,598 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:05:53,598 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1073a27b0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:05:53,671 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10bb3d310>
2025-09-05 11:05:53,671 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:05:53,671 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:05:53,671 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:05:53,671 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:05:53,671 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:05:59,059 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'0a140e07-07f4-997b-b7c9-909c4d4273a8'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'5352'), (b'req-arrive-time', b'1757041553769'), (b'resp-start-time', b'1757041559121'), (b'x-envoy-upstream-service-time', b'5350'), (b'set-cookie', b'acw_tc=0a140e07-07f4-997b-b7c9-909c4d4273a8a4266bf390321da4d8b2c447da85582a;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:05:58 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:05:59,061 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:05:59,061 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:05:59,062 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:05:59,062 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:05:59,062 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:05:59,062 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '0a140e07-07f4-997b-b7c9-909c4d4273a8', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '5352', 'req-arrive-time': '1757041553769', 'resp-start-time': '1757041559121', 'x-envoy-upstream-service-time': '5350', 'set-cookie': 'acw_tc=0a140e07-07f4-997b-b7c9-909c4d4273a8a4266bf390321da4d8b2c447da85582a;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:05:58 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:05:59,062 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 0a140e07-07f4-997b-b7c9-909c4d4273a8
2025-09-05 11:05:59,086 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:05:59,087 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Baisheng Song, Score: 92
2025-09-05 11:05:59,087 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6176681984] AI analysis completed successfully
2025-09-05 11:05:59,087 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6176681984] Analysis result - Candidate: Baisheng Song, Score: 92
2025-09-05 11:05:59,087 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6176681984] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110553_6176681984_Baisheng_Song_Resume.pdf
2025-09-05 11:05:59,087 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6176681984] File processing completed successfully for: Baisheng_Song_Resume.pdf
2025-09-05 11:05:59,087 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6176681984] Saving successful result to cache
2025-09-05 11:05:59,087 - app.main - DEBUG - [main.py:98] - load_cached_responses() - 📂 No cache file found, starting with empty cache
2025-09-05 11:05:59,088 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 1
2025-09-05 11:05:59,088 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Baisheng Song - 92%
2025-09-05 11:05:59,088 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6176681984] Returning result: Baisheng Song - 92%
2025-09-05 11:05:59,088 - app.main - INFO - [main.py:398] - upload_resume() - ✅ Task 1/1 completed: Baisheng_Song_Resume.pdf - success
2025-09-05 11:05:59,088 - app.main - INFO - [main.py:412] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-05 11:05:59,088 - app.main - INFO - [main.py:418] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-05 11:05:59,088 - app.main - DEBUG - [main.py:429] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:05:59,088 - app.main - INFO - [main.py:434] - upload_resume() - 🏆 Top candidate: Baisheng Song with 92% match
2025-09-05 11:05:59,088 - app.main - DEBUG - [main.py:455] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-05 11:05:59,088 - app.main - INFO - [main.py:471] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:05:59,088 - app.main - DEBUG - [main.py:472] - upload_resume() - 📊 Response size: 5014 characters
2025-09-05 11:05:59,089 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 5277 bytes
2025-09-05 11:05:59,089 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:05:59] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:06:15,553 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/qwen_analyzer.py', reloading
2025-09-05 11:06:16,095 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:06:16,101 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:06:46,532 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:06:47,072 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:06:47,076 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:06:48,320 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:06:48,321 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:06:48,326 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:06:48,326 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:06:48] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:06:48,345 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:06:48,346 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1756953860.6670468-21131-2280592960"', 'If-Modified-Since': 'Thu, 04 Sep 2025 02:44:20 GMT'}
2025-09-05 11:06:48,350 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 21131 bytes
2025-09-05 11:06:48,351 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:06:48] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:06:48,353 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:06:48,353 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040950.3264692-48522-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:55:50 GMT'}
2025-09-05 11:06:48,354 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 48522 bytes
2025-09-05 11:06:48,355 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:06:48] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:06:48,360 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:06:48,360 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:06:48,361 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:06:48,361 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:06:48,362 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:06:48] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:06:53,946 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:06:53,946 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '5036', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarytgTKTRvL7q9BSWUg', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:06:53,946 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarytgTKTRvL7q9BSWUg
2025-09-05 11:06:53,946 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 5036
2025-09-05 11:06:53,948 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['Baisheng_Song_Resume.pdf']
2025-09-05 11:06:53,948 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-05 11:06:53,949 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:06:53,949 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: True
2025-09-05 11:06:53,949 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['Baisheng_Song_Resume.pdf']
2025-09-05 11:06:53,949 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-05 11:06:53,950 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:06:53,950 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6183350272] Starting processing file: Baisheng_Song_Resume.pdf
2025-09-05 11:06:53,950 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-05 11:06:53,950 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6183350272] File details - Name: Baisheng_Song_Resume.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:06:53,950 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6183350272] Validating file type...
2025-09-05 11:06:53,951 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6183350272] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110653_6183350272_Baisheng_Song_Resume.pdf
2025-09-05 11:06:53,952 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6183350272] File saved successfully
2025-09-05 11:06:53,952 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6183350272] Validating PDF structure...
2025-09-05 11:06:53,954 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6183350272] PDF validation passed
2025-09-05 11:06:53,954 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6183350272] Extracting text from PDF...
2025-09-05 11:06:53,967 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6183350272] Text extracted successfully - 3471 characters
2025-09-05 11:06:53,967 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6183350272] Mock mode - attempting to use cached response
2025-09-05 11:06:53,967 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 1 cached responses
2025-09-05 11:06:53,968 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Baisheng Song - 90%
2025-09-05 11:06:53,968 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: afe44707
2025-09-05 11:06:53,968 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6183350272] Using cached response: Mock-Baisheng Song
2025-09-05 11:06:53,968 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6183350272] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110653_6183350272_Baisheng_Song_Resume.pdf
2025-09-05 11:06:53,968 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6183350272] File processing completed successfully for: Baisheng_Song_Resume.pdf
2025-09-05 11:06:53,968 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6183350272] Mock result - not saving to cache
2025-09-05 11:06:53,968 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6183350272] Returning result: Mock-Baisheng Song - 90%
2025-09-05 11:06:53,968 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: Baisheng_Song_Resume.pdf - success
2025-09-05 11:06:53,968 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-05 11:06:53,968 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-05 11:06:53,968 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:06:53,968 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Baisheng Song with 90% match
2025-09-05 11:06:53,969 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-05 11:06:53,969 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:06:53,969 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 5024 characters
2025-09-05 11:06:53,969 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 5287 bytes
2025-09-05 11:06:53,969 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:06:53] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:07:05,392 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:07:05,993 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:07:05,997 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:07:06,196 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:07:06,196 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:07:06,200 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:07:06,201 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:07:06] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:07:06,218 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:07:06,218 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1756953860.6670468-21131-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Thu, 04 Sep 2025 02:44:20 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:07:06,219 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:07:06,220 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757040950.3264692-48522-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:55:50 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:07:06,220 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 21131 bytes
2025-09-05 11:07:06,221 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:07:06] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:07:06,221 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 48522 bytes
2025-09-05 11:07:06,221 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:07:06] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:07:06,227 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:07:06,228 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:07:06,228 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:07:06,228 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:07:06,228 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:07:06] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:07:14,038 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:07:14,038 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '25549', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarycGAxzUKn8Co8huLB', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:07:14,038 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarycGAxzUKn8Co8huLB
2025-09-05 11:07:14,038 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 25549
2025-09-05 11:07:14,043 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:07:14,043 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-05 11:07:14,043 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:07:14,043 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 17, Mock: False
2025-09-05 11:07:14,043 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:07:14,043 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-05 11:07:14,043 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:07:14,044 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6173814784] Starting processing file: resume_10.pdf
2025-09-05 11:07:14,044 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_9.pdf
2025-09-05 11:07:14,044 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_8.pdf
2025-09-05 11:07:14,044 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6173814784] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:07:14,045 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_7.pdf
2025-09-05 11:07:14,045 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_6.pdf
2025-09-05 11:07:14,045 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:07:14,045 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-05 11:07:14,045 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:07:14,045 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6173814784] Validating file type...
2025-09-05 11:07:14,046 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:07:14,046 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:07:14,046 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:07:14,046 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:07:14,046 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6173814784] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110714_6173814784_resume_10.pdf
2025-09-05 11:07:14,046 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:07:14,046 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:07:14,046 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110714_6325039104_resume_9.pdf
2025-09-05 11:07:14,046 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110714_6341865472_resume_8.pdf
2025-09-05 11:07:14,046 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110714_6358691840_resume_7.pdf
2025-09-05 11:07:14,047 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110714_6375518208_resume_6.pdf
2025-09-05 11:07:14,048 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:07:14,048 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:07:14,048 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:07:14,048 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:07:14,049 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:07:14,049 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6173814784] File saved successfully
2025-09-05 11:07:14,049 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:07:14,049 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:07:14,049 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:07:14,049 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6173814784] Validating PDF structure...
2025-09-05 11:07:14,051 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:07:14,051 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:07:14,052 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6173814784] PDF validation passed
2025-09-05 11:07:14,052 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6173814784] Extracting text from PDF...
2025-09-05 11:07:14,054 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:07:14,054 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:07:14,057 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 873 characters
2025-09-05 11:07:14,057 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:07:14,057 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:07:14,057 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:07:14,058 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6375518208] Starting AI analysis with Qwen...
2025-09-05 11:07:14,058 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:07:14,062 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6375518208] Job description length: 17 chars
2025-09-05 11:07:14,066 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 870 characters
2025-09-05 11:07:14,066 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6173814784] Text extracted successfully - 1093 characters
2025-09-05 11:07:14,066 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6375518208] Resume text length: 873 chars
2025-09-05 11:07:14,067 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6325039104] Starting AI analysis with Qwen...
2025-09-05 11:07:14,067 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6173814784] Starting AI analysis with Qwen...
2025-09-05 11:07:14,067 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:07:14,067 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6325039104] Job description length: 17 chars
2025-09-05 11:07:14,073 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 1125 characters
2025-09-05 11:07:14,073 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 1070 characters
2025-09-05 11:07:14,073 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6173814784] Job description length: 17 chars
2025-09-05 11:07:14,073 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 873 chars
2025-09-05 11:07:14,073 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6325039104] Resume text length: 870 chars
2025-09-05 11:07:14,073 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6341865472] Starting AI analysis with Qwen...
2025-09-05 11:07:14,073 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6358691840] Starting AI analysis with Qwen...
2025-09-05 11:07:14,073 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6173814784] Resume text length: 1093 chars
2025-09-05 11:07:14,074 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:07:14,074 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1093 chars
2025-09-05 11:07:14,074 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:07:14,074 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6341865472] Job description length: 17 chars
2025-09-05 11:07:14,074 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 870 chars
2025-09-05 11:07:14,074 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6358691840] Job description length: 17 chars
2025-09-05 11:07:14,075 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6341865472] Resume text length: 1125 chars
2025-09-05 11:07:14,075 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6358691840] Resume text length: 1070 chars
2025-09-05 11:07:14,075 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:07:14,075 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:07:14,075 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1125 chars
2025-09-05 11:07:14,075 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1070 chars
2025-09-05 11:07:14,201 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-411a4953-38b7-44ed-a241-d490fcb35148', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nJohn Lee\n Email: john.lee@gmail.com | Phone: +1-869-955-1818\nAddress: 416 Main Street, London, UK\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Apple (2016 - 2018)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Google (2018 - 2019)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Stanford University (2010 - 2015)\nSkills\nMachine Learning, REST APIs, JavaScript, AWS, Go, Node.js, Python, GraphQL\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:07:14,201 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-7ef2ee1e-e11b-4c7b-a7da-96ad6d6b2a28', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Brown\n Email: alice.brown@gmail.com | Phone: +1-396-365-3977\nAddress: 185 Main Street, New York, NY\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Apple (2018 - 2019)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSoftware Engineer, Google (2020 - 2021)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nData Engineer, Airbnb (2022 - 2023)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Imperial College London (2013 - 2015)\nSkills\nKubernetes, REST APIs, GraphQL, Microservices, JavaScript, Java, AWS, Node.js\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:07:14,201 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e5586c9e-73b6-47c2-829a-d52a81034ab3', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Lee\n Email: alice.lee@gmail.com | Phone: +1-345-265-4958\nAddress: 188 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSenior Software Engineer, Bloomberg (2016 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nSoftware Engineer, Apple (2018 - 2019)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Airbnb (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Stanford University (2011 - 2016)\nSkills\nMachine Learning, GraphQL, AWS, React, Microservices, Kubernetes, SQL, TypeScript\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:07:14,201 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-46386dd4-347b-4af0-be32-42d1517f2e6d', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nEmily Taylor\n Email: emily.taylor@gmail.com | Phone: +1-751-470-4245\nAddress: 848 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Airbnb (2016 - 2018)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Apple (2018 - 2020)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nBackend Engineer, Stripe (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, MIT (2010 - 2016)\nSkills\nGraphQL, Machine Learning, AWS, JavaScript, TypeScript, C++, Go, React\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:07:14,201 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1fe183fc-4bd4-430b-af53-5fadbfd64eac', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nDavid Lee\n Email: david.lee@gmail.com | Phone: +1-788-771-2191\nAddress: 684 Main Street, New York, NY\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Airbnb (2016 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nData Engineer, Amazon (2018 - 2020)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Carnegie Mellon (2010 - 2016)\nSkills\nGraphQL, Node.js, Python, C++, Kubernetes, SQL, REST APIs, Docker\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:07:14,218 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:07:14,218 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:07:14,218 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:07:14,218 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:07:14,218 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:07:14,219 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:07:14,219 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:07:14,219 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:07:14,219 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:07:14,219 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:07:14,219 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c1b52b0>
2025-09-05 11:07:14,219 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c1b0f50>
2025-09-05 11:07:14,219 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,219 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c1b1090>
2025-09-05 11:07:14,219 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,219 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c1a8640>
2025-09-05 11:07:14,219 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c1a88a0>
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:07:14,220 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x10a4b7140> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:07:14,220 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:14,221 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:07:14,221 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x10a4b71d0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:07:14,221 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:07:14,221 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:07:14,221 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x10a4b7260> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:07:14,221 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x10a4b7020> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:07:14,221 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x10a4b70b0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:07:14,329 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10af479b0>
2025-09-05 11:07:14,329 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:07:14,329 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:14,329 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:07:14,329 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:14,329 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:07:14,334 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c11ecf0>
2025-09-05 11:07:14,334 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:07:14,334 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c11e580>
2025-09-05 11:07:14,334 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:14,334 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:07:14,334 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:07:14,334 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:14,334 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:14,334 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:07:14,334 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:07:14,334 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:14,335 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:07:14,340 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c184e50>
2025-09-05 11:07:14,340 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:07:14,340 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:14,340 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:07:14,340 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:14,340 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:07:14,342 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c184a50>
2025-09-05 11:07:14,342 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:07:14,342 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:14,342 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:07:14,342 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:14,342 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:07:18,257 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'815d180c-7ab0-9f5e-9f3b-b85de99d2337'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3883'), (b'req-arrive-time', b'1757041634429'), (b'resp-start-time', b'1757041638313'), (b'x-envoy-upstream-service-time', b'3879'), (b'set-cookie', b'acw_tc=815d180c-7ab0-9f5e-9f3b-b85de99d23379c4db1fd498cee46ff166541eff62e45;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:07:18 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:07:18,258 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:07:18,259 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:07:18,259 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:07:18,259 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:07:18,259 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:07:18,259 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '815d180c-7ab0-9f5e-9f3b-b85de99d2337', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3883', 'req-arrive-time': '1757041634429', 'resp-start-time': '1757041638313', 'x-envoy-upstream-service-time': '3879', 'set-cookie': 'acw_tc=815d180c-7ab0-9f5e-9f3b-b85de99d23379c4db1fd498cee46ff166541eff62e45;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:07:18 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:07:18,259 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 815d180c-7ab0-9f5e-9f3b-b85de99d2337
2025-09-05 11:07:18,275 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:07:18,277 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Brown, Score: 75
2025-09-05 11:07:18,277 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6173814784] AI analysis completed successfully
2025-09-05 11:07:18,278 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6173814784] Analysis result - Candidate: Alice Brown, Score: 75
2025-09-05 11:07:18,278 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6173814784] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110714_6173814784_resume_10.pdf
2025-09-05 11:07:18,281 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6173814784] File processing completed successfully for: resume_10.pdf
2025-09-05 11:07:18,281 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6173814784] Saving successful result to cache
2025-09-05 11:07:18,283 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 1 cached responses
2025-09-05 11:07:18,285 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 2
2025-09-05 11:07:18,285 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Brown - 75%
2025-09-05 11:07:18,285 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6173814784] Returning result: Alice Brown - 75%
2025-09-05 11:07:18,286 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6173814784] Starting processing file: resume_5.pdf
2025-09-05 11:07:18,286 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_10.pdf - success
2025-09-05 11:07:18,287 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6173814784] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:07:18,288 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6173814784] Validating file type...
2025-09-05 11:07:18,288 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6173814784] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110718_6173814784_resume_5.pdf
2025-09-05 11:07:18,290 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6173814784] File saved successfully
2025-09-05 11:07:18,291 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6173814784] Validating PDF structure...
2025-09-05 11:07:18,292 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6173814784] PDF validation passed
2025-09-05 11:07:18,292 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6173814784] Extracting text from PDF...
2025-09-05 11:07:18,295 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6173814784] Text extracted successfully - 922 characters
2025-09-05 11:07:18,295 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6173814784] Starting AI analysis with Qwen...
2025-09-05 11:07:18,295 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6173814784] Job description length: 17 chars
2025-09-05 11:07:18,295 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6173814784] Resume text length: 922 chars
2025-09-05 11:07:18,295 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:07:18,295 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 922 chars
2025-09-05 11:07:18,336 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ab410ce8-87e8-4871-b144-3112fd86cfd3', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nOlivia Johnson\n Email: olivia.johnson@gmail.com | Phone: +1-745-334-3029\nAddress: 544 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSoftware Engineer, Bloomberg (2017 - 2018)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nFull Stack Developer, Bloomberg (2019 - 2021)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Carnegie Mellon (2012 - 2016)\nSkills\nC++, Machine Learning, REST APIs, Node.js, Docker, Kubernetes, React, Java\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:07:18,336 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:07:18,337 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:07:18,337 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c195400>
2025-09-05 11:07:18,337 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:18,337 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:18,337 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:07:18,337 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:18,337 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:18,337 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:07:18,337 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x10c1c4680> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:07:18,418 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c1958b0>
2025-09-05 11:07:18,418 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:07:18,418 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:18,418 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:07:18,418 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:18,418 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:07:18,919 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'b4014318-e5f4-9262-8756-a6fe0d996d25'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4552'), (b'req-arrive-time', b'1757041634425'), (b'resp-start-time', b'1757041638978'), (b'x-envoy-upstream-service-time', b'4551'), (b'set-cookie', b'acw_tc=b4014318-e5f4-9262-8756-a6fe0d996d250ad0a527e1863fcb17fc2b21271ad2fe;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:07:18 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:07:18,919 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:07:18,919 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:07:18,920 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:07:18,920 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:07:18,920 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:07:18,920 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'b4014318-e5f4-9262-8756-a6fe0d996d25', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4552', 'req-arrive-time': '1757041634425', 'resp-start-time': '1757041638978', 'x-envoy-upstream-service-time': '4551', 'set-cookie': 'acw_tc=b4014318-e5f4-9262-8756-a6fe0d996d250ad0a527e1863fcb17fc2b21271ad2fe;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:07:18 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:07:18,920 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: b4014318-e5f4-9262-8756-a6fe0d996d25
2025-09-05 11:07:18,920 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:07:18,920 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Emily Taylor, Score: 85
2025-09-05 11:07:18,921 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6358691840] AI analysis completed successfully
2025-09-05 11:07:18,921 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6358691840] Analysis result - Candidate: Emily Taylor, Score: 85
2025-09-05 11:07:18,921 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110714_6358691840_resume_7.pdf
2025-09-05 11:07:18,921 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_7.pdf
2025-09-05 11:07:18,921 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6358691840] Saving successful result to cache
2025-09-05 11:07:18,921 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 2 cached responses
2025-09-05 11:07:18,922 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 3
2025-09-05 11:07:18,922 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Emily Taylor - 85%
2025-09-05 11:07:18,922 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Emily Taylor - 85%
2025-09-05 11:07:18,922 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_4.pdf
2025-09-05 11:07:18,922 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:07:18,922 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:07:18,922 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110718_6358691840_resume_4.pdf
2025-09-05 11:07:18,924 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:07:18,924 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:07:18,925 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:07:18,925 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:07:18,929 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 889 characters
2025-09-05 11:07:18,929 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6358691840] Starting AI analysis with Qwen...
2025-09-05 11:07:18,929 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6358691840] Job description length: 17 chars
2025-09-05 11:07:18,929 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6358691840] Resume text length: 889 chars
2025-09-05 11:07:18,929 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:07:18,929 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 889 chars
2025-09-05 11:07:18,950 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d9e9b45a-386f-4681-b342-abcc6ee9ce79', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nEmily Miller\n Email: emily.miller@gmail.com | Phone: +1-258-807-8181\nAddress: 518 Main Street, Seattle, WA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Apple (2015 - 2017)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Bloomberg (2017 - 2019)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Oxford University (2010 - 2014)\nSkills\nSQL, Java, Python, Docker, AWS, Microservices, Kubernetes, TypeScript\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:07:18,951 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:07:18,951 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:07:18,951 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c15e890>
2025-09-05 11:07:18,951 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:18,951 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:18,951 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:07:18,951 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:18,951 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:18,951 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:07:18,951 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x10af4f890> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:07:18,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'5462cfd6-e3fe-90af-9085-0c2d1dd993ed'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4588'), (b'req-arrive-time', b'1757041634429'), (b'resp-start-time', b'1757041639018'), (b'x-envoy-upstream-service-time', b'4557'), (b'set-cookie', b'acw_tc=5462cfd6-e3fe-90af-9085-0c2d1dd993edb27cf8c372b87a48f4d505e324e8ae9e;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:07:19 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:07:18,960 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:07:18,960 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:07:18,960 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:07:18,960 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:07:18,960 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:07:18,960 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '5462cfd6-e3fe-90af-9085-0c2d1dd993ed', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4588', 'req-arrive-time': '1757041634429', 'resp-start-time': '1757041639018', 'x-envoy-upstream-service-time': '4557', 'set-cookie': 'acw_tc=5462cfd6-e3fe-90af-9085-0c2d1dd993edb27cf8c372b87a48f4d505e324e8ae9e;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:07:19 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:07:18,960 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 5462cfd6-e3fe-90af-9085-0c2d1dd993ed
2025-09-05 11:07:18,960 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:07:18,961 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: John Lee, Score: 75
2025-09-05 11:07:18,961 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6325039104] AI analysis completed successfully
2025-09-05 11:07:18,961 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6325039104] Analysis result - Candidate: John Lee, Score: 75
2025-09-05 11:07:18,961 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110714_6325039104_resume_9.pdf
2025-09-05 11:07:18,961 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_9.pdf
2025-09-05 11:07:18,961 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6325039104] Saving successful result to cache
2025-09-05 11:07:18,961 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 3 cached responses
2025-09-05 11:07:18,961 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 4
2025-09-05 11:07:18,961 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: John Lee - 75%
2025-09-05 11:07:18,961 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: John Lee - 75%
2025-09-05 11:07:18,961 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_3.pdf
2025-09-05 11:07:18,961 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:07:18,961 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:07:18,962 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110718_6325039104_resume_3.pdf
2025-09-05 11:07:18,962 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_9.pdf - success
2025-09-05 11:07:18,962 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:07:18,962 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:07:18,962 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:07:18,962 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:07:18,964 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 902 characters
2025-09-05 11:07:18,964 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6325039104] Starting AI analysis with Qwen...
2025-09-05 11:07:18,964 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6325039104] Job description length: 17 chars
2025-09-05 11:07:18,964 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6325039104] Resume text length: 902 chars
2025-09-05 11:07:18,964 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:07:18,964 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 902 chars
2025-09-05 11:07:18,981 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c6c98457-0739-48a4-a8fb-8aaef061847f', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nOlivia Miller\n Email: olivia.miller@gmail.com | Phone: +1-964-901-9879\nAddress: 568 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nFull Stack Developer, Google (2015 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nData Engineer, Apple (2017 - 2019)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, MIT (2011 - 2016)\nSkills\nGraphQL, Go, REST APIs, Docker, TypeScript, React, Kubernetes, Machine Learning\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:07:18,981 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:07:18,982 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:07:18,982 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c15d390>
2025-09-05 11:07:18,982 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:18,982 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:18,982 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:07:18,982 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:18,982 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:18,982 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:07:18,982 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x10c1c44d0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:07:19,035 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c16e410>
2025-09-05 11:07:19,035 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:07:19,036 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:19,036 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:07:19,036 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:19,036 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:07:19,070 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c1c87d0>
2025-09-05 11:07:19,070 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:07:19,070 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:19,070 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:07:19,070 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:19,070 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:07:19,283 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'6befa256-79fd-92d0-af12-25299e49cc76'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4894'), (b'req-arrive-time', b'1757041634444'), (b'resp-start-time', b'1757041639339'), (b'x-envoy-upstream-service-time', b'4874'), (b'set-cookie', b'acw_tc=6befa256-79fd-92d0-af12-25299e49cc765f957cad73930b819e50a31cd97b82c3;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:07:18 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:07:19,285 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:07:19,286 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:07:19,287 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:07:19,288 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:07:19,288 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:07:19,288 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '6befa256-79fd-92d0-af12-25299e49cc76', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4894', 'req-arrive-time': '1757041634444', 'resp-start-time': '1757041639339', 'x-envoy-upstream-service-time': '4874', 'set-cookie': 'acw_tc=6befa256-79fd-92d0-af12-25299e49cc765f957cad73930b819e50a31cd97b82c3;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:07:18 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:07:19,288 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 6befa256-79fd-92d0-af12-25299e49cc76
2025-09-05 11:07:19,291 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:07:19,291 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: David Lee, Score: 75
2025-09-05 11:07:19,292 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6375518208] AI analysis completed successfully
2025-09-05 11:07:19,292 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6375518208] Analysis result - Candidate: David Lee, Score: 75
2025-09-05 11:07:19,292 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110714_6375518208_resume_6.pdf
2025-09-05 11:07:19,292 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_6.pdf
2025-09-05 11:07:19,292 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6375518208] Saving successful result to cache
2025-09-05 11:07:19,292 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 4 cached responses
2025-09-05 11:07:19,294 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 5
2025-09-05 11:07:19,294 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: David Lee - 75%
2025-09-05 11:07:19,294 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: David Lee - 75%
2025-09-05 11:07:19,294 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_2.pdf
2025-09-05 11:07:19,294 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:07:19,294 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:07:19,294 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110719_6375518208_resume_2.pdf
2025-09-05 11:07:19,295 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:07:19,296 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:07:19,297 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:07:19,298 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:07:19,306 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 1088 characters
2025-09-05 11:07:19,306 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6375518208] Starting AI analysis with Qwen...
2025-09-05 11:07:19,306 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6375518208] Job description length: 17 chars
2025-09-05 11:07:19,306 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6375518208] Resume text length: 1088 chars
2025-09-05 11:07:19,306 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:07:19,306 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1088 chars
2025-09-05 11:07:19,326 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9a0eea20-4b06-4df5-a405-664370939981', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Smith\n Email: alice.smith@gmail.com | Phone: +1-915-210-5038\nAddress: 104 Main Street, Seattle, WA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSenior Software Engineer, Stripe (2016 - 2018)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSoftware Engineer, Airbnb (2018 - 2019)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nBackend Engineer, Apple (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Imperial College London (2010 - 2014)\nSkills\nSQL, C++, React, REST APIs, Docker, AWS, Node.js, Java\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:07:19,328 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:07:19,328 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:07:19,328 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c1c9250>
2025-09-05 11:07:19,328 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:19,328 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:19,328 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:07:19,328 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:19,329 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:19,329 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:07:19,329 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x10c1c5880> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:07:19,383 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'f8f2a206-b25d-9d5b-9906-6bdd554f2863'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4991'), (b'req-arrive-time', b'1757041634451'), (b'resp-start-time', b'1757041639443'), (b'x-envoy-upstream-service-time', b'4977'), (b'set-cookie', b'acw_tc=f8f2a206-b25d-9d5b-9906-6bdd554f28633c2c79bdda0118a04ddaa5aa45761a4c;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:07:19 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:07:19,383 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:07:19,383 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:07:19,383 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:07:19,383 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:07:19,383 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:07:19,383 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'f8f2a206-b25d-9d5b-9906-6bdd554f2863', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4991', 'req-arrive-time': '1757041634451', 'resp-start-time': '1757041639443', 'x-envoy-upstream-service-time': '4977', 'set-cookie': 'acw_tc=f8f2a206-b25d-9d5b-9906-6bdd554f28633c2c79bdda0118a04ddaa5aa45761a4c;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:07:19 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:07:19,383 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: f8f2a206-b25d-9d5b-9906-6bdd554f2863
2025-09-05 11:07:19,384 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:07:19,384 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Lee, Score: 85
2025-09-05 11:07:19,384 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6341865472] AI analysis completed successfully
2025-09-05 11:07:19,384 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6341865472] Analysis result - Candidate: Alice Lee, Score: 85
2025-09-05 11:07:19,384 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110714_6341865472_resume_8.pdf
2025-09-05 11:07:19,384 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_8.pdf
2025-09-05 11:07:19,384 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6341865472] Saving successful result to cache
2025-09-05 11:07:19,384 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 5 cached responses
2025-09-05 11:07:19,384 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 6
2025-09-05 11:07:19,384 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Lee - 85%
2025-09-05 11:07:19,384 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Alice Lee - 85%
2025-09-05 11:07:19,384 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_1.pdf
2025-09-05 11:07:19,384 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_8.pdf - success
2025-09-05 11:07:19,384 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:07:19,384 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_7.pdf - success
2025-09-05 11:07:19,384 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:07:19,385 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_6.pdf - success
2025-09-05 11:07:19,385 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110719_6341865472_resume_1.pdf
2025-09-05 11:07:19,385 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:07:19,385 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:07:19,385 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:07:19,385 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:07:19,386 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 859 characters
2025-09-05 11:07:19,386 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6341865472] Starting AI analysis with Qwen...
2025-09-05 11:07:19,386 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6341865472] Job description length: 17 chars
2025-09-05 11:07:19,386 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6341865472] Resume text length: 859 chars
2025-09-05 11:07:19,386 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:07:19,386 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 859 chars
2025-09-05 11:07:19,400 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-15f6a998-8acc-4910-bbf7-4dfe25420f09', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nJohn Lee\n Email: john.lee@gmail.com | Phone: +1-409-397-2292\nAddress: 580 Main Street, London, UK\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Stripe (2018 - 2020)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Netflix (2020 - 2021)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, UC Berkeley (2010 - 2016)\nSkills\nKubernetes, Node.js, Docker, Microservices, Java, AWS, C++, Go\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:07:19,400 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:07:19,400 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:07:19,401 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c159910>
2025-09-05 11:07:19,401 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:19,401 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:19,401 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:07:19,401 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:19,401 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:07:19,401 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:07:19,401 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x10c1c5d90> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:07:19,425 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c15a2b0>
2025-09-05 11:07:19,425 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:07:19,425 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:19,425 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:07:19,425 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:19,425 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:07:19,477 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10c270230>
2025-09-05 11:07:19,477 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:07:19,477 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:07:19,477 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:07:19,477 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:07:19,477 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:07:22,808 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'f5ff3fcc-641f-939c-ac85-47f5234b120b'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4355'), (b'req-arrive-time', b'1757041638515'), (b'resp-start-time', b'1757041642871'), (b'x-envoy-upstream-service-time', b'4354'), (b'set-cookie', b'acw_tc=f5ff3fcc-641f-939c-ac85-47f5234b120b8b29dbf72450fadfdc0805fd725cd3a7;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:07:22 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:07:22,809 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:07:22,809 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:07:22,809 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:07:22,809 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:07:22,809 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:07:22,810 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'f5ff3fcc-641f-939c-ac85-47f5234b120b', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4355', 'req-arrive-time': '1757041638515', 'resp-start-time': '1757041642871', 'x-envoy-upstream-service-time': '4354', 'set-cookie': 'acw_tc=f5ff3fcc-641f-939c-ac85-47f5234b120b8b29dbf72450fadfdc0805fd725cd3a7;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:07:22 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:07:22,810 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: f5ff3fcc-641f-939c-ac85-47f5234b120b
2025-09-05 11:07:22,810 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:07:22,810 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Olivia Johnson, Score: 85
2025-09-05 11:07:22,810 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6173814784] AI analysis completed successfully
2025-09-05 11:07:22,810 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6173814784] Analysis result - Candidate: Olivia Johnson, Score: 85
2025-09-05 11:07:22,811 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6173814784] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110718_6173814784_resume_5.pdf
2025-09-05 11:07:22,811 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6173814784] File processing completed successfully for: resume_5.pdf
2025-09-05 11:07:22,811 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6173814784] Saving successful result to cache
2025-09-05 11:07:22,811 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 6 cached responses
2025-09-05 11:07:22,812 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 7
2025-09-05 11:07:22,812 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Olivia Johnson - 85%
2025-09-05 11:07:22,812 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6173814784] Returning result: Olivia Johnson - 85%
2025-09-05 11:07:22,812 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_5.pdf - success
2025-09-05 11:07:23,078 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'444b6394-e0f1-9cad-9fb5-87bc610ed3c8'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4006'), (b'req-arrive-time', b'1757041639133'), (b'resp-start-time', b'1757041643140'), (b'x-envoy-upstream-service-time', b'4004'), (b'set-cookie', b'acw_tc=444b6394-e0f1-9cad-9fb5-87bc610ed3c8c3baa99c8f94332febc588cda1d40036;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:07:23 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:07:23,078 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:07:23,078 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:07:23,079 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:07:23,079 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:07:23,079 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:07:23,079 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '444b6394-e0f1-9cad-9fb5-87bc610ed3c8', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4006', 'req-arrive-time': '1757041639133', 'resp-start-time': '1757041643140', 'x-envoy-upstream-service-time': '4004', 'set-cookie': 'acw_tc=444b6394-e0f1-9cad-9fb5-87bc610ed3c8c3baa99c8f94332febc588cda1d40036;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:07:23 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:07:23,079 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 444b6394-e0f1-9cad-9fb5-87bc610ed3c8
2025-09-05 11:07:23,080 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:07:23,080 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Emily Miller, Score: 85
2025-09-05 11:07:23,080 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6358691840] AI analysis completed successfully
2025-09-05 11:07:23,080 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6358691840] Analysis result - Candidate: Emily Miller, Score: 85
2025-09-05 11:07:23,080 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110718_6358691840_resume_4.pdf
2025-09-05 11:07:23,080 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_4.pdf
2025-09-05 11:07:23,080 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6358691840] Saving successful result to cache
2025-09-05 11:07:23,080 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 7 cached responses
2025-09-05 11:07:23,082 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 8
2025-09-05 11:07:23,082 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Emily Miller - 85%
2025-09-05 11:07:23,082 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Emily Miller - 85%
2025-09-05 11:07:23,082 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_4.pdf - success
2025-09-05 11:07:23,429 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'e8d530c4-b397-9e14-8c9f-deec3bb300d8'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4327'), (b'req-arrive-time', b'1757041639167'), (b'resp-start-time', b'1757041643494'), (b'x-envoy-upstream-service-time', b'4325'), (b'set-cookie', b'acw_tc=e8d530c4-b397-9e14-8c9f-deec3bb300d84b93b1a943d1cb54b084b440bcb25f40;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:07:23 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:07:23,429 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:07:23,429 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:07:23,430 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:07:23,430 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:07:23,430 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:07:23,430 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'e8d530c4-b397-9e14-8c9f-deec3bb300d8', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4327', 'req-arrive-time': '1757041639167', 'resp-start-time': '1757041643494', 'x-envoy-upstream-service-time': '4325', 'set-cookie': 'acw_tc=e8d530c4-b397-9e14-8c9f-deec3bb300d84b93b1a943d1cb54b084b440bcb25f40;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:07:23 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:07:23,430 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: e8d530c4-b397-9e14-8c9f-deec3bb300d8
2025-09-05 11:07:23,430 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:07:23,430 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Olivia Miller, Score: 85
2025-09-05 11:07:23,430 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6325039104] AI analysis completed successfully
2025-09-05 11:07:23,430 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6325039104] Analysis result - Candidate: Olivia Miller, Score: 85
2025-09-05 11:07:23,430 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110718_6325039104_resume_3.pdf
2025-09-05 11:07:23,430 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_3.pdf
2025-09-05 11:07:23,431 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6325039104] Saving successful result to cache
2025-09-05 11:07:23,431 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 8 cached responses
2025-09-05 11:07:23,431 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 9
2025-09-05 11:07:23,431 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Olivia Miller - 85%
2025-09-05 11:07:23,431 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Olivia Miller - 85%
2025-09-05 11:07:23,431 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_3.pdf - success
2025-09-05 11:07:24,126 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'c0f239ac-9f0d-999d-bbc1-5d044c2a085b'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4617'), (b'req-arrive-time', b'1757041639571'), (b'resp-start-time', b'1757041644189'), (b'x-envoy-upstream-service-time', b'4616'), (b'set-cookie', b'acw_tc=c0f239ac-9f0d-999d-bbc1-5d044c2a085bcafa16f5d874b77ac60feef451664255;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:07:23 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:07:24,126 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:07:24,126 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:07:24,126 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:07:24,126 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:07:24,127 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:07:24,127 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'c0f239ac-9f0d-999d-bbc1-5d044c2a085b', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4617', 'req-arrive-time': '1757041639571', 'resp-start-time': '1757041644189', 'x-envoy-upstream-service-time': '4616', 'set-cookie': 'acw_tc=c0f239ac-9f0d-999d-bbc1-5d044c2a085bcafa16f5d874b77ac60feef451664255;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:07:23 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:07:24,127 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: c0f239ac-9f0d-999d-bbc1-5d044c2a085b
2025-09-05 11:07:24,127 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:07:24,127 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: John Lee, Score: 75
2025-09-05 11:07:24,127 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6341865472] AI analysis completed successfully
2025-09-05 11:07:24,127 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6341865472] Analysis result - Candidate: John Lee, Score: 75
2025-09-05 11:07:24,127 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110719_6341865472_resume_1.pdf
2025-09-05 11:07:24,127 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_1.pdf
2025-09-05 11:07:24,127 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6341865472] Saving successful result to cache
2025-09-05 11:07:24,128 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 9 cached responses
2025-09-05 11:07:24,128 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 10
2025-09-05 11:07:24,128 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: John Lee - 75%
2025-09-05 11:07:24,128 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: John Lee - 75%
2025-09-05 11:07:24,483 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'80ae0145-5aa1-9d4c-a248-62a1010a7459'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'5025'), (b'req-arrive-time', b'1757041639522'), (b'resp-start-time', b'1757041644547'), (b'x-envoy-upstream-service-time', b'5023'), (b'set-cookie', b'acw_tc=80ae0145-5aa1-9d4c-a248-62a1010a7459a5ab95bb5402f3973c4ebcd0574a7d11;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:07:24 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:07:24,484 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:07:24,485 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:07:24,486 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:07:24,486 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:07:24,486 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:07:24,486 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '80ae0145-5aa1-9d4c-a248-62a1010a7459', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '5025', 'req-arrive-time': '1757041639522', 'resp-start-time': '1757041644547', 'x-envoy-upstream-service-time': '5023', 'set-cookie': 'acw_tc=80ae0145-5aa1-9d4c-a248-62a1010a7459a5ab95bb5402f3973c4ebcd0574a7d11;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:07:24 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:07:24,486 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 80ae0145-5aa1-9d4c-a248-62a1010a7459
2025-09-05 11:07:24,487 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:07:24,487 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Smith, Score: 75
2025-09-05 11:07:24,487 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6375518208] AI analysis completed successfully
2025-09-05 11:07:24,488 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6375518208] Analysis result - Candidate: Alice Smith, Score: 75
2025-09-05 11:07:24,488 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110719_6375518208_resume_2.pdf
2025-09-05 11:07:24,488 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_2.pdf
2025-09-05 11:07:24,489 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6375518208] Saving successful result to cache
2025-09-05 11:07:24,490 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 10 cached responses
2025-09-05 11:07:24,491 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 11
2025-09-05 11:07:24,491 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Smith - 75%
2025-09-05 11:07:24,491 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Alice Smith - 75%
2025-09-05 11:07:24,491 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_2.pdf - success
2025-09-05 11:07:24,491 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-05 11:07:24,492 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-05 11:07:24,493 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-05 11:07:24,493 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:07:24,493 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Alice Lee with 85% match
2025-09-05 11:07:24,493 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:07:24,493 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 20089 characters
2025-09-05 11:07:24,494 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 21769 bytes
2025-09-05 11:07:24,495 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:07:24] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:07:51,907 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:07:52,512 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:07:52,517 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:07:52,843 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:07:52,844 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:07:52,848 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:07:52,849 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:07:52] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:07:52,870 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:07:52,872 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:07:52,872 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1756953860.6670468-21131-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Thu, 04 Sep 2025 02:44:20 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:07:52,872 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757040950.3264692-48522-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:55:50 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:07:52,874 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 21131 bytes
2025-09-05 11:07:52,874 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:07:52] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:07:52,875 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 48522 bytes
2025-09-05 11:07:52,875 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:07:52] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:07:52,878 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:07:52,878 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:07:52,878 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:07:52,878 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:07:52,878 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:07:52] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:07:56,439 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:07:56,440 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2738', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryca0uJTKtycJDKhs3', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:07:56,440 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryca0uJTKtycJDKhs3
2025-09-05 11:07:56,440 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2738
2025-09-05 11:07:56,441 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_8.pdf']
2025-09-05 11:07:56,441 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[19 chars]'}
2025-09-05 11:07:56,441 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:07:56,441 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 19, Mock: True
2025-09-05 11:07:56,441 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_8.pdf']
2025-09-05 11:07:56,441 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-05 11:07:56,441 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:07:56,442 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6212055040] Starting processing file: resume_8.pdf
2025-09-05 11:07:56,442 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-05 11:07:56,442 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6212055040] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:07:56,442 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6212055040] Validating file type...
2025-09-05 11:07:56,442 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6212055040] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110756_6212055040_resume_8.pdf
2025-09-05 11:07:56,443 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6212055040] File saved successfully
2025-09-05 11:07:56,443 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6212055040] Validating PDF structure...
2025-09-05 11:07:56,444 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6212055040] PDF validation passed
2025-09-05 11:07:56,444 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6212055040] Extracting text from PDF...
2025-09-05 11:07:56,448 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6212055040] Text extracted successfully - 1125 characters
2025-09-05 11:07:56,448 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6212055040] Mock mode - attempting to use cached response
2025-09-05 11:07:56,449 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 11 cached responses
2025-09-05 11:07:56,449 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 72%
2025-09-05 11:07:56,450 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: dfed1736
2025-09-05 11:07:56,450 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6212055040] Using cached response: Mock-John Lee
2025-09-05 11:07:56,450 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6212055040] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110756_6212055040_resume_8.pdf
2025-09-05 11:07:56,450 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6212055040] File processing completed successfully for: resume_8.pdf
2025-09-05 11:07:56,451 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6212055040] Mock result - not saving to cache
2025-09-05 11:07:56,451 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6212055040] Returning result: Mock-John Lee - 72%
2025-09-05 11:07:56,451 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: resume_8.pdf - success
2025-09-05 11:07:56,451 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-05 11:07:56,452 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-05 11:07:56,452 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:07:56,452 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-John Lee with 72% match
2025-09-05 11:07:56,452 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-05 11:07:56,452 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:07:56,452 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 4094 characters
2025-09-05 11:07:56,453 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4347 bytes
2025-09-05 11:07:56,453 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:07:56] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:08:03,218 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:08:03,218 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '17895', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryfAdDLuK6jUnKBmjg', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:08:03,218 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryfAdDLuK6jUnKBmjg
2025-09-05 11:08:03,218 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 17895
2025-09-05 11:08:03,220 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_1.pdf', 'resume_2.pdf', 'resume_3.pdf', 'resume_4.pdf', 'resume_5.pdf', 'resume_6.pdf', 'resume_7.pdf']
2025-09-05 11:08:03,220 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[19 chars]'}
2025-09-05 11:08:03,220 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:08:03,220 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 7, Job desc length: 19, Mock: True
2025-09-05 11:08:03,220 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_1.pdf', 'resume_2.pdf', 'resume_3.pdf', 'resume_4.pdf', 'resume_5.pdf', 'resume_6.pdf', 'resume_7.pdf']
2025-09-05 11:08:03,221 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 7 files
2025-09-05 11:08:03,221 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:08:03,221 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6212055040] Starting processing file: resume_1.pdf
2025-09-05 11:08:03,221 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6228881408] Starting processing file: resume_2.pdf
2025-09-05 11:08:03,221 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6245707776] Starting processing file: resume_3.pdf
2025-09-05 11:08:03,221 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6212055040] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:08:03,221 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6262534144] Starting processing file: resume_4.pdf
2025-09-05 11:08:03,221 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6228881408] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:08:03,221 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6279360512] Starting processing file: resume_5.pdf
2025-09-05 11:08:03,222 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 7 tasks submitted to thread pool
2025-09-05 11:08:03,222 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6245707776] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:08:03,222 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6212055040] Validating file type...
2025-09-05 11:08:03,222 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6262534144] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:08:03,222 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6228881408] Validating file type...
2025-09-05 11:08:03,222 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6279360512] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:08:03,222 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6245707776] Validating file type...
2025-09-05 11:08:03,222 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6212055040] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6212055040_resume_1.pdf
2025-09-05 11:08:03,222 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6262534144] Validating file type...
2025-09-05 11:08:03,222 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6228881408] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6228881408_resume_2.pdf
2025-09-05 11:08:03,222 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6279360512] Validating file type...
2025-09-05 11:08:03,222 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6245707776] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6245707776_resume_3.pdf
2025-09-05 11:08:03,222 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6262534144] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6262534144_resume_4.pdf
2025-09-05 11:08:03,223 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6279360512] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6279360512_resume_5.pdf
2025-09-05 11:08:03,223 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6228881408] File saved successfully
2025-09-05 11:08:03,223 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6228881408] Validating PDF structure...
2025-09-05 11:08:03,223 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6212055040] File saved successfully
2025-09-05 11:08:03,223 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6212055040] Validating PDF structure...
2025-09-05 11:08:03,224 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6279360512] File saved successfully
2025-09-05 11:08:03,224 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6228881408] PDF validation passed
2025-09-05 11:08:03,226 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6262534144] File saved successfully
2025-09-05 11:08:03,225 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6245707776] File saved successfully
2025-09-05 11:08:03,226 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6279360512] Validating PDF structure...
2025-09-05 11:08:03,225 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6212055040] PDF validation passed
2025-09-05 11:08:03,226 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6228881408] Extracting text from PDF...
2025-09-05 11:08:03,226 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6262534144] Validating PDF structure...
2025-09-05 11:08:03,226 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6245707776] Validating PDF structure...
2025-09-05 11:08:03,226 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6212055040] Extracting text from PDF...
2025-09-05 11:08:03,230 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6228881408] Text extracted successfully - 1088 characters
2025-09-05 11:08:03,231 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6262534144] PDF validation passed
2025-09-05 11:08:03,231 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6228881408] Mock mode - attempting to use cached response
2025-09-05 11:08:03,231 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6279360512] PDF validation passed
2025-09-05 11:08:03,231 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6262534144] Extracting text from PDF...
2025-09-05 11:08:03,235 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6245707776] PDF validation passed
2025-09-05 11:08:03,235 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6212055040] Text extracted successfully - 859 characters
2025-09-05 11:08:03,235 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6279360512] Extracting text from PDF...
2025-09-05 11:08:03,235 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6245707776] Extracting text from PDF...
2025-09-05 11:08:03,235 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6212055040] Mock mode - attempting to use cached response
2025-09-05 11:08:03,235 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 11 cached responses
2025-09-05 11:08:03,239 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6262534144] Text extracted successfully - 889 characters
2025-09-05 11:08:03,241 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 11 cached responses
2025-09-05 11:08:03,242 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6245707776] Text extracted successfully - 902 characters
2025-09-05 11:08:03,243 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6262534144] Mock mode - attempting to use cached response
2025-09-05 11:08:03,243 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 74%
2025-09-05 11:08:03,245 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6279360512] Text extracted successfully - 922 characters
2025-09-05 11:08:03,245 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 88%
2025-09-05 11:08:03,245 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6245707776] Mock mode - attempting to use cached response
2025-09-05 11:08:03,246 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 83b4928e
2025-09-05 11:08:03,246 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6279360512] Mock mode - attempting to use cached response
2025-09-05 11:08:03,246 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 11 cached responses
2025-09-05 11:08:03,246 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: b70085b5
2025-09-05 11:08:03,247 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6228881408] Using cached response: Mock-David Lee
2025-09-05 11:08:03,247 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 11 cached responses
2025-09-05 11:08:03,248 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Baisheng Song - 88%
2025-09-05 11:08:03,248 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 11 cached responses
2025-09-05 11:08:03,248 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6212055040] Using cached response: Mock-Emily Miller
2025-09-05 11:08:03,248 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6228881408] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6228881408_resume_2.pdf
2025-09-05 11:08:03,249 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 72%
2025-09-05 11:08:03,249 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: afe44707
2025-09-05 11:08:03,249 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6212055040] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6212055040_resume_1.pdf
2025-09-05 11:08:03,249 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 81%
2025-09-05 11:08:03,249 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: dfed1736
2025-09-05 11:08:03,249 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6262534144] Using cached response: Mock-Baisheng Song
2025-09-05 11:08:03,249 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6228881408] File processing completed successfully for: resume_2.pdf
2025-09-05 11:08:03,249 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6212055040] File processing completed successfully for: resume_1.pdf
2025-09-05 11:08:03,249 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: fde8475b
2025-09-05 11:08:03,249 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6245707776] Using cached response: Mock-John Lee
2025-09-05 11:08:03,249 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6262534144] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6262534144_resume_4.pdf
2025-09-05 11:08:03,250 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6228881408] Mock result - not saving to cache
2025-09-05 11:08:03,250 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6212055040] Mock result - not saving to cache
2025-09-05 11:08:03,250 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6279360512] Using cached response: Mock-Olivia Miller
2025-09-05 11:08:03,250 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6245707776] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6245707776_resume_3.pdf
2025-09-05 11:08:03,250 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6228881408] Returning result: Mock-David Lee - 74%
2025-09-05 11:08:03,250 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6262534144] File processing completed successfully for: resume_4.pdf
2025-09-05 11:08:03,250 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6212055040] Returning result: Mock-Emily Miller - 88%
2025-09-05 11:08:03,250 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6279360512] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6279360512_resume_5.pdf
2025-09-05 11:08:03,250 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6228881408] Starting processing file: resume_6.pdf
2025-09-05 11:08:03,250 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6262534144] Mock result - not saving to cache
2025-09-05 11:08:03,250 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6245707776] File processing completed successfully for: resume_3.pdf
2025-09-05 11:08:03,250 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6212055040] Starting processing file: resume_7.pdf
2025-09-05 11:08:03,250 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/7 completed: resume_1.pdf - success
2025-09-05 11:08:03,250 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6279360512] File processing completed successfully for: resume_5.pdf
2025-09-05 11:08:03,250 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6228881408] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:08:03,251 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6262534144] Returning result: Mock-Baisheng Song - 88%
2025-09-05 11:08:03,251 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6245707776] Mock result - not saving to cache
2025-09-05 11:08:03,251 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6212055040] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:08:03,251 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/7 completed: resume_2.pdf - success
2025-09-05 11:08:03,251 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6279360512] Mock result - not saving to cache
2025-09-05 11:08:03,251 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6228881408] Validating file type...
2025-09-05 11:08:03,251 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6245707776] Returning result: Mock-John Lee - 72%
2025-09-05 11:08:03,251 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6212055040] Validating file type...
2025-09-05 11:08:03,251 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6279360512] Returning result: Mock-Olivia Miller - 81%
2025-09-05 11:08:03,251 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6228881408] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6228881408_resume_6.pdf
2025-09-05 11:08:03,251 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6212055040] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6212055040_resume_7.pdf
2025-09-05 11:08:03,251 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/7 completed: resume_3.pdf - success
2025-09-05 11:08:03,252 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/7 completed: resume_4.pdf - success
2025-09-05 11:08:03,252 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/7 completed: resume_5.pdf - success
2025-09-05 11:08:03,252 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6228881408] File saved successfully
2025-09-05 11:08:03,252 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6228881408] Validating PDF structure...
2025-09-05 11:08:03,252 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6212055040] File saved successfully
2025-09-05 11:08:03,252 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6212055040] Validating PDF structure...
2025-09-05 11:08:03,252 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6212055040] PDF validation passed
2025-09-05 11:08:03,252 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6212055040] Extracting text from PDF...
2025-09-05 11:08:03,253 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6228881408] PDF validation passed
2025-09-05 11:08:03,253 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6228881408] Extracting text from PDF...
2025-09-05 11:08:03,256 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6212055040] Text extracted successfully - 1070 characters
2025-09-05 11:08:03,256 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6212055040] Mock mode - attempting to use cached response
2025-09-05 11:08:03,258 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6228881408] Text extracted successfully - 873 characters
2025-09-05 11:08:03,258 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 11 cached responses
2025-09-05 11:08:03,258 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6228881408] Mock mode - attempting to use cached response
2025-09-05 11:08:03,259 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Baisheng Song - 91%
2025-09-05 11:08:03,259 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: afe44707
2025-09-05 11:08:03,259 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 11 cached responses
2025-09-05 11:08:03,259 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6212055040] Using cached response: Mock-Baisheng Song
2025-09-05 11:08:03,259 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 72%
2025-09-05 11:08:03,259 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6212055040] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6212055040_resume_7.pdf
2025-09-05 11:08:03,259 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: b6600a8c
2025-09-05 11:08:03,259 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6228881408] Using cached response: Mock-John Lee
2025-09-05 11:08:03,259 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6228881408] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_110803_6228881408_resume_6.pdf
2025-09-05 11:08:03,259 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6212055040] File processing completed successfully for: resume_7.pdf
2025-09-05 11:08:03,259 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6228881408] File processing completed successfully for: resume_6.pdf
2025-09-05 11:08:03,259 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6212055040] Mock result - not saving to cache
2025-09-05 11:08:03,259 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6228881408] Mock result - not saving to cache
2025-09-05 11:08:03,259 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6212055040] Returning result: Mock-Baisheng Song - 91%
2025-09-05 11:08:03,259 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6228881408] Returning result: Mock-John Lee - 72%
2025-09-05 11:08:03,259 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/7 completed: resume_6.pdf - success
2025-09-05 11:08:03,259 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/7 completed: resume_7.pdf - success
2025-09-05 11:08:03,259 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 7 results collected
2025-09-05 11:08:03,259 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 7, Failed: 0
2025-09-05 11:08:03,260 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:08:03,260 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Baisheng Song with 91% match
2025-09-05 11:08:03,260 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:08:03,260 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 15178 characters
2025-09-05 11:08:03,260 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 16373 bytes
2025-09-05 11:08:03,260 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:08:03] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:12:09,644 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:12:10,351 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:12:10,357 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:12:12,707 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:12:12,707 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:12:12,712 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:12:12,713 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:12:12] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:12:12,740 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:12:12,740 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1756953860.6670468-21131-2280592960"', 'If-Modified-Since': 'Thu, 04 Sep 2025 02:44:20 GMT'}
2025-09-05 11:12:12,741 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:12:12,741 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040950.3264692-48522-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:55:50 GMT'}
2025-09-05 11:12:12,741 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 21131 bytes
2025-09-05 11:12:12,741 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 48522 bytes
2025-09-05 11:12:12,741 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:12:12] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:12:12,742 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:12:12] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:12:12,833 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:12:12,833 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:12:12,833 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:12:12,833 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:12:12,833 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:12:12] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:12:26,768 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:12:26,769 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '23440', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryzBaO6kCgBgSqXJyQ', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:12:26,769 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryzBaO6kCgBgSqXJyQ
2025-09-05 11:12:26,769 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 23440
2025-09-05 11:12:26,774 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_2.pdf', 'resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_1.pdf']
2025-09-05 11:12:26,777 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-05 11:12:26,778 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:12:26,781 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 17, Mock: False
2025-09-05 11:12:26,781 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_2.pdf', 'resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_1.pdf']
2025-09-05 11:12:26,781 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-05 11:12:26,781 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:12:26,781 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_2.pdf
2025-09-05 11:12:26,781 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_10.pdf
2025-09-05 11:12:26,782 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:12:26,782 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_9.pdf
2025-09-05 11:12:26,782 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:12:26,782 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_8.pdf
2025-09-05 11:12:26,782 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_7.pdf
2025-09-05 11:12:26,782 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:12:26,782 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-05 11:12:26,783 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:12:26,783 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:12:26,783 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:12:26,783 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:12:26,783 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111226_6325039104_resume_2.pdf
2025-09-05 11:12:26,783 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:12:26,783 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111226_6341865472_resume_10.pdf
2025-09-05 11:12:26,783 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:12:26,783 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:12:26,784 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111226_6358691840_resume_9.pdf
2025-09-05 11:12:26,784 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111226_6375518208_resume_8.pdf
2025-09-05 11:12:26,784 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111226_6392344576_resume_7.pdf
2025-09-05 11:12:26,785 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:12:26,785 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:12:26,785 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:12:26,785 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:12:26,785 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:12:26,785 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:12:26,786 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:12:26,786 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:12:26,786 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:12:26,786 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:12:26,787 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:12:26,787 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:12:26,787 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:12:26,787 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:12:26,788 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:12:26,788 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:12:26,789 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:12:26,790 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 405 characters
2025-09-05 11:12:26,791 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:12:26,794 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:12:26,791 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:12:26,792 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 390 characters
2025-09-05 11:12:26,794 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 397 characters
2025-09-05 11:12:26,791 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6341865472] Starting AI analysis with Qwen...
2025-09-05 11:12:26,794 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6375518208] Starting AI analysis with Qwen...
2025-09-05 11:12:26,796 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 391 characters
2025-09-05 11:12:26,797 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 409 characters
2025-09-05 11:12:26,797 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6325039104] Starting AI analysis with Qwen...
2025-09-05 11:12:26,797 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6341865472] Job description length: 17 chars
2025-09-05 11:12:26,797 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6375518208] Job description length: 17 chars
2025-09-05 11:12:26,797 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6392344576] Starting AI analysis with Qwen...
2025-09-05 11:12:26,798 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6358691840] Starting AI analysis with Qwen...
2025-09-05 11:12:26,798 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6325039104] Job description length: 17 chars
2025-09-05 11:12:26,798 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6341865472] Resume text length: 405 chars
2025-09-05 11:12:26,798 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6375518208] Resume text length: 390 chars
2025-09-05 11:12:26,798 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6392344576] Job description length: 17 chars
2025-09-05 11:12:26,798 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6358691840] Job description length: 17 chars
2025-09-05 11:12:26,798 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6325039104] Resume text length: 397 chars
2025-09-05 11:12:26,798 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:12:26,798 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:12:26,798 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6392344576] Resume text length: 391 chars
2025-09-05 11:12:26,798 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6358691840] Resume text length: 409 chars
2025-09-05 11:12:26,798 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:12:26,798 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 405 chars
2025-09-05 11:12:26,798 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 390 chars
2025-09-05 11:12:26,798 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:12:26,798 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:12:26,798 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 397 chars
2025-09-05 11:12:26,799 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 391 chars
2025-09-05 11:12:26,799 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 409 chars
2025-09-05 11:12:26,939 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-287cc510-541a-4d45-884c-b65d6cb5a419', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nOlivia Taylor\n Paralegal - Legal\nEducation\nBachelor\'s degree from National University of Singapore\nExperience\nWorked as Paralegal at Unilever (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:12:26,939 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2471aabb-e98f-44e1-8874-0500866b337b', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nMaria Gonzalez\n Financial Advisor - Finance\nEducation\nBachelor\'s degree from Imperial College London\nExperience\nWorked as Financial Advisor at Tesla (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:12:26,939 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4e3182d6-9d56-44d7-aafc-3dc9545c0e14', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nJames Anderson\n Project Manager - Construction\nEducation\nBachelor\'s degree from National University of Singapore\nExperience\nWorked as Project Manager at Siemens (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:12:26,939 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-21d1e4a6-020a-4423-83e9-155574ed1635', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nIsabella Martinez\n Event Coordinator - Hospitality\nEducation\nBachelor\'s degree from University of Toronto\nExperience\nWorked as Event Coordinator at JPMorgan (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:12:26,939 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-23f4190a-3c21-4223-adb7-329a250099e6', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nDaniel Wilson\n Graphic Designer - Design\nEducation\nBachelor\'s degree from Harvard University\nExperience\nWorked as Graphic Designer at JPMorgan (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:12:26,966 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:12:26,966 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:12:26,967 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:12:26,967 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:12:26,967 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:12:26,967 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:12:26,967 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:12:26,967 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:12:26,967 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:12:26,968 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:12:26,968 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1290a92b0>
2025-09-05 11:12:26,968 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1290acf50>
2025-09-05 11:12:26,969 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1290ad090>
2025-09-05 11:12:26,969 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,969 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1290b4770>
2025-09-05 11:12:26,969 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,969 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1290b48a0>
2025-09-05 11:12:26,969 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:26,970 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,971 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:12:26,971 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,971 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:12:26,971 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:26,971 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:12:26,971 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1072e7020> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:12:26,971 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1072e6f90> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:12:26,971 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:12:26,971 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:12:26,971 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1072e6f00> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:12:26,971 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1072e70b0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:12:26,971 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1072e7140> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:12:27,044 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1072d39b0>
2025-09-05 11:12:27,044 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x12901e580>
2025-09-05 11:12:27,044 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:12:27,044 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:12:27,045 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:27,045 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:12:27,045 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:27,045 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:27,045 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:12:27,045 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:12:27,045 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:27,045 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:12:27,048 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x12901e470>
2025-09-05 11:12:27,048 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:12:27,048 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:27,048 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:12:27,048 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:27,048 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:12:27,053 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129088e50>
2025-09-05 11:12:27,053 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:12:27,053 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:27,053 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:12:27,053 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:27,053 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:12:27,059 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129088a50>
2025-09-05 11:12:27,059 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:12:27,059 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:27,059 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:12:27,059 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:27,059 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:12:30,149 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'2e72d5a3-c99b-9b81-96e1-6ad3a274f151'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3071'), (b'req-arrive-time', b'1757041947144'), (b'resp-start-time', b'1757041950215'), (b'x-envoy-upstream-service-time', b'3070'), (b'set-cookie', b'acw_tc=2e72d5a3-c99b-9b81-96e1-6ad3a274f15137fcedcd8ae76780a337ef8e6d3a6acc;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:12:29 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:12:30,150 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:12:30,150 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:12:30,151 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:12:30,151 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:12:30,151 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:12:30,151 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '2e72d5a3-c99b-9b81-96e1-6ad3a274f151', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3071', 'req-arrive-time': '1757041947144', 'resp-start-time': '1757041950215', 'x-envoy-upstream-service-time': '3070', 'set-cookie': 'acw_tc=2e72d5a3-c99b-9b81-96e1-6ad3a274f15137fcedcd8ae76780a337ef8e6d3a6acc;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:12:29 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:12:30,151 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 2e72d5a3-c99b-9b81-96e1-6ad3a274f151
2025-09-05 11:12:30,164 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:12:30,164 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Daniel Wilson, Score: 30
2025-09-05 11:12:30,165 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6392344576] AI analysis completed successfully
2025-09-05 11:12:30,165 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6392344576] Analysis result - Candidate: Daniel Wilson, Score: 30
2025-09-05 11:12:30,165 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111226_6392344576_resume_7.pdf
2025-09-05 11:12:30,165 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_7.pdf
2025-09-05 11:12:30,165 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6392344576] Saving successful result to cache
2025-09-05 11:12:30,166 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 0 cached responses
2025-09-05 11:12:30,166 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 1
2025-09-05 11:12:30,166 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Daniel Wilson - 30%
2025-09-05 11:12:30,166 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Daniel Wilson - 30%
2025-09-05 11:12:30,166 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_6.pdf
2025-09-05 11:12:30,166 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:12:30,167 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:12:30,167 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111230_6392344576_resume_6.pdf
2025-09-05 11:12:30,167 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:12:30,167 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:12:30,168 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:12:30,168 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:12:30,170 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 380 characters
2025-09-05 11:12:30,170 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6392344576] Starting AI analysis with Qwen...
2025-09-05 11:12:30,170 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6392344576] Job description length: 17 chars
2025-09-05 11:12:30,170 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6392344576] Resume text length: 380 chars
2025-09-05 11:12:30,170 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:12:30,170 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 380 chars
2025-09-05 11:12:30,190 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1c08225b-778e-4e3c-bfd2-2d67902f5bea', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nEmily Davis\n Sales Manager - Sales\nEducation\nBachelor\'s degree from Harvard University\nExperience\nWorked as Sales Manager at Amazon (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:12:30,191 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:12:30,191 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:12:30,191 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1290955e0>
2025-09-05 11:12:30,191 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,192 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:30,192 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,192 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:30,192 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,192 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:12:30,192 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x129234290> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:12:30,256 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129095a90>
2025-09-05 11:12:30,256 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:12:30,257 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:30,257 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:12:30,257 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:30,257 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:12:30,300 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'806404bd-37c2-966f-9e02-774f405a2ed8'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3198'), (b'req-arrive-time', b'1757041947165'), (b'resp-start-time', b'1757041950363'), (b'x-envoy-upstream-service-time', b'3189'), (b'set-cookie', b'acw_tc=806404bd-37c2-966f-9e02-774f405a2ed8232aca7525d0270f5ac3901234fa9f13;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:12:29 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:12:30,300 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:12:30,300 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:12:30,301 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:12:30,301 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:12:30,301 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:12:30,301 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '806404bd-37c2-966f-9e02-774f405a2ed8', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3198', 'req-arrive-time': '1757041947165', 'resp-start-time': '1757041950363', 'x-envoy-upstream-service-time': '3189', 'set-cookie': 'acw_tc=806404bd-37c2-966f-9e02-774f405a2ed8232aca7525d0270f5ac3901234fa9f13;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:12:29 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:12:30,301 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 806404bd-37c2-966f-9e02-774f405a2ed8
2025-09-05 11:12:30,301 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:12:30,301 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Maria Gonzalez, Score: 25
2025-09-05 11:12:30,301 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6325039104] AI analysis completed successfully
2025-09-05 11:12:30,301 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6325039104] Analysis result - Candidate: Maria Gonzalez, Score: 25
2025-09-05 11:12:30,301 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111226_6325039104_resume_2.pdf
2025-09-05 11:12:30,302 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_2.pdf
2025-09-05 11:12:30,302 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6325039104] Saving successful result to cache
2025-09-05 11:12:30,302 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 1 cached responses
2025-09-05 11:12:30,302 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 2
2025-09-05 11:12:30,302 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Maria Gonzalez - 25%
2025-09-05 11:12:30,302 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Maria Gonzalez - 25%
2025-09-05 11:12:30,303 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_5.pdf
2025-09-05 11:12:30,303 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_2.pdf - success
2025-09-05 11:12:30,303 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:12:30,303 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:12:30,303 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111230_6325039104_resume_5.pdf
2025-09-05 11:12:30,303 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:12:30,303 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:12:30,304 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:12:30,304 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:12:30,305 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 429 characters
2025-09-05 11:12:30,305 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6325039104] Starting AI analysis with Qwen...
2025-09-05 11:12:30,305 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6325039104] Job description length: 17 chars
2025-09-05 11:12:30,305 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6325039104] Resume text length: 429 chars
2025-09-05 11:12:30,305 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:12:30,305 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 429 chars
2025-09-05 11:12:30,324 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9beb92f0-85e7-4370-a0a1-1477935db26a', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nMichael Brown\n Digital Marketing Specialist - Marketing\nEducation\nBachelor\'s degree from National University of Singapore\nExperience\nWorked as Digital Marketing Specialist at Tesla (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:12:30,325 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:12:30,325 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:12:30,325 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1290facf0>
2025-09-05 11:12:30,325 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,325 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:30,325 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,325 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:30,325 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,325 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:12:30,326 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x129234830> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:12:30,400 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1290fb3f0>
2025-09-05 11:12:30,400 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:12:30,401 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:30,401 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:12:30,401 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:30,401 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:12:30,485 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'8e8e56e8-6419-99c4-b389-886f4c790222'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3394'), (b'req-arrive-time', b'1757041947157'), (b'resp-start-time', b'1757041950552'), (b'x-envoy-upstream-service-time', b'3377'), (b'set-cookie', b'acw_tc=8e8e56e8-6419-99c4-b389-886f4c790222376db0f3b916ba9ccde121c36aebe1b1;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:12:30 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:12:30,485 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:12:30,485 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:12:30,485 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:12:30,485 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:12:30,486 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:12:30,486 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '8e8e56e8-6419-99c4-b389-886f4c790222', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3394', 'req-arrive-time': '1757041947157', 'resp-start-time': '1757041950552', 'x-envoy-upstream-service-time': '3377', 'set-cookie': 'acw_tc=8e8e56e8-6419-99c4-b389-886f4c790222376db0f3b916ba9ccde121c36aebe1b1;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:12:30 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:12:30,486 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 8e8e56e8-6419-99c4-b389-886f4c790222
2025-09-05 11:12:30,486 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:12:30,486 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Isabella Martinez, Score: 35
2025-09-05 11:12:30,486 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6341865472] AI analysis completed successfully
2025-09-05 11:12:30,486 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6341865472] Analysis result - Candidate: Isabella Martinez, Score: 35
2025-09-05 11:12:30,486 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111226_6341865472_resume_10.pdf
2025-09-05 11:12:30,486 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_10.pdf
2025-09-05 11:12:30,487 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6341865472] Saving successful result to cache
2025-09-05 11:12:30,487 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 2 cached responses
2025-09-05 11:12:30,487 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 3
2025-09-05 11:12:30,487 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Isabella Martinez - 35%
2025-09-05 11:12:30,487 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Isabella Martinez - 35%
2025-09-05 11:12:30,487 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_4.pdf
2025-09-05 11:12:30,487 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_10.pdf - success
2025-09-05 11:12:30,487 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:12:30,487 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:12:30,488 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111230_6341865472_resume_4.pdf
2025-09-05 11:12:30,488 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:12:30,488 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:12:30,488 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:12:30,488 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:12:30,491 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 399 characters
2025-09-05 11:12:30,491 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6341865472] Starting AI analysis with Qwen...
2025-09-05 11:12:30,491 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6341865472] Job description length: 17 chars
2025-09-05 11:12:30,491 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6341865472] Resume text length: 399 chars
2025-09-05 11:12:30,491 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:12:30,491 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 399 chars
2025-09-05 11:12:30,511 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c259cfe7-acfa-4fce-a19e-1820b8f3d214', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nSophia Lee\n High School Teacher - Education\nEducation\nBachelor\'s degree from University of Toronto\nExperience\nWorked as High School Teacher at Siemens (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:12:30,512 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:12:30,512 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:12:30,512 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x12906e820>
2025-09-05 11:12:30,512 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,512 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:30,512 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,512 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:30,512 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,512 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:12:30,512 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x12823b9b0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:12:30,584 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1292407d0>
2025-09-05 11:12:30,584 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:12:30,584 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:30,584 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:12:30,584 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:30,584 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:12:30,814 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'90480f12-37bd-9a43-95d5-5cb216f2e540'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3731'), (b'req-arrive-time', b'1757041947149'), (b'resp-start-time', b'1757041950881'), (b'x-envoy-upstream-service-time', b'3708'), (b'set-cookie', b'acw_tc=90480f12-37bd-9a43-95d5-5cb216f2e540628ce0b3191b1cf5fc7ccb85bedc7d30;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:12:30 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:12:30,815 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:12:30,815 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:12:30,815 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:12:30,815 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:12:30,815 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:12:30,815 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '90480f12-37bd-9a43-95d5-5cb216f2e540', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3731', 'req-arrive-time': '1757041947149', 'resp-start-time': '1757041950881', 'x-envoy-upstream-service-time': '3708', 'set-cookie': 'acw_tc=90480f12-37bd-9a43-95d5-5cb216f2e540628ce0b3191b1cf5fc7ccb85bedc7d30;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:12:30 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:12:30,815 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 90480f12-37bd-9a43-95d5-5cb216f2e540
2025-09-05 11:12:30,816 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:12:30,816 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Olivia Taylor, Score: 35
2025-09-05 11:12:30,816 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6375518208] AI analysis completed successfully
2025-09-05 11:12:30,816 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6375518208] Analysis result - Candidate: Olivia Taylor, Score: 35
2025-09-05 11:12:30,816 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111226_6375518208_resume_8.pdf
2025-09-05 11:12:30,816 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_8.pdf
2025-09-05 11:12:30,816 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6375518208] Saving successful result to cache
2025-09-05 11:12:30,816 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 3 cached responses
2025-09-05 11:12:30,817 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 4
2025-09-05 11:12:30,817 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Olivia Taylor - 35%
2025-09-05 11:12:30,817 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Olivia Taylor - 35%
2025-09-05 11:12:30,817 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_3.pdf
2025-09-05 11:12:30,817 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:12:30,817 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:12:30,817 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111230_6375518208_resume_3.pdf
2025-09-05 11:12:30,818 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:12:30,818 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:12:30,819 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:12:30,819 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:12:30,821 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 400 characters
2025-09-05 11:12:30,821 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6375518208] Starting AI analysis with Qwen...
2025-09-05 11:12:30,821 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6375518208] Job description length: 17 chars
2025-09-05 11:12:30,821 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6375518208] Resume text length: 400 chars
2025-09-05 11:12:30,821 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:12:30,821 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 400 chars
2025-09-05 11:12:30,839 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4da8d710-6303-4572-93e2-7071ae0e6d1c', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nDavid Smith\n Medical Technologist - Healthcare\nEducation\nBachelor\'s degree from University of Toronto\nExperience\nWorked as Medical Technologist at HSBC (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:12:30,839 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:12:30,840 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:12:30,840 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129240b90>
2025-09-05 11:12:30,840 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,840 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:30,840 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,840 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:30,840 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,840 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:12:30,840 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1292349e0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:12:30,911 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1290592e0>
2025-09-05 11:12:30,911 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:12:30,911 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:30,911 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:12:30,911 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:30,911 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:12:30,966 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'477f4cda-619c-9410-859a-c8ac85c572cd'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3888'), (b'req-arrive-time', b'1757041947145'), (b'resp-start-time', b'1757041951034'), (b'x-envoy-upstream-service-time', b'3887'), (b'set-cookie', b'acw_tc=477f4cda-619c-9410-859a-c8ac85c572cd36afa825107d2624d2525f75db7aeb26;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:12:30 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:12:30,967 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:12:30,967 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:12:30,967 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:12:30,967 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:12:30,967 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:12:30,967 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '477f4cda-619c-9410-859a-c8ac85c572cd', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3888', 'req-arrive-time': '1757041947145', 'resp-start-time': '1757041951034', 'x-envoy-upstream-service-time': '3887', 'set-cookie': 'acw_tc=477f4cda-619c-9410-859a-c8ac85c572cd36afa825107d2624d2525f75db7aeb26;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:12:30 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:12:30,967 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 477f4cda-619c-9410-859a-c8ac85c572cd
2025-09-05 11:12:30,967 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:12:30,967 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: James Anderson, Score: 35
2025-09-05 11:12:30,967 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6358691840] AI analysis completed successfully
2025-09-05 11:12:30,968 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6358691840] Analysis result - Candidate: James Anderson, Score: 35
2025-09-05 11:12:30,968 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111226_6358691840_resume_9.pdf
2025-09-05 11:12:30,968 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_9.pdf
2025-09-05 11:12:30,968 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6358691840] Saving successful result to cache
2025-09-05 11:12:30,968 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 4 cached responses
2025-09-05 11:12:30,969 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 5
2025-09-05 11:12:30,969 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: James Anderson - 35%
2025-09-05 11:12:30,969 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: James Anderson - 35%
2025-09-05 11:12:30,969 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_1.pdf
2025-09-05 11:12:30,969 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_9.pdf - success
2025-09-05 11:12:30,969 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:12:30,969 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_8.pdf - success
2025-09-05 11:12:30,969 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:12:30,969 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_7.pdf - success
2025-09-05 11:12:30,969 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111230_6358691840_resume_1.pdf
2025-09-05 11:12:30,970 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:12:30,970 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:12:30,970 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:12:30,970 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:12:30,971 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 418 characters
2025-09-05 11:12:30,971 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6358691840] Starting AI analysis with Qwen...
2025-09-05 11:12:30,971 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6358691840] Job description length: 17 chars
2025-09-05 11:12:30,971 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6358691840] Resume text length: 418 chars
2025-09-05 11:12:30,971 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:12:30,971 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 418 chars
2025-09-05 11:12:30,987 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2f9e77c3-ba53-4c3b-a391-59f104151288', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlex Johnson\n Backend Engineer - Software Engineering\nEducation\nBachelor\'s degree from National University of Singapore\nExperience\nWorked as Backend Engineer at Marriott (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:12:30,988 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:12:30,988 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:12:30,988 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129059d30>
2025-09-05 11:12:30,988 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,988 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:30,988 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,988 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:30,988 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:12:30,988 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:12:30,988 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1292345f0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:12:31,063 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129238a50>
2025-09-05 11:12:31,064 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:12:31,064 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:12:31,064 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:12:31,064 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:12:31,064 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:12:34,010 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'f33a23fd-c8d9-9d0e-955f-d1b2b9e1cea7'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3722'), (b'req-arrive-time', b'1757041950355'), (b'resp-start-time', b'1757041954078'), (b'x-envoy-upstream-service-time', b'3720'), (b'set-cookie', b'acw_tc=f33a23fd-c8d9-9d0e-955f-d1b2b9e1cea7cf25958ed36a10e981242dc796bd4716;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:12:34 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:12:34,011 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:12:34,012 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:12:34,012 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:12:34,012 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:12:34,012 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:12:34,013 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'f33a23fd-c8d9-9d0e-955f-d1b2b9e1cea7', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3722', 'req-arrive-time': '1757041950355', 'resp-start-time': '1757041954078', 'x-envoy-upstream-service-time': '3720', 'set-cookie': 'acw_tc=f33a23fd-c8d9-9d0e-955f-d1b2b9e1cea7cf25958ed36a10e981242dc796bd4716;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:12:34 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:12:34,013 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: f33a23fd-c8d9-9d0e-955f-d1b2b9e1cea7
2025-09-05 11:12:34,013 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:12:34,013 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Emily Davis, Score: 25
2025-09-05 11:12:34,014 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6392344576] AI analysis completed successfully
2025-09-05 11:12:34,014 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6392344576] Analysis result - Candidate: Emily Davis, Score: 25
2025-09-05 11:12:34,014 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111230_6392344576_resume_6.pdf
2025-09-05 11:12:34,014 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_6.pdf
2025-09-05 11:12:34,014 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6392344576] Saving successful result to cache
2025-09-05 11:12:34,015 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 5 cached responses
2025-09-05 11:12:34,015 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 6
2025-09-05 11:12:34,016 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Emily Davis - 25%
2025-09-05 11:12:34,016 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Emily Davis - 25%
2025-09-05 11:12:34,016 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_6.pdf - success
2025-09-05 11:12:34,361 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'6e8c2552-dfe3-93ef-81c9-bbef17717ca2'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3743'), (b'req-arrive-time', b'1757041950685'), (b'resp-start-time', b'1757041954429'), (b'x-envoy-upstream-service-time', b'3742'), (b'set-cookie', b'acw_tc=6e8c2552-dfe3-93ef-81c9-bbef17717ca2159917de9f20d448ab716cd4b8941cee;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:12:34 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:12:34,362 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:12:34,362 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:12:34,362 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:12:34,362 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:12:34,362 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:12:34,362 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '6e8c2552-dfe3-93ef-81c9-bbef17717ca2', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3743', 'req-arrive-time': '1757041950685', 'resp-start-time': '1757041954429', 'x-envoy-upstream-service-time': '3742', 'set-cookie': 'acw_tc=6e8c2552-dfe3-93ef-81c9-bbef17717ca2159917de9f20d448ab716cd4b8941cee;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:12:34 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:12:34,362 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 6e8c2552-dfe3-93ef-81c9-bbef17717ca2
2025-09-05 11:12:34,363 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:12:34,363 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Sophia Lee, Score: 25
2025-09-05 11:12:34,363 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6341865472] AI analysis completed successfully
2025-09-05 11:12:34,363 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6341865472] Analysis result - Candidate: Sophia Lee, Score: 25
2025-09-05 11:12:34,363 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111230_6341865472_resume_4.pdf
2025-09-05 11:12:34,363 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_4.pdf
2025-09-05 11:12:34,363 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6341865472] Saving successful result to cache
2025-09-05 11:12:34,363 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 6 cached responses
2025-09-05 11:12:34,364 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 7
2025-09-05 11:12:34,364 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Sophia Lee - 25%
2025-09-05 11:12:34,364 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Sophia Lee - 25%
2025-09-05 11:12:34,803 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'1f44d71d-4d40-9de6-88bc-1f37c5a7e612'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3858'), (b'req-arrive-time', b'1757041951011'), (b'resp-start-time', b'1757041954869'), (b'x-envoy-upstream-service-time', b'3856'), (b'set-cookie', b'acw_tc=1f44d71d-4d40-9de6-88bc-1f37c5a7e612c30c11624d6ee056c05f41f50c1d295c;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:12:34 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:12:34,804 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:12:34,804 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:12:34,804 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:12:34,804 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:12:34,804 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:12:34,805 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '1f44d71d-4d40-9de6-88bc-1f37c5a7e612', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3858', 'req-arrive-time': '1757041951011', 'resp-start-time': '1757041954869', 'x-envoy-upstream-service-time': '3856', 'set-cookie': 'acw_tc=1f44d71d-4d40-9de6-88bc-1f37c5a7e612c30c11624d6ee056c05f41f50c1d295c;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:12:34 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:12:34,805 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 1f44d71d-4d40-9de6-88bc-1f37c5a7e612
2025-09-05 11:12:34,805 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:12:34,805 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: David Smith, Score: 30
2025-09-05 11:12:34,806 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6375518208] AI analysis completed successfully
2025-09-05 11:12:34,806 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6375518208] Analysis result - Candidate: David Smith, Score: 30
2025-09-05 11:12:34,806 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111230_6375518208_resume_3.pdf
2025-09-05 11:12:34,806 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_3.pdf
2025-09-05 11:12:34,806 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6375518208] Saving successful result to cache
2025-09-05 11:12:34,806 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 7 cached responses
2025-09-05 11:12:34,807 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 8
2025-09-05 11:12:34,807 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: David Smith - 30%
2025-09-05 11:12:34,807 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: David Smith - 30%
2025-09-05 11:12:35,174 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'803a1080-5e78-9a3e-9e64-01f4557d94eb'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4741'), (b'req-arrive-time', b'1757041950499'), (b'resp-start-time', b'1757041955240'), (b'x-envoy-upstream-service-time', b'4739'), (b'set-cookie', b'acw_tc=803a1080-5e78-9a3e-9e64-01f4557d94eb469488abe320d4f02deb6f9fa0539789;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:12:35 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:12:35,174 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:12:35,175 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:12:35,175 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:12:35,175 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:12:35,175 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:12:35,175 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '803a1080-5e78-9a3e-9e64-01f4557d94eb', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4741', 'req-arrive-time': '1757041950499', 'resp-start-time': '1757041955240', 'x-envoy-upstream-service-time': '4739', 'set-cookie': 'acw_tc=803a1080-5e78-9a3e-9e64-01f4557d94eb469488abe320d4f02deb6f9fa0539789;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:12:35 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:12:35,175 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 803a1080-5e78-9a3e-9e64-01f4557d94eb
2025-09-05 11:12:35,176 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:12:35,176 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Michael Brown, Score: 35
2025-09-05 11:12:35,176 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6325039104] AI analysis completed successfully
2025-09-05 11:12:35,176 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6325039104] Analysis result - Candidate: Michael Brown, Score: 35
2025-09-05 11:12:35,176 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111230_6325039104_resume_5.pdf
2025-09-05 11:12:35,176 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_5.pdf
2025-09-05 11:12:35,176 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6325039104] Saving successful result to cache
2025-09-05 11:12:35,177 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 8 cached responses
2025-09-05 11:12:35,178 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 9
2025-09-05 11:12:35,178 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Michael Brown - 35%
2025-09-05 11:12:35,178 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Michael Brown - 35%
2025-09-05 11:12:35,178 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_5.pdf - success
2025-09-05 11:12:35,178 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_4.pdf - success
2025-09-05 11:12:35,178 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_3.pdf - success
2025-09-05 11:12:35,399 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'20789f96-96cc-9d2f-9c7e-fe7fa279df23'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4300'), (b'req-arrive-time', b'1757041951164'), (b'resp-start-time', b'1757041955464'), (b'x-envoy-upstream-service-time', b'4299'), (b'set-cookie', b'acw_tc=20789f96-96cc-9d2f-9c7e-fe7fa279df233bace772c807c76e742912cb0e9d6a98;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:12:35 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:12:35,399 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:12:35,399 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:12:35,400 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:12:35,400 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:12:35,400 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:12:35,400 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '20789f96-96cc-9d2f-9c7e-fe7fa279df23', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4300', 'req-arrive-time': '1757041951164', 'resp-start-time': '1757041955464', 'x-envoy-upstream-service-time': '4299', 'set-cookie': 'acw_tc=20789f96-96cc-9d2f-9c7e-fe7fa279df233bace772c807c76e742912cb0e9d6a98;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:12:35 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:12:35,400 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 20789f96-96cc-9d2f-9c7e-fe7fa279df23
2025-09-05 11:12:35,400 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:12:35,401 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alex Johnson, Score: 65
2025-09-05 11:12:35,401 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6358691840] AI analysis completed successfully
2025-09-05 11:12:35,401 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6358691840] Analysis result - Candidate: Alex Johnson, Score: 65
2025-09-05 11:12:35,401 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111230_6358691840_resume_1.pdf
2025-09-05 11:12:35,401 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_1.pdf
2025-09-05 11:12:35,401 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6358691840] Saving successful result to cache
2025-09-05 11:12:35,402 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 9 cached responses
2025-09-05 11:12:35,402 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 10
2025-09-05 11:12:35,402 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alex Johnson - 65%
2025-09-05 11:12:35,402 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Alex Johnson - 65%
2025-09-05 11:12:35,402 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-05 11:12:35,403 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-05 11:12:35,403 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-05 11:12:35,403 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:12:35,403 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Alex Johnson with 65% match
2025-09-05 11:12:35,403 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:12:35,404 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 16385 characters
2025-09-05 11:12:35,404 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 17936 bytes
2025-09-05 11:12:35,405 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:12:35] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:13:09,807 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:13:09,807 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '25549', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary0FpH08fSBQ2XnlmD', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:13:09,807 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundary0FpH08fSBQ2XnlmD
2025-09-05 11:13:09,807 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 25549
2025-09-05 11:13:09,810 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:13:09,810 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-05 11:13:09,810 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:13:09,811 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 17, Mock: False
2025-09-05 11:13:09,811 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:13:09,811 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-05 11:13:09,811 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:13:09,811 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_10.pdf
2025-09-05 11:13:09,811 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_9.pdf
2025-09-05 11:13:09,811 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:13:09,811 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_8.pdf
2025-09-05 11:13:09,812 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_7.pdf
2025-09-05 11:13:09,812 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_6.pdf
2025-09-05 11:13:09,812 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:13:09,812 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-05 11:13:09,812 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:13:09,812 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:13:09,812 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:13:09,812 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:13:09,812 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:13:09,812 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111309_6325039104_resume_10.pdf
2025-09-05 11:13:09,813 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:13:09,813 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:13:09,813 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:13:09,813 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111309_6341865472_resume_9.pdf
2025-09-05 11:13:09,813 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111309_6358691840_resume_8.pdf
2025-09-05 11:13:09,813 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111309_6375518208_resume_7.pdf
2025-09-05 11:13:09,813 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111309_6392344576_resume_6.pdf
2025-09-05 11:13:09,814 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:13:09,814 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:13:09,814 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:13:09,814 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:13:09,814 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:13:09,814 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:13:09,814 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:13:09,814 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:13:09,814 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:13:09,814 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:13:09,815 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:13:09,815 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:13:09,816 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:13:09,816 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:13:09,817 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:13:09,817 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:13:09,818 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:13:09,821 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:13:09,823 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 870 characters
2025-09-05 11:13:09,823 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:13:09,837 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:13:09,837 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 1093 characters
2025-09-05 11:13:09,837 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6341865472] Starting AI analysis with Qwen...
2025-09-05 11:13:09,839 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 1125 characters
2025-09-05 11:13:09,839 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6325039104] Starting AI analysis with Qwen...
2025-09-05 11:13:09,839 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6341865472] Job description length: 17 chars
2025-09-05 11:13:09,840 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6358691840] Starting AI analysis with Qwen...
2025-09-05 11:13:09,841 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 873 characters
2025-09-05 11:13:09,842 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6325039104] Job description length: 17 chars
2025-09-05 11:13:09,844 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 1070 characters
2025-09-05 11:13:09,844 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6341865472] Resume text length: 870 chars
2025-09-05 11:13:09,844 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6358691840] Job description length: 17 chars
2025-09-05 11:13:09,844 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6392344576] Starting AI analysis with Qwen...
2025-09-05 11:13:09,844 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6325039104] Resume text length: 1093 chars
2025-09-05 11:13:09,844 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6375518208] Starting AI analysis with Qwen...
2025-09-05 11:13:09,844 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:13:09,844 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6358691840] Resume text length: 1125 chars
2025-09-05 11:13:09,844 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6392344576] Job description length: 17 chars
2025-09-05 11:13:09,844 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:13:09,844 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6375518208] Job description length: 17 chars
2025-09-05 11:13:09,844 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 870 chars
2025-09-05 11:13:09,844 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:13:09,844 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6392344576] Resume text length: 873 chars
2025-09-05 11:13:09,844 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1093 chars
2025-09-05 11:13:09,844 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6375518208] Resume text length: 1070 chars
2025-09-05 11:13:09,845 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1125 chars
2025-09-05 11:13:09,845 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:13:09,845 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:13:09,846 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 873 chars
2025-09-05 11:13:09,846 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1070 chars
2025-09-05 11:13:09,863 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-aa57da1a-3593-4d14-8088-fadff12bba66', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nDavid Lee\n Email: david.lee@gmail.com | Phone: +1-788-771-2191\nAddress: 684 Main Street, New York, NY\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Airbnb (2016 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nData Engineer, Amazon (2018 - 2020)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Carnegie Mellon (2010 - 2016)\nSkills\nGraphQL, Node.js, Python, C++, Kubernetes, SQL, REST APIs, Docker\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:13:09,864 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d9201fa4-1467-4b8f-b654-fc8c84849c27', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nJohn Lee\n Email: john.lee@gmail.com | Phone: +1-869-955-1818\nAddress: 416 Main Street, London, UK\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Apple (2016 - 2018)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Google (2018 - 2019)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Stanford University (2010 - 2015)\nSkills\nMachine Learning, REST APIs, JavaScript, AWS, Go, Node.js, Python, GraphQL\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:13:09,864 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:13:09,864 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6c66d8da-b332-403c-86be-2ec9837feaa9', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Lee\n Email: alice.lee@gmail.com | Phone: +1-345-265-4958\nAddress: 188 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSenior Software Engineer, Bloomberg (2016 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nSoftware Engineer, Apple (2018 - 2019)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Airbnb (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Stanford University (2011 - 2016)\nSkills\nMachine Learning, GraphQL, AWS, React, Microservices, Kubernetes, SQL, TypeScript\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:13:09,864 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:13:09,865 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:13:09,865 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:13:09,865 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-30216131-f1eb-44b9-9fd8-74a00f478507', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Brown\n Email: alice.brown@gmail.com | Phone: +1-396-365-3977\nAddress: 185 Main Street, New York, NY\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Apple (2018 - 2019)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSoftware Engineer, Google (2020 - 2021)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nData Engineer, Airbnb (2022 - 2023)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Imperial College London (2013 - 2015)\nSkills\nKubernetes, REST APIs, GraphQL, Microservices, JavaScript, Java, AWS, Node.js\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:13:09,865 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:13:09,865 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:13:09,865 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:13:09,865 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-541f60cb-9888-4e56-b85c-913971fecf79', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nEmily Taylor\n Email: emily.taylor@gmail.com | Phone: +1-751-470-4245\nAddress: 848 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Airbnb (2016 - 2018)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Apple (2018 - 2020)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nBackend Engineer, Stripe (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, MIT (2010 - 2016)\nSkills\nGraphQL, Machine Learning, AWS, JavaScript, TypeScript, C++, Go, React\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:13:09,866 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x12925d8b0>
2025-09-05 11:13:09,866 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:13:09,866 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:13:09,866 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,866 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129234440>
2025-09-05 11:13:09,866 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x12921dc50>
2025-09-05 11:13:09,866 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:13:09,866 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129209d50>
2025-09-05 11:13:09,866 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:09,866 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,866 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,866 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,866 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,866 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x12907d8d0>
2025-09-05 11:13:09,866 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:09,866 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:09,867 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x129234b90> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,868 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:09,868 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:13:09,868 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:13:09,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:09,868 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,868 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:09,868 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x129235250> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:13:09,868 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:13:09,868 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1292350a0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:13:09,868 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:09,868 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x129235490> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:13:09,868 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:13:09,868 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1292363c0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:13:09,937 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129288050>
2025-09-05 11:13:09,937 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129231610>
2025-09-05 11:13:09,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:13:09,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:13:09,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:09,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:09,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:13:09,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:13:09,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:09,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:13:09,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:09,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:13:09,938 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129231310>
2025-09-05 11:13:09,938 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:13:09,938 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:09,938 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:13:09,939 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:09,939 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:13:09,953 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1290ff390>
2025-09-05 11:13:09,953 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:13:09,954 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:09,954 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:13:09,954 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:09,954 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:13:09,958 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1290fcf50>
2025-09-05 11:13:09,958 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:13:09,958 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:09,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:13:09,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:09,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:13:14,333 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'12df7c63-a3da-9a88-b8de-6b87a7b66c4b'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4362'), (b'req-arrive-time', b'1757041990039'), (b'resp-start-time', b'1757041994401'), (b'x-envoy-upstream-service-time', b'4360'), (b'set-cookie', b'acw_tc=12df7c63-a3da-9a88-b8de-6b87a7b66c4bd53461e37d03eff1596e7a3c1c30eb6a;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:13:14 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:13:14,334 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:13:14,334 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:13:14,334 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:13:14,335 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:13:14,335 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:13:14,335 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '12df7c63-a3da-9a88-b8de-6b87a7b66c4b', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4362', 'req-arrive-time': '1757041990039', 'resp-start-time': '1757041994401', 'x-envoy-upstream-service-time': '4360', 'set-cookie': 'acw_tc=12df7c63-a3da-9a88-b8de-6b87a7b66c4bd53461e37d03eff1596e7a3c1c30eb6a;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:13:14 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:13:14,335 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 12df7c63-a3da-9a88-b8de-6b87a7b66c4b
2025-09-05 11:13:14,336 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:13:14,336 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Emily Taylor, Score: 85
2025-09-05 11:13:14,336 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6375518208] AI analysis completed successfully
2025-09-05 11:13:14,336 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6375518208] Analysis result - Candidate: Emily Taylor, Score: 85
2025-09-05 11:13:14,336 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111309_6375518208_resume_7.pdf
2025-09-05 11:13:14,337 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_7.pdf
2025-09-05 11:13:14,337 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6375518208] Saving successful result to cache
2025-09-05 11:13:14,338 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 10 cached responses
2025-09-05 11:13:14,338 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 11
2025-09-05 11:13:14,339 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Emily Taylor - 85%
2025-09-05 11:13:14,339 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Emily Taylor - 85%
2025-09-05 11:13:14,339 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_5.pdf
2025-09-05 11:13:14,339 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:13:14,339 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:13:14,339 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111314_6375518208_resume_5.pdf
2025-09-05 11:13:14,344 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:13:14,344 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:13:14,346 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:13:14,346 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:13:14,355 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 922 characters
2025-09-05 11:13:14,355 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6375518208] Starting AI analysis with Qwen...
2025-09-05 11:13:14,355 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6375518208] Job description length: 17 chars
2025-09-05 11:13:14,355 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6375518208] Resume text length: 922 chars
2025-09-05 11:13:14,355 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:13:14,356 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 922 chars
2025-09-05 11:13:14,374 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6a423091-c79d-40c4-b611-17ae5d186250', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nOlivia Johnson\n Email: olivia.johnson@gmail.com | Phone: +1-745-334-3029\nAddress: 544 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSoftware Engineer, Bloomberg (2017 - 2018)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nFull Stack Developer, Bloomberg (2019 - 2021)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Carnegie Mellon (2012 - 2016)\nSkills\nC++, Machine Learning, REST APIs, Node.js, Docker, Kubernetes, React, Java\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:13:14,375 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:13:14,375 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:13:14,375 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1290fec60>
2025-09-05 11:13:14,375 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:14,376 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:14,376 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:13:14,376 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:14,376 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:14,376 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:13:14,376 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x12823be30> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:13:14,445 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1290febc0>
2025-09-05 11:13:14,446 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:13:14,446 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:14,446 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:13:14,446 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:14,446 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:13:14,457 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'450c3468-6f19-9fa8-bcbf-4b6d59557777'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4486'), (b'req-arrive-time', b'1757041990039'), (b'resp-start-time', b'1757041994526'), (b'x-envoy-upstream-service-time', b'4483'), (b'set-cookie', b'acw_tc=450c3468-6f19-9fa8-bcbf-4b6d595577774faaa210ce94de5c10a2ad882394465c;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:13:14 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:13:14,457 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:13:14,457 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:13:14,458 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:13:14,458 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:13:14,458 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:13:14,458 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '450c3468-6f19-9fa8-bcbf-4b6d59557777', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4486', 'req-arrive-time': '1757041990039', 'resp-start-time': '1757041994526', 'x-envoy-upstream-service-time': '4483', 'set-cookie': 'acw_tc=450c3468-6f19-9fa8-bcbf-4b6d595577774faaa210ce94de5c10a2ad882394465c;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:13:14 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:13:14,458 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 450c3468-6f19-9fa8-bcbf-4b6d59557777
2025-09-05 11:13:14,458 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:13:14,459 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Brown, Score: 75
2025-09-05 11:13:14,459 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6325039104] AI analysis completed successfully
2025-09-05 11:13:14,459 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6325039104] Analysis result - Candidate: Alice Brown, Score: 75
2025-09-05 11:13:14,459 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111309_6325039104_resume_10.pdf
2025-09-05 11:13:14,459 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_10.pdf
2025-09-05 11:13:14,459 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6325039104] Saving successful result to cache
2025-09-05 11:13:14,459 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 11 cached responses
2025-09-05 11:13:14,460 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 12
2025-09-05 11:13:14,460 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Brown - 75%
2025-09-05 11:13:14,460 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Alice Brown - 75%
2025-09-05 11:13:14,460 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_4.pdf
2025-09-05 11:13:14,460 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_10.pdf - success
2025-09-05 11:13:14,460 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:13:14,460 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:13:14,460 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111314_6325039104_resume_4.pdf
2025-09-05 11:13:14,461 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:13:14,461 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:13:14,461 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:13:14,461 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:13:14,463 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 889 characters
2025-09-05 11:13:14,463 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6325039104] Starting AI analysis with Qwen...
2025-09-05 11:13:14,463 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6325039104] Job description length: 17 chars
2025-09-05 11:13:14,463 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6325039104] Resume text length: 889 chars
2025-09-05 11:13:14,464 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:13:14,464 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 889 chars
2025-09-05 11:13:14,481 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-dc865b58-5f3f-492f-8168-cb8a56788adb', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nEmily Miller\n Email: emily.miller@gmail.com | Phone: +1-258-807-8181\nAddress: 518 Main Street, Seattle, WA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Apple (2015 - 2017)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Bloomberg (2017 - 2019)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Oxford University (2010 - 2014)\nSkills\nSQL, Java, Python, Docker, AWS, Microservices, Kubernetes, TypeScript\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:13:14,481 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:13:14,482 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:13:14,482 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129273480>
2025-09-05 11:13:14,482 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:14,482 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:14,482 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:13:14,482 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:14,482 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:14,482 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:13:14,482 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x129235910> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:13:14,504 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'0682fc66-a4a5-93a1-8830-d15aa0a90bb5'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4508'), (b'req-arrive-time', b'1757041990062'), (b'resp-start-time', b'1757041994571'), (b'x-envoy-upstream-service-time', b'4494'), (b'set-cookie', b'acw_tc=0682fc66-a4a5-93a1-8830-d15aa0a90bb5098de614a696bd023c8e9764ec5be5ee;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:13:14 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:13:14,504 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:13:14,505 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:13:14,505 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:13:14,505 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:13:14,505 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:13:14,505 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '0682fc66-a4a5-93a1-8830-d15aa0a90bb5', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4508', 'req-arrive-time': '1757041990062', 'resp-start-time': '1757041994571', 'x-envoy-upstream-service-time': '4494', 'set-cookie': 'acw_tc=0682fc66-a4a5-93a1-8830-d15aa0a90bb5098de614a696bd023c8e9764ec5be5ee;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:13:14 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:13:14,505 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 0682fc66-a4a5-93a1-8830-d15aa0a90bb5
2025-09-05 11:13:14,505 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:13:14,505 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Lee, Score: 78
2025-09-05 11:13:14,505 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6358691840] AI analysis completed successfully
2025-09-05 11:13:14,505 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6358691840] Analysis result - Candidate: Alice Lee, Score: 78
2025-09-05 11:13:14,505 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111309_6358691840_resume_8.pdf
2025-09-05 11:13:14,505 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_8.pdf
2025-09-05 11:13:14,505 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6358691840] Saving successful result to cache
2025-09-05 11:13:14,506 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 12 cached responses
2025-09-05 11:13:14,506 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 13
2025-09-05 11:13:14,506 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Lee - 78%
2025-09-05 11:13:14,506 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Alice Lee - 78%
2025-09-05 11:13:14,506 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_3.pdf
2025-09-05 11:13:14,506 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:13:14,506 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:13:14,506 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111314_6358691840_resume_3.pdf
2025-09-05 11:13:14,506 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:13:14,506 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:13:14,507 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:13:14,507 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:13:14,508 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 902 characters
2025-09-05 11:13:14,508 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6358691840] Starting AI analysis with Qwen...
2025-09-05 11:13:14,508 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6358691840] Job description length: 17 chars
2025-09-05 11:13:14,508 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6358691840] Resume text length: 902 chars
2025-09-05 11:13:14,508 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:13:14,508 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 902 chars
2025-09-05 11:13:14,524 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-7899b1a8-5fe2-477d-a85d-6188661799a9', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nOlivia Miller\n Email: olivia.miller@gmail.com | Phone: +1-964-901-9879\nAddress: 568 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nFull Stack Developer, Google (2015 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nData Engineer, Apple (2017 - 2019)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, MIT (2011 - 2016)\nSkills\nGraphQL, Go, REST APIs, Docker, TypeScript, React, Kubernetes, Machine Learning\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:13:14,525 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:13:14,525 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:13:14,525 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129273ed0>
2025-09-05 11:13:14,525 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:14,525 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:14,525 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:13:14,525 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:14,525 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:14,526 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:13:14,526 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x129235d90> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:13:14,549 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129273e80>
2025-09-05 11:13:14,549 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:13:14,550 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:14,550 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:13:14,550 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:14,550 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:13:14,591 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1292714a0>
2025-09-05 11:13:14,591 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:13:14,591 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:14,591 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:13:14,592 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:14,592 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:13:14,925 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'aa11d65e-0340-9e25-b930-29e69a129ea0'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4935'), (b'req-arrive-time', b'1757041990052'), (b'resp-start-time', b'1757041994988'), (b'x-envoy-upstream-service-time', b'4916'), (b'set-cookie', b'acw_tc=aa11d65e-0340-9e25-b930-29e69a129ea0432bc300ed13373ee9afd6366c9665b6;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:13:14 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:13:14,926 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:13:14,927 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:13:14,928 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:13:14,928 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:13:14,928 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:13:14,928 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'aa11d65e-0340-9e25-b930-29e69a129ea0', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4935', 'req-arrive-time': '1757041990052', 'resp-start-time': '1757041994988', 'x-envoy-upstream-service-time': '4916', 'set-cookie': 'acw_tc=aa11d65e-0340-9e25-b930-29e69a129ea0432bc300ed13373ee9afd6366c9665b6;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:13:14 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:13:14,929 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: aa11d65e-0340-9e25-b930-29e69a129ea0
2025-09-05 11:13:14,930 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:13:14,930 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: David Lee, Score: 75
2025-09-05 11:13:14,930 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6392344576] AI analysis completed successfully
2025-09-05 11:13:14,930 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6392344576] Analysis result - Candidate: David Lee, Score: 75
2025-09-05 11:13:14,930 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111309_6392344576_resume_6.pdf
2025-09-05 11:13:14,930 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_6.pdf
2025-09-05 11:13:14,931 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6392344576] Saving successful result to cache
2025-09-05 11:13:14,931 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 13 cached responses
2025-09-05 11:13:14,932 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 14
2025-09-05 11:13:14,932 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: David Lee - 75%
2025-09-05 11:13:14,932 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: David Lee - 75%
2025-09-05 11:13:14,932 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_2.pdf
2025-09-05 11:13:14,932 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:13:14,932 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:13:14,932 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111314_6392344576_resume_2.pdf
2025-09-05 11:13:14,933 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:13:14,933 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:13:14,933 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:13:14,933 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:13:14,938 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 1088 characters
2025-09-05 11:13:14,938 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6392344576] Starting AI analysis with Qwen...
2025-09-05 11:13:14,938 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6392344576] Job description length: 17 chars
2025-09-05 11:13:14,938 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6392344576] Resume text length: 1088 chars
2025-09-05 11:13:14,938 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:13:14,938 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1088 chars
2025-09-05 11:13:14,963 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-242a84f7-64d0-4d1a-9e63-5c78fd2ee8f6', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Smith\n Email: alice.smith@gmail.com | Phone: +1-915-210-5038\nAddress: 104 Main Street, Seattle, WA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSenior Software Engineer, Stripe (2016 - 2018)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSoftware Engineer, Airbnb (2018 - 2019)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nBackend Engineer, Apple (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Imperial College London (2010 - 2014)\nSkills\nSQL, C++, React, REST APIs, Docker, AWS, Node.js, Java\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:13:14,963 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:13:14,963 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:13:14,963 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129272170>
2025-09-05 11:13:14,963 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:14,964 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:14,964 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:13:14,964 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:14,964 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:14,964 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:13:14,964 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x129236060> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:13:15,028 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129272120>
2025-09-05 11:13:15,028 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:13:15,028 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:15,028 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:13:15,028 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:15,028 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:13:15,133 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'37a20176-7539-9c27-afe7-de55d23995d9'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'5155'), (b'req-arrive-time', b'1757041990046'), (b'resp-start-time', b'1757041995201'), (b'x-envoy-upstream-service-time', b'5129'), (b'set-cookie', b'acw_tc=37a20176-7539-9c27-afe7-de55d23995d9ffbab9db7d3552466462c221f0fdbc93;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:13:15 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:13:15,133 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:13:15,133 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:13:15,134 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:13:15,134 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:13:15,134 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:13:15,134 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '37a20176-7539-9c27-afe7-de55d23995d9', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '5155', 'req-arrive-time': '1757041990046', 'resp-start-time': '1757041995201', 'x-envoy-upstream-service-time': '5129', 'set-cookie': 'acw_tc=37a20176-7539-9c27-afe7-de55d23995d9ffbab9db7d3552466462c221f0fdbc93;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:13:15 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:13:15,135 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 37a20176-7539-9c27-afe7-de55d23995d9
2025-09-05 11:13:15,135 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:13:15,136 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: John Lee, Score: 75
2025-09-05 11:13:15,136 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6341865472] AI analysis completed successfully
2025-09-05 11:13:15,136 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6341865472] Analysis result - Candidate: John Lee, Score: 75
2025-09-05 11:13:15,136 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111309_6341865472_resume_9.pdf
2025-09-05 11:13:15,136 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_9.pdf
2025-09-05 11:13:15,136 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6341865472] Saving successful result to cache
2025-09-05 11:13:15,137 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 14 cached responses
2025-09-05 11:13:15,137 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 15
2025-09-05 11:13:15,137 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: John Lee - 75%
2025-09-05 11:13:15,137 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: John Lee - 75%
2025-09-05 11:13:15,138 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_1.pdf
2025-09-05 11:13:15,138 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:13:15,138 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:13:15,138 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_9.pdf - success
2025-09-05 11:13:15,138 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111315_6341865472_resume_1.pdf
2025-09-05 11:13:15,138 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_8.pdf - success
2025-09-05 11:13:15,138 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_7.pdf - success
2025-09-05 11:13:15,138 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_6.pdf - success
2025-09-05 11:13:15,138 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:13:15,138 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:13:15,139 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:13:15,139 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:13:15,142 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 859 characters
2025-09-05 11:13:15,142 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6341865472] Starting AI analysis with Qwen...
2025-09-05 11:13:15,142 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6341865472] Job description length: 17 chars
2025-09-05 11:13:15,143 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6341865472] Resume text length: 859 chars
2025-09-05 11:13:15,143 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-05 11:13:15,143 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 859 chars
2025-09-05 11:13:15,163 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d32ac60a-df63-4ac6-a46e-b29a1e5492b9', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nJohn Lee\n Email: john.lee@gmail.com | Phone: +1-409-397-2292\nAddress: 580 Main Street, London, UK\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Stripe (2018 - 2020)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Netflix (2020 - 2021)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, UC Berkeley (2010 - 2016)\nSkills\nKubernetes, Node.js, Docker, Microservices, Java, AWS, C++, Go\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-05 11:13:15,164 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-05 11:13:15,164 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-05 11:13:15,164 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129271860>
2025-09-05 11:13:15,164 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:15,164 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:15,164 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-05 11:13:15,164 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:15,164 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-05 11:13:15,164 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-05 11:13:15,165 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x129236840> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-05 11:13:15,233 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x129271540>
2025-09-05 11:13:15,233 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-05 11:13:15,233 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-05 11:13:15,233 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-05 11:13:15,233 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-05 11:13:15,234 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-05 11:13:18,775 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'2569bc95-763a-9331-a940-83d040776442'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4296'), (b'req-arrive-time', b'1757041994548'), (b'resp-start-time', b'1757041998844'), (b'x-envoy-upstream-service-time', b'4295'), (b'set-cookie', b'acw_tc=2569bc95-763a-9331-a940-83d0407764423ee02c1c9490702efe6ca6bb5baa52b2;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:13:18 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:13:18,776 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:13:18,776 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:13:18,776 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:13:18,777 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:13:18,777 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:13:18,777 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '2569bc95-763a-9331-a940-83d040776442', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4296', 'req-arrive-time': '1757041994548', 'resp-start-time': '1757041998844', 'x-envoy-upstream-service-time': '4295', 'set-cookie': 'acw_tc=2569bc95-763a-9331-a940-83d0407764423ee02c1c9490702efe6ca6bb5baa52b2;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:13:18 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:13:18,777 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 2569bc95-763a-9331-a940-83d040776442
2025-09-05 11:13:18,777 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:13:18,777 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Olivia Johnson, Score: 85
2025-09-05 11:13:18,777 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6375518208] AI analysis completed successfully
2025-09-05 11:13:18,777 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6375518208] Analysis result - Candidate: Olivia Johnson, Score: 85
2025-09-05 11:13:18,777 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111314_6375518208_resume_5.pdf
2025-09-05 11:13:18,778 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_5.pdf
2025-09-05 11:13:18,778 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6375518208] Saving successful result to cache
2025-09-05 11:13:18,778 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 15 cached responses
2025-09-05 11:13:18,779 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 16
2025-09-05 11:13:18,779 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Olivia Johnson - 85%
2025-09-05 11:13:18,779 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Olivia Johnson - 85%
2025-09-05 11:13:18,779 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_5.pdf - success
2025-09-05 11:13:19,380 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'161e61f9-e9e5-9ac1-b8a3-790efd168f5c'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4799'), (b'req-arrive-time', b'1757041994650'), (b'resp-start-time', b'1757041999450'), (b'x-envoy-upstream-service-time', b'4798'), (b'set-cookie', b'acw_tc=161e61f9-e9e5-9ac1-b8a3-790efd168f5cf9a3e42a079c08a28060977216676aed;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:13:19 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:13:19,381 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:13:19,381 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:13:19,381 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:13:19,381 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:13:19,381 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:13:19,381 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '161e61f9-e9e5-9ac1-b8a3-790efd168f5c', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4799', 'req-arrive-time': '1757041994650', 'resp-start-time': '1757041999450', 'x-envoy-upstream-service-time': '4798', 'set-cookie': 'acw_tc=161e61f9-e9e5-9ac1-b8a3-790efd168f5cf9a3e42a079c08a28060977216676aed;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:13:19 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:13:19,381 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 161e61f9-e9e5-9ac1-b8a3-790efd168f5c
2025-09-05 11:13:19,382 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:13:19,382 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Emily Miller, Score: 85
2025-09-05 11:13:19,382 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6325039104] AI analysis completed successfully
2025-09-05 11:13:19,382 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6325039104] Analysis result - Candidate: Emily Miller, Score: 85
2025-09-05 11:13:19,382 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111314_6325039104_resume_4.pdf
2025-09-05 11:13:19,382 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_4.pdf
2025-09-05 11:13:19,382 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6325039104] Saving successful result to cache
2025-09-05 11:13:19,382 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 16 cached responses
2025-09-05 11:13:19,383 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 17
2025-09-05 11:13:19,383 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Emily Miller - 85%
2025-09-05 11:13:19,383 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Emily Miller - 85%
2025-09-05 11:13:19,383 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_4.pdf - success
2025-09-05 11:13:19,633 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ee1974ff-3ebf-9b0f-9515-9324f16abac5'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4322'), (b'req-arrive-time', b'1757041995334'), (b'resp-start-time', b'1757041999657'), (b'x-envoy-upstream-service-time', b'4321'), (b'set-cookie', b'acw_tc=ee1974ff-3ebf-9b0f-9515-9324f16abac57b967420de62691399958e85e9a61708;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:13:19 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:13:19,633 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:13:19,633 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:13:19,633 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:13:19,633 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:13:19,633 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:13:19,633 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ee1974ff-3ebf-9b0f-9515-9324f16abac5', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4322', 'req-arrive-time': '1757041995334', 'resp-start-time': '1757041999657', 'x-envoy-upstream-service-time': '4321', 'set-cookie': 'acw_tc=ee1974ff-3ebf-9b0f-9515-9324f16abac57b967420de62691399958e85e9a61708;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:13:19 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:13:19,633 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: ee1974ff-3ebf-9b0f-9515-9324f16abac5
2025-09-05 11:13:19,634 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:13:19,634 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: John Lee, Score: 75
2025-09-05 11:13:19,634 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6341865472] AI analysis completed successfully
2025-09-05 11:13:19,634 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6341865472] Analysis result - Candidate: John Lee, Score: 75
2025-09-05 11:13:19,634 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111315_6341865472_resume_1.pdf
2025-09-05 11:13:19,634 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_1.pdf
2025-09-05 11:13:19,634 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6341865472] Saving successful result to cache
2025-09-05 11:13:19,635 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 17 cached responses
2025-09-05 11:13:19,635 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 18
2025-09-05 11:13:19,635 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: John Lee - 75%
2025-09-05 11:13:19,635 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: John Lee - 75%
2025-09-05 11:13:19,862 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'0b22b482-5edc-99c0-a34c-0525ee4aeadb'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4804'), (b'req-arrive-time', b'1757041995129'), (b'resp-start-time', b'1757041999933'), (b'x-envoy-upstream-service-time', b'4803'), (b'set-cookie', b'acw_tc=0b22b482-5edc-99c0-a34c-0525ee4aeadbb91d7a735be94ae76b1095cdfe68f5a6;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:13:19 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:13:19,863 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:13:19,863 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:13:19,863 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:13:19,863 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:13:19,863 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:13:19,863 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '0b22b482-5edc-99c0-a34c-0525ee4aeadb', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4804', 'req-arrive-time': '1757041995129', 'resp-start-time': '1757041999933', 'x-envoy-upstream-service-time': '4803', 'set-cookie': 'acw_tc=0b22b482-5edc-99c0-a34c-0525ee4aeadbb91d7a735be94ae76b1095cdfe68f5a6;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:13:19 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:13:19,863 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 0b22b482-5edc-99c0-a34c-0525ee4aeadb
2025-09-05 11:13:19,864 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:13:19,864 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Smith, Score: 75
2025-09-05 11:13:19,864 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6392344576] AI analysis completed successfully
2025-09-05 11:13:19,864 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6392344576] Analysis result - Candidate: Alice Smith, Score: 75
2025-09-05 11:13:19,864 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111314_6392344576_resume_2.pdf
2025-09-05 11:13:19,864 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_2.pdf
2025-09-05 11:13:19,864 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6392344576] Saving successful result to cache
2025-09-05 11:13:19,865 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 18 cached responses
2025-09-05 11:13:19,865 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 19
2025-09-05 11:13:19,865 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Smith - 75%
2025-09-05 11:13:19,865 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Alice Smith - 75%
2025-09-05 11:13:20,076 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'852f2999-014c-9211-a3ec-65bba9850ab7'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'5454'), (b'req-arrive-time', b'1757041994692'), (b'resp-start-time', b'1757042000146'), (b'x-envoy-upstream-service-time', b'5451'), (b'set-cookie', b'acw_tc=852f2999-014c-9211-a3ec-65bba9850ab7dbb77be2bd748585c98619222e3a1b64;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Fri, 05 Sep 2025 03:13:19 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-05 11:13:20,077 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-05 11:13:20,077 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-05 11:13:20,077 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-05 11:13:20,077 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-05 11:13:20,077 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-05 11:13:20,077 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '852f2999-014c-9211-a3ec-65bba9850ab7', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '5454', 'req-arrive-time': '1757041994692', 'resp-start-time': '1757042000146', 'x-envoy-upstream-service-time': '5451', 'set-cookie': 'acw_tc=852f2999-014c-9211-a3ec-65bba9850ab7dbb77be2bd748585c98619222e3a1b64;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Fri, 05 Sep 2025 03:13:19 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-05 11:13:20,078 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 852f2999-014c-9211-a3ec-65bba9850ab7
2025-09-05 11:13:20,078 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-05 11:13:20,079 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Olivia Miller, Score: 85
2025-09-05 11:13:20,079 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6358691840] AI analysis completed successfully
2025-09-05 11:13:20,079 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6358691840] Analysis result - Candidate: Olivia Miller, Score: 85
2025-09-05 11:13:20,079 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111314_6358691840_resume_3.pdf
2025-09-05 11:13:20,079 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_3.pdf
2025-09-05 11:13:20,079 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6358691840] Saving successful result to cache
2025-09-05 11:13:20,080 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 19 cached responses
2025-09-05 11:13:20,081 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 20
2025-09-05 11:13:20,081 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Olivia Miller - 85%
2025-09-05 11:13:20,081 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Olivia Miller - 85%
2025-09-05 11:13:20,081 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_3.pdf - success
2025-09-05 11:13:20,081 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_2.pdf - success
2025-09-05 11:13:20,081 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-05 11:13:20,081 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-05 11:13:20,082 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-05 11:13:20,082 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:13:20,082 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Emily Taylor with 85% match
2025-09-05 11:13:20,082 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:13:20,082 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 20408 characters
2025-09-05 11:13:20,082 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 22078 bytes
2025-09-05 11:13:20,083 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:13:20] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:14:44,219 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:14:44,220 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:14:44,222 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:14:44,223 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:14:44] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:14:44,253 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:14:44,253 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1756953860.6670468-21131-2280592960"', 'If-Modified-Since': 'Thu, 04 Sep 2025 02:44:20 GMT'}
2025-09-05 11:14:44,256 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 22553 bytes
2025-09-05 11:14:44,259 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:14:44,259 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:14:44] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-05 11:14:44,260 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040950.3264692-48522-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:55:50 GMT'}
2025-09-05 11:14:44,261 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 49142 bytes
2025-09-05 11:14:44,261 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:14:44] "GET /static/script.js HTTP/1.1" 200 -
2025-09-05 11:14:44,336 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:14:44,336 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:14:44,336 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:14:44,337 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:14:44,337 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:14:44] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:14:48,873 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-05 11:14:49,674 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:14:49,681 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:14:49,691 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:14:49,691 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:14:49,693 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:14:49,694 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:14:49] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:14:49,714 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:14:49,715 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042082.7140553-22553-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:14:42 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:14:49,716 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:14:49,716 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042010.6760247-49142-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:13:30 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:14:49,717 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 22553 bytes
2025-09-05 11:14:49,717 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 49142 bytes
2025-09-05 11:14:49,717 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:14:49] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:14:49,717 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:14:49] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:14:49,777 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:14:49,777 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:14:49,777 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:14:49,777 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:14:49,777 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:14:49] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:14:55,922 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:14:55,923 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '25548', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryFVZOqrj8dCGRSsJ1', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:14:55,923 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryFVZOqrj8dCGRSsJ1
2025-09-05 11:14:55,923 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 25548
2025-09-05 11:14:55,927 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_9.pdf', 'resume_10.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:14:55,927 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[16 chars]'}
2025-09-05 11:14:55,927 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:14:55,927 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 16, Mock: True
2025-09-05 11:14:55,927 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_9.pdf', 'resume_10.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:14:55,927 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-05 11:14:55,928 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:14:55,928 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6177337344] Starting processing file: resume_9.pdf
2025-09-05 11:14:55,928 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6177337344] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:14:55,928 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6194163712] Starting processing file: resume_10.pdf
2025-09-05 11:14:55,928 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6177337344] Validating file type...
2025-09-05 11:14:55,928 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6194163712] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:14:55,929 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6210990080] Starting processing file: resume_8.pdf
2025-09-05 11:14:55,929 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6177337344] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6177337344_resume_9.pdf
2025-09-05 11:14:55,929 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6227816448] Starting processing file: resume_7.pdf
2025-09-05 11:14:55,929 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6194163712] Validating file type...
2025-09-05 11:14:55,929 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6244642816] Starting processing file: resume_6.pdf
2025-09-05 11:14:55,929 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-05 11:14:55,929 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6210990080] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:14:55,929 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6227816448] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:14:55,929 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6194163712] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6194163712_resume_10.pdf
2025-09-05 11:14:55,929 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6244642816] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:14:55,930 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6210990080] Validating file type...
2025-09-05 11:14:55,930 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6227816448] Validating file type...
2025-09-05 11:14:55,930 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6244642816] Validating file type...
2025-09-05 11:14:55,930 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6210990080] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6210990080_resume_8.pdf
2025-09-05 11:14:55,930 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6227816448] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6227816448_resume_7.pdf
2025-09-05 11:14:55,930 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6177337344] File saved successfully
2025-09-05 11:14:55,930 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6244642816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6244642816_resume_6.pdf
2025-09-05 11:14:55,930 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6194163712] File saved successfully
2025-09-05 11:14:55,930 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6177337344] Validating PDF structure...
2025-09-05 11:14:55,930 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6194163712] Validating PDF structure...
2025-09-05 11:14:55,931 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6210990080] File saved successfully
2025-09-05 11:14:55,932 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6194163712] PDF validation passed
2025-09-05 11:14:55,932 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6227816448] File saved successfully
2025-09-05 11:14:55,932 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6210990080] Validating PDF structure...
2025-09-05 11:14:55,933 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6177337344] PDF validation passed
2025-09-05 11:14:55,933 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6244642816] File saved successfully
2025-09-05 11:14:55,933 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6194163712] Extracting text from PDF...
2025-09-05 11:14:55,933 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6227816448] Validating PDF structure...
2025-09-05 11:14:55,934 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6177337344] Extracting text from PDF...
2025-09-05 11:14:55,934 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6244642816] Validating PDF structure...
2025-09-05 11:14:55,934 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6210990080] PDF validation passed
2025-09-05 11:14:55,935 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6210990080] Extracting text from PDF...
2025-09-05 11:14:55,938 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6194163712] Text extracted successfully - 1093 characters
2025-09-05 11:14:55,938 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6244642816] PDF validation passed
2025-09-05 11:14:55,939 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6227816448] PDF validation passed
2025-09-05 11:14:55,939 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6194163712] Mock mode - attempting to use cached response
2025-09-05 11:14:55,939 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6244642816] Extracting text from PDF...
2025-09-05 11:14:55,942 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6227816448] Extracting text from PDF...
2025-09-05 11:14:55,943 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6177337344] Text extracted successfully - 870 characters
2025-09-05 11:14:55,945 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6210990080] Text extracted successfully - 1125 characters
2025-09-05 11:14:55,945 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6177337344] Mock mode - attempting to use cached response
2025-09-05 11:14:55,945 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6210990080] Mock mode - attempting to use cached response
2025-09-05 11:14:55,947 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6244642816] Text extracted successfully - 873 characters
2025-09-05 11:14:55,947 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:14:55,947 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6244642816] Mock mode - attempting to use cached response
2025-09-05 11:14:55,947 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:14:55,947 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 33%
2025-09-05 11:14:55,951 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:14:55,951 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6227816448] Text extracted successfully - 1070 characters
2025-09-05 11:14:55,951 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 79%
2025-09-05 11:14:55,951 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-05 11:14:55,951 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:14:55,951 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 29%
2025-09-05 11:14:55,951 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6227816448] Mock mode - attempting to use cached response
2025-09-05 11:14:55,951 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-05 11:14:55,951 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6194163712] Using cached response: Mock-James Anderson
2025-09-05 11:14:55,951 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 72%
2025-09-05 11:14:55,952 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-05 11:14:55,952 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6210990080] Using cached response: Mock-Alice Smith
2025-09-05 11:14:55,952 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6194163712] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6194163712_resume_10.pdf
2025-09-05 11:14:55,952 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:14:55,952 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-05 11:14:55,952 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6177337344] Using cached response: Mock-Sophia Lee
2025-09-05 11:14:55,952 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6210990080] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6210990080_resume_8.pdf
2025-09-05 11:14:55,952 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 90%
2025-09-05 11:14:55,952 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6244642816] Using cached response: Mock-John Lee
2025-09-05 11:14:55,952 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6177337344] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6177337344_resume_9.pdf
2025-09-05 11:14:55,952 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6194163712] File processing completed successfully for: resume_10.pdf
2025-09-05 11:14:55,952 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-05 11:14:55,952 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6244642816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6244642816_resume_6.pdf
2025-09-05 11:14:55,952 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6210990080] File processing completed successfully for: resume_8.pdf
2025-09-05 11:14:55,952 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6194163712] Mock result - not saving to cache
2025-09-05 11:14:55,952 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6177337344] File processing completed successfully for: resume_9.pdf
2025-09-05 11:14:55,952 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6227816448] Using cached response: Mock-Emily Miller
2025-09-05 11:14:55,952 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6210990080] Mock result - not saving to cache
2025-09-05 11:14:55,952 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6194163712] Returning result: Mock-James Anderson - 33%
2025-09-05 11:14:55,952 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6177337344] Mock result - not saving to cache
2025-09-05 11:14:55,952 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6244642816] File processing completed successfully for: resume_6.pdf
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6227816448] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6227816448_resume_7.pdf
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6210990080] Returning result: Mock-Alice Smith - 79%
2025-09-05 11:14:55,953 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6194163712] Starting processing file: resume_5.pdf
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6177337344] Returning result: Mock-Sophia Lee - 29%
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6244642816] Mock result - not saving to cache
2025-09-05 11:14:55,953 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6210990080] Starting processing file: resume_4.pdf
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6194163712] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:14:55,953 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6227816448] File processing completed successfully for: resume_7.pdf
2025-09-05 11:14:55,953 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6177337344] Starting processing file: resume_3.pdf
2025-09-05 11:14:55,953 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_9.pdf - success
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6244642816] Returning result: Mock-John Lee - 72%
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6210990080] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6194163712] Validating file type...
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6227816448] Mock result - not saving to cache
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6177337344] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:14:55,953 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_10.pdf - success
2025-09-05 11:14:55,953 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6244642816] Starting processing file: resume_2.pdf
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6210990080] Validating file type...
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6194163712] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6194163712_resume_5.pdf
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6227816448] Returning result: Mock-Emily Miller - 90%
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6177337344] Validating file type...
2025-09-05 11:14:55,953 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_8.pdf - success
2025-09-05 11:14:55,953 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6244642816] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:14:55,954 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6210990080] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6210990080_resume_4.pdf
2025-09-05 11:14:55,954 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6227816448] Starting processing file: resume_1.pdf
2025-09-05 11:14:55,954 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6177337344] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6177337344_resume_3.pdf
2025-09-05 11:14:55,954 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_7.pdf - success
2025-09-05 11:14:55,954 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6244642816] Validating file type...
2025-09-05 11:14:55,954 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6227816448] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:14:55,954 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_6.pdf - success
2025-09-05 11:14:55,954 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6244642816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6244642816_resume_2.pdf
2025-09-05 11:14:55,954 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6227816448] Validating file type...
2025-09-05 11:14:55,954 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6227816448] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6227816448_resume_1.pdf
2025-09-05 11:14:55,954 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6194163712] File saved successfully
2025-09-05 11:14:55,954 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6194163712] Validating PDF structure...
2025-09-05 11:14:55,954 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6194163712] PDF validation passed
2025-09-05 11:14:55,954 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6194163712] Extracting text from PDF...
2025-09-05 11:14:55,954 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6177337344] File saved successfully
2025-09-05 11:14:55,955 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6227816448] File saved successfully
2025-09-05 11:14:55,955 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6244642816] File saved successfully
2025-09-05 11:14:55,955 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6210990080] File saved successfully
2025-09-05 11:14:55,955 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6177337344] Validating PDF structure...
2025-09-05 11:14:55,955 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6227816448] Validating PDF structure...
2025-09-05 11:14:55,957 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6244642816] Validating PDF structure...
2025-09-05 11:14:55,957 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6194163712] Text extracted successfully - 922 characters
2025-09-05 11:14:55,957 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6210990080] Validating PDF structure...
2025-09-05 11:14:55,957 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6194163712] Mock mode - attempting to use cached response
2025-09-05 11:14:55,958 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:14:55,958 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 74%
2025-09-05 11:14:55,958 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-05 11:14:55,958 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6194163712] Using cached response: Mock-John Lee
2025-09-05 11:14:55,958 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6194163712] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6194163712_resume_5.pdf
2025-09-05 11:14:55,959 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6177337344] PDF validation passed
2025-09-05 11:14:55,959 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6194163712] File processing completed successfully for: resume_5.pdf
2025-09-05 11:14:55,960 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6194163712] Mock result - not saving to cache
2025-09-05 11:14:55,960 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6177337344] Extracting text from PDF...
2025-09-05 11:14:55,960 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6244642816] PDF validation passed
2025-09-05 11:14:55,960 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6194163712] Returning result: Mock-John Lee - 74%
2025-09-05 11:14:55,960 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6210990080] PDF validation passed
2025-09-05 11:14:55,960 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6244642816] Extracting text from PDF...
2025-09-05 11:14:55,961 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6227816448] PDF validation passed
2025-09-05 11:14:55,961 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_5.pdf - success
2025-09-05 11:14:55,962 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6177337344] Text extracted successfully - 902 characters
2025-09-05 11:14:55,962 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6210990080] Extracting text from PDF...
2025-09-05 11:14:55,962 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6227816448] Extracting text from PDF...
2025-09-05 11:14:55,964 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6244642816] Text extracted successfully - 1088 characters
2025-09-05 11:14:55,964 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6244642816] Mock mode - attempting to use cached response
2025-09-05 11:14:55,962 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6177337344] Mock mode - attempting to use cached response
2025-09-05 11:14:55,967 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6227816448] Text extracted successfully - 859 characters
2025-09-05 11:14:55,967 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6227816448] Mock mode - attempting to use cached response
2025-09-05 11:14:55,969 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6210990080] Text extracted successfully - 889 characters
2025-09-05 11:14:55,969 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6210990080] Mock mode - attempting to use cached response
2025-09-05 11:14:55,969 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:14:55,969 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:14:55,969 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 75%
2025-09-05 11:14:55,969 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:14:55,969 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Michael Brown - 36%
2025-09-05 11:14:55,969 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:14:55,970 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 26%
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 399c9734
2025-09-05 11:14:55,970 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6244642816] Using cached response: Mock-John Lee
2025-09-05 11:14:55,970 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 24%
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-05 11:14:55,970 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6227816448] Using cached response: Mock-Michael Brown
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6244642816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6244642816_resume_2.pdf
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-05 11:14:55,970 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6177337344] Using cached response: Mock-Sophia Lee
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6227816448] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6227816448_resume_1.pdf
2025-09-05 11:14:55,970 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6210990080] Using cached response: Mock-Maria Gonzalez
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6210990080] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6210990080_resume_4.pdf
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6177337344] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111455_6177337344_resume_3.pdf
2025-09-05 11:14:55,970 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6244642816] File processing completed successfully for: resume_2.pdf
2025-09-05 11:14:55,970 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6227816448] File processing completed successfully for: resume_1.pdf
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6244642816] Mock result - not saving to cache
2025-09-05 11:14:55,970 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6210990080] File processing completed successfully for: resume_4.pdf
2025-09-05 11:14:55,970 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6177337344] File processing completed successfully for: resume_3.pdf
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6227816448] Mock result - not saving to cache
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6244642816] Returning result: Mock-John Lee - 75%
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6210990080] Mock result - not saving to cache
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6177337344] Mock result - not saving to cache
2025-09-05 11:14:55,970 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6227816448] Returning result: Mock-Michael Brown - 36%
2025-09-05 11:14:55,971 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6210990080] Returning result: Mock-Maria Gonzalez - 24%
2025-09-05 11:14:55,971 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6177337344] Returning result: Mock-Sophia Lee - 26%
2025-09-05 11:14:55,971 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_4.pdf - success
2025-09-05 11:14:55,971 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_3.pdf - success
2025-09-05 11:14:55,971 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_2.pdf - success
2025-09-05 11:14:55,971 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-05 11:14:55,971 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-05 11:14:55,971 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-05 11:14:55,971 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:14:55,971 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Emily Miller with 90% match
2025-09-05 11:14:55,971 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:14:55,971 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 18190 characters
2025-09-05 11:14:55,971 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 19799 bytes
2025-09-05 11:14:55,971 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:14:55] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:16:13,334 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:16:13,334 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:16:13,335 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:16:13,335 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:16:13] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:16:13,355 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:16:13,357 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757042082.7140553-22553-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:14:42 GMT'}
2025-09-05 11:16:13,358 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 22632 bytes
2025-09-05 11:16:13,358 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:16:13,360 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757042010.6760247-49142-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:13:30 GMT'}
2025-09-05 11:16:13,360 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 49142 bytes
2025-09-05 11:16:13,360 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:16:13] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-05 11:16:13,361 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:16:13] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:16:13,365 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:16:13,365 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:16:13,366 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:16:13,366 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:16:13,366 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:16:13] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:16:18,059 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:16:18,059 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '25547', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryTVz6dDlrqVDWOnl8', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:16:18,059 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryTVz6dDlrqVDWOnl8
2025-09-05 11:16:18,059 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 25547
2025-09-05 11:16:18,060 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:16:18,060 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[15 chars]'}
2025-09-05 11:16:18,060 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:16:18,061 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 15, Mock: True
2025-09-05 11:16:18,061 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:16:18,061 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-05 11:16:18,061 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:16:18,061 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6177337344] Starting processing file: resume_10.pdf
2025-09-05 11:16:18,061 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6194163712] Starting processing file: resume_9.pdf
2025-09-05 11:16:18,061 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6210990080] Starting processing file: resume_8.pdf
2025-09-05 11:16:18,061 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6177337344] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:16:18,061 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6194163712] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:16:18,061 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6227816448] Starting processing file: resume_7.pdf
2025-09-05 11:16:18,061 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6210990080] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:16:18,061 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6244642816] Starting processing file: resume_6.pdf
2025-09-05 11:16:18,061 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6177337344] Validating file type...
2025-09-05 11:16:18,061 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-05 11:16:18,061 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6194163712] Validating file type...
2025-09-05 11:16:18,061 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6227816448] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:16:18,062 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6210990080] Validating file type...
2025-09-05 11:16:18,062 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6244642816] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:16:18,062 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6177337344] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6177337344_resume_10.pdf
2025-09-05 11:16:18,062 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6194163712] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6194163712_resume_9.pdf
2025-09-05 11:16:18,062 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6227816448] Validating file type...
2025-09-05 11:16:18,062 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6210990080] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6210990080_resume_8.pdf
2025-09-05 11:16:18,062 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6244642816] Validating file type...
2025-09-05 11:16:18,062 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6227816448] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6227816448_resume_7.pdf
2025-09-05 11:16:18,062 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6244642816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6244642816_resume_6.pdf
2025-09-05 11:16:18,063 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6194163712] File saved successfully
2025-09-05 11:16:18,063 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6194163712] Validating PDF structure...
2025-09-05 11:16:18,063 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6177337344] File saved successfully
2025-09-05 11:16:18,063 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6227816448] File saved successfully
2025-09-05 11:16:18,063 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6210990080] File saved successfully
2025-09-05 11:16:18,063 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6244642816] File saved successfully
2025-09-05 11:16:18,063 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6177337344] Validating PDF structure...
2025-09-05 11:16:18,063 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6227816448] Validating PDF structure...
2025-09-05 11:16:18,063 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6210990080] Validating PDF structure...
2025-09-05 11:16:18,063 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6244642816] Validating PDF structure...
2025-09-05 11:16:18,064 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6194163712] PDF validation passed
2025-09-05 11:16:18,065 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6227816448] PDF validation passed
2025-09-05 11:16:18,065 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6177337344] PDF validation passed
2025-09-05 11:16:18,065 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6194163712] Extracting text from PDF...
2025-09-05 11:16:18,065 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6227816448] Extracting text from PDF...
2025-09-05 11:16:18,066 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6177337344] Extracting text from PDF...
2025-09-05 11:16:18,066 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6210990080] PDF validation passed
2025-09-05 11:16:18,066 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6210990080] Extracting text from PDF...
2025-09-05 11:16:18,066 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6244642816] PDF validation passed
2025-09-05 11:16:18,066 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6244642816] Extracting text from PDF...
2025-09-05 11:16:18,068 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6227816448] Text extracted successfully - 1070 characters
2025-09-05 11:16:18,070 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6194163712] Text extracted successfully - 870 characters
2025-09-05 11:16:18,073 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6227816448] Mock mode - attempting to use cached response
2025-09-05 11:16:18,073 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6177337344] Text extracted successfully - 1093 characters
2025-09-05 11:16:18,074 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6194163712] Mock mode - attempting to use cached response
2025-09-05 11:16:18,075 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6210990080] Text extracted successfully - 1125 characters
2025-09-05 11:16:18,075 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6177337344] Mock mode - attempting to use cached response
2025-09-05 11:16:18,076 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6210990080] Mock mode - attempting to use cached response
2025-09-05 11:16:18,076 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:16:18,078 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:16:18,078 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 79%
2025-09-05 11:16:18,078 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6244642816] Text extracted successfully - 873 characters
2025-09-05 11:16:18,078 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 87%
2025-09-05 11:16:18,078 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:16:18,078 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:16:18,078 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-05 11:16:18,078 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6244642816] Mock mode - attempting to use cached response
2025-09-05 11:16:18,078 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-05 11:16:18,078 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 90%
2025-09-05 11:16:18,078 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 32%
2025-09-05 11:16:18,078 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6194163712] Using cached response: Mock-Alice Smith
2025-09-05 11:16:18,079 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6227816448] Using cached response: Mock-Emily Miller
2025-09-05 11:16:18,079 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:16:18,079 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-05 11:16:18,079 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-05 11:16:18,079 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6194163712] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6194163712_resume_9.pdf
2025-09-05 11:16:18,079 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6227816448] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6227816448_resume_7.pdf
2025-09-05 11:16:18,079 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 21%
2025-09-05 11:16:18,079 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-05 11:16:18,079 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6177337344] Using cached response: Mock-David Smith
2025-09-05 11:16:18,079 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6210990080] Using cached response: Mock-Emily Taylor
2025-09-05 11:16:18,079 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6244642816] Using cached response: Mock-Emily Davis
2025-09-05 11:16:18,079 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6227816448] File processing completed successfully for: resume_7.pdf
2025-09-05 11:16:18,080 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6194163712] File processing completed successfully for: resume_9.pdf
2025-09-05 11:16:18,080 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6177337344] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6177337344_resume_10.pdf
2025-09-05 11:16:18,080 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6210990080] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6210990080_resume_8.pdf
2025-09-05 11:16:18,080 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6244642816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6244642816_resume_6.pdf
2025-09-05 11:16:18,080 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6227816448] Mock result - not saving to cache
2025-09-05 11:16:18,080 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6194163712] Mock result - not saving to cache
2025-09-05 11:16:18,080 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6177337344] File processing completed successfully for: resume_10.pdf
2025-09-05 11:16:18,080 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6227816448] Returning result: Mock-Emily Miller - 87%
2025-09-05 11:16:18,081 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6244642816] File processing completed successfully for: resume_6.pdf
2025-09-05 11:16:18,081 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6194163712] Returning result: Mock-Alice Smith - 79%
2025-09-05 11:16:18,081 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6210990080] File processing completed successfully for: resume_8.pdf
2025-09-05 11:16:18,081 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6177337344] Mock result - not saving to cache
2025-09-05 11:16:18,081 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6227816448] Starting processing file: resume_5.pdf
2025-09-05 11:16:18,081 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6244642816] Mock result - not saving to cache
2025-09-05 11:16:18,081 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6194163712] Starting processing file: resume_4.pdf
2025-09-05 11:16:18,081 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6210990080] Mock result - not saving to cache
2025-09-05 11:16:18,081 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6177337344] Returning result: Mock-David Smith - 32%
2025-09-05 11:16:18,081 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6227816448] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:16:18,081 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6244642816] Returning result: Mock-Emily Davis - 21%
2025-09-05 11:16:18,081 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6194163712] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:16:18,081 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6210990080] Returning result: Mock-Emily Taylor - 90%
2025-09-05 11:16:18,081 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6177337344] Starting processing file: resume_3.pdf
2025-09-05 11:16:18,081 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6227816448] Validating file type...
2025-09-05 11:16:18,081 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6244642816] Starting processing file: resume_2.pdf
2025-09-05 11:16:18,081 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_10.pdf - success
2025-09-05 11:16:18,082 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6194163712] Validating file type...
2025-09-05 11:16:18,082 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6210990080] Starting processing file: resume_1.pdf
2025-09-05 11:16:18,082 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6177337344] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:16:18,082 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6227816448] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6227816448_resume_5.pdf
2025-09-05 11:16:18,082 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6244642816] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:16:18,082 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_9.pdf - success
2025-09-05 11:16:18,082 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6194163712] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6194163712_resume_4.pdf
2025-09-05 11:16:18,082 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6210990080] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:16:18,082 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6177337344] Validating file type...
2025-09-05 11:16:18,082 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6244642816] Validating file type...
2025-09-05 11:16:18,082 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_8.pdf - success
2025-09-05 11:16:18,082 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6210990080] Validating file type...
2025-09-05 11:16:18,082 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6177337344] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6177337344_resume_3.pdf
2025-09-05 11:16:18,082 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6244642816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6244642816_resume_2.pdf
2025-09-05 11:16:18,082 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_7.pdf - success
2025-09-05 11:16:18,082 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6210990080] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6210990080_resume_1.pdf
2025-09-05 11:16:18,082 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_6.pdf - success
2025-09-05 11:16:18,083 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6227816448] File saved successfully
2025-09-05 11:16:18,083 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6227816448] Validating PDF structure...
2025-09-05 11:16:18,083 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6194163712] File saved successfully
2025-09-05 11:16:18,083 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6244642816] File saved successfully
2025-09-05 11:16:18,083 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6210990080] File saved successfully
2025-09-05 11:16:18,083 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6194163712] Validating PDF structure...
2025-09-05 11:16:18,083 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6177337344] File saved successfully
2025-09-05 11:16:18,083 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6244642816] Validating PDF structure...
2025-09-05 11:16:18,083 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6210990080] Validating PDF structure...
2025-09-05 11:16:18,083 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6227816448] PDF validation passed
2025-09-05 11:16:18,083 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6177337344] Validating PDF structure...
2025-09-05 11:16:18,083 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6227816448] Extracting text from PDF...
2025-09-05 11:16:18,084 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6194163712] PDF validation passed
2025-09-05 11:16:18,084 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6244642816] PDF validation passed
2025-09-05 11:16:18,084 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6194163712] Extracting text from PDF...
2025-09-05 11:16:18,084 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6244642816] Extracting text from PDF...
2025-09-05 11:16:18,084 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6210990080] PDF validation passed
2025-09-05 11:16:18,084 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6210990080] Extracting text from PDF...
2025-09-05 11:16:18,085 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6177337344] PDF validation passed
2025-09-05 11:16:18,085 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6177337344] Extracting text from PDF...
2025-09-05 11:16:18,087 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6227816448] Text extracted successfully - 922 characters
2025-09-05 11:16:18,087 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6227816448] Mock mode - attempting to use cached response
2025-09-05 11:16:18,089 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6244642816] Text extracted successfully - 1088 characters
2025-09-05 11:16:18,089 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6244642816] Mock mode - attempting to use cached response
2025-09-05 11:16:18,090 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6177337344] Text extracted successfully - 902 characters
2025-09-05 11:16:18,091 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:16:18,092 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6177337344] Mock mode - attempting to use cached response
2025-09-05 11:16:18,092 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6194163712] Text extracted successfully - 889 characters
2025-09-05 11:16:18,092 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 90%
2025-09-05 11:16:18,094 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6210990080] Text extracted successfully - 859 characters
2025-09-05 11:16:18,094 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:16:18,094 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6194163712] Mock mode - attempting to use cached response
2025-09-05 11:16:18,095 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-05 11:16:18,095 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:16:18,095 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6210990080] Mock mode - attempting to use cached response
2025-09-05 11:16:18,095 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 21%
2025-09-05 11:16:18,095 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6227816448] Using cached response: Mock-Emily Miller
2025-09-05 11:16:18,095 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 82%
2025-09-05 11:16:18,095 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:16:18,095 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-05 11:16:18,095 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6227816448] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6227816448_resume_5.pdf
2025-09-05 11:16:18,095 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-05 11:16:18,096 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:16:18,096 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 35%
2025-09-05 11:16:18,096 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6244642816] Using cached response: Mock-Maria Gonzalez
2025-09-05 11:16:18,096 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6177337344] Using cached response: Mock-Emily Taylor
2025-09-05 11:16:18,096 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6227816448] File processing completed successfully for: resume_5.pdf
2025-09-05 11:16:18,096 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 80%
2025-09-05 11:16:18,096 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-05 11:16:18,096 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6244642816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6244642816_resume_2.pdf
2025-09-05 11:16:18,096 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6177337344] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6177337344_resume_3.pdf
2025-09-05 11:16:18,096 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6227816448] Mock result - not saving to cache
2025-09-05 11:16:18,096 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-05 11:16:18,096 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6194163712] Using cached response: Mock-David Smith
2025-09-05 11:16:18,096 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6244642816] File processing completed successfully for: resume_2.pdf
2025-09-05 11:16:18,096 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6227816448] Returning result: Mock-Emily Miller - 90%
2025-09-05 11:16:18,096 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6177337344] File processing completed successfully for: resume_3.pdf
2025-09-05 11:16:18,097 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6210990080] Using cached response: Mock-John Lee
2025-09-05 11:16:18,097 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6194163712] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6194163712_resume_4.pdf
2025-09-05 11:16:18,097 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6244642816] Mock result - not saving to cache
2025-09-05 11:16:18,097 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6177337344] Mock result - not saving to cache
2025-09-05 11:16:18,097 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_5.pdf - success
2025-09-05 11:16:18,097 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6210990080] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111618_6210990080_resume_1.pdf
2025-09-05 11:16:18,097 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6244642816] Returning result: Mock-Maria Gonzalez - 21%
2025-09-05 11:16:18,097 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6177337344] Returning result: Mock-Emily Taylor - 82%
2025-09-05 11:16:18,097 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6194163712] File processing completed successfully for: resume_4.pdf
2025-09-05 11:16:18,097 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6210990080] File processing completed successfully for: resume_1.pdf
2025-09-05 11:16:18,097 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6194163712] Mock result - not saving to cache
2025-09-05 11:16:18,097 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6210990080] Mock result - not saving to cache
2025-09-05 11:16:18,097 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6194163712] Returning result: Mock-David Smith - 35%
2025-09-05 11:16:18,097 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6210990080] Returning result: Mock-John Lee - 80%
2025-09-05 11:16:18,097 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_4.pdf - success
2025-09-05 11:16:18,097 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_3.pdf - success
2025-09-05 11:16:18,097 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_2.pdf - success
2025-09-05 11:16:18,097 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-05 11:16:18,098 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-05 11:16:18,098 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-05 11:16:18,098 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:16:18,098 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Emily Taylor with 90% match
2025-09-05 11:16:18,098 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:16:18,098 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 18449 characters
2025-09-05 11:16:18,098 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 20047 bytes
2025-09-05 11:16:18,098 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:16:18] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:19:07,889 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:19:07,890 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:19:07,891 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:19:07,891 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:07] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:19:07,912 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:19:07,912 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757042151.0823157-22632-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:15:51 GMT'}
2025-09-05 11:19:07,913 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:19:07,914 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757042010.6760247-49142-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:13:30 GMT'}
2025-09-05 11:19:07,915 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 22583 bytes
2025-09-05 11:19:07,916 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 49141 bytes
2025-09-05 11:19:07,916 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:07] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-05 11:19:07,916 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:07] "GET /static/script.js HTTP/1.1" 200 -
2025-09-05 11:19:07,949 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:19:07,949 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:07,949 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:19:07,950 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:19:07,950 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:07] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:19:13,020 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:19:13,020 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '10355', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarybHgahk1ZwBAJeddq', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:13,020 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarybHgahk1ZwBAJeddq
2025-09-05 11:19:13,020 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 10355
2025-09-05 11:19:13,022 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf']
2025-09-05 11:19:13,022 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[18 chars]'}
2025-09-05 11:19:13,022 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:19:13,022 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 4, Job desc length: 18, Mock: True
2025-09-05 11:19:13,022 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf']
2025-09-05 11:19:13,022 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 4 workers for 4 files
2025-09-05 11:19:13,023 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:19:13,023 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6177337344] Starting processing file: resume_8.pdf
2025-09-05 11:19:13,023 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6194163712] Starting processing file: resume_7.pdf
2025-09-05 11:19:13,023 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6210990080] Starting processing file: resume_6.pdf
2025-09-05 11:19:13,023 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6177337344] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:19:13,023 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6227816448] Starting processing file: resume_5.pdf
2025-09-05 11:19:13,024 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 4 tasks submitted to thread pool
2025-09-05 11:19:13,024 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6194163712] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:19:13,024 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6210990080] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:19:13,024 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6177337344] Validating file type...
2025-09-05 11:19:13,024 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6227816448] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:19:13,024 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6194163712] Validating file type...
2025-09-05 11:19:13,024 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6210990080] Validating file type...
2025-09-05 11:19:13,024 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6177337344] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111913_6177337344_resume_8.pdf
2025-09-05 11:19:13,024 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6227816448] Validating file type...
2025-09-05 11:19:13,024 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6194163712] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111913_6194163712_resume_7.pdf
2025-09-05 11:19:13,024 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6210990080] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111913_6210990080_resume_6.pdf
2025-09-05 11:19:13,024 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6227816448] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111913_6227816448_resume_5.pdf
2025-09-05 11:19:13,025 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6194163712] File saved successfully
2025-09-05 11:19:13,025 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6194163712] Validating PDF structure...
2025-09-05 11:19:13,025 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6177337344] File saved successfully
2025-09-05 11:19:13,025 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6227816448] File saved successfully
2025-09-05 11:19:13,025 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6177337344] Validating PDF structure...
2025-09-05 11:19:13,025 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6227816448] Validating PDF structure...
2025-09-05 11:19:13,025 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6210990080] File saved successfully
2025-09-05 11:19:13,027 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6194163712] PDF validation passed
2025-09-05 11:19:13,027 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6210990080] Validating PDF structure...
2025-09-05 11:19:13,027 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6194163712] Extracting text from PDF...
2025-09-05 11:19:13,027 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6177337344] PDF validation passed
2025-09-05 11:19:13,027 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6177337344] Extracting text from PDF...
2025-09-05 11:19:13,028 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6227816448] PDF validation passed
2025-09-05 11:19:13,028 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6227816448] Extracting text from PDF...
2025-09-05 11:19:13,028 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6210990080] PDF validation passed
2025-09-05 11:19:13,029 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6210990080] Extracting text from PDF...
2025-09-05 11:19:13,032 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6194163712] Text extracted successfully - 1070 characters
2025-09-05 11:19:13,035 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6194163712] Mock mode - attempting to use cached response
2025-09-05 11:19:13,035 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6177337344] Text extracted successfully - 1125 characters
2025-09-05 11:19:13,038 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6227816448] Text extracted successfully - 922 characters
2025-09-05 11:19:13,038 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6177337344] Mock mode - attempting to use cached response
2025-09-05 11:19:13,038 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6227816448] Mock mode - attempting to use cached response
2025-09-05 11:19:13,041 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6210990080] Text extracted successfully - 873 characters
2025-09-05 11:19:13,042 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:19:13,042 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:19:13,042 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6210990080] Mock mode - attempting to use cached response
2025-09-05 11:19:13,042 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 90%
2025-09-05 11:19:13,042 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 79%
2025-09-05 11:19:13,042 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:19:13,042 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-05 11:19:13,042 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:19:13,042 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-05 11:19:13,042 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 32%
2025-09-05 11:19:13,042 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6194163712] Using cached response: Mock-Emily Taylor
2025-09-05 11:19:13,043 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 33%
2025-09-05 11:19:13,043 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6177337344] Using cached response: Mock-David Lee
2025-09-05 11:19:13,043 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-05 11:19:13,043 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6194163712] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111913_6194163712_resume_7.pdf
2025-09-05 11:19:13,043 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-05 11:19:13,043 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6177337344] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111913_6177337344_resume_8.pdf
2025-09-05 11:19:13,043 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6227816448] Using cached response: Mock-Daniel Wilson
2025-09-05 11:19:13,043 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6210990080] Using cached response: Mock-David Smith
2025-09-05 11:19:13,043 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6194163712] File processing completed successfully for: resume_7.pdf
2025-09-05 11:19:13,043 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6177337344] File processing completed successfully for: resume_8.pdf
2025-09-05 11:19:13,043 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6227816448] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111913_6227816448_resume_5.pdf
2025-09-05 11:19:13,043 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6210990080] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111913_6210990080_resume_6.pdf
2025-09-05 11:19:13,043 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6194163712] Mock result - not saving to cache
2025-09-05 11:19:13,043 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6177337344] Mock result - not saving to cache
2025-09-05 11:19:13,043 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6194163712] Returning result: Mock-Emily Taylor - 90%
2025-09-05 11:19:13,043 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6227816448] File processing completed successfully for: resume_5.pdf
2025-09-05 11:19:13,043 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6177337344] Returning result: Mock-David Lee - 79%
2025-09-05 11:19:13,043 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6210990080] File processing completed successfully for: resume_6.pdf
2025-09-05 11:19:13,043 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6227816448] Mock result - not saving to cache
2025-09-05 11:19:13,044 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/4 completed: resume_8.pdf - success
2025-09-05 11:19:13,044 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6210990080] Mock result - not saving to cache
2025-09-05 11:19:13,044 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6227816448] Returning result: Mock-Daniel Wilson - 32%
2025-09-05 11:19:13,044 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/4 completed: resume_7.pdf - success
2025-09-05 11:19:13,044 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6210990080] Returning result: Mock-David Smith - 33%
2025-09-05 11:19:13,044 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/4 completed: resume_6.pdf - success
2025-09-05 11:19:13,044 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/4 completed: resume_5.pdf - success
2025-09-05 11:19:13,044 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 4 results collected
2025-09-05 11:19:13,044 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 4, Failed: 0
2025-09-05 11:19:13,044 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:19:13,044 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Emily Taylor with 90% match
2025-09-05 11:19:13,044 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:19:13,044 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 7498 characters
2025-09-05 11:19:13,044 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 8145 bytes
2025-09-05 11:19:13,044 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:13] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:19:19,088 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:19:19,089 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:19:19,090 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:19:19,090 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:19] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:19:19,108 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:19:19,109 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:19:19,109 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042289.7643762-22583-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:18:09 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:19,109 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042331.3763847-49141-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:18:51 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:19,110 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 22583 bytes
2025-09-05 11:19:19,110 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 49140 bytes
2025-09-05 11:19:19,110 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:19] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:19:19,110 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:19] "GET /static/script.js HTTP/1.1" 200 -
2025-09-05 11:19:19,130 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:19:19,131 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:19,131 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:19:19,131 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:19:19,132 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:19] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:19:23,884 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:19:23,884 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '23065', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarysqSJBtedOXpDkbVt', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:23,884 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarysqSJBtedOXpDkbVt
2025-09-05 11:19:23,884 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 23065
2025-09-05 11:19:23,886 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf']
2025-09-05 11:19:23,886 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[15 chars]'}
2025-09-05 11:19:23,886 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:19:23,886 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 9, Job desc length: 15, Mock: True
2025-09-05 11:19:23,886 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf']
2025-09-05 11:19:23,886 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 9 files
2025-09-05 11:19:23,886 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:19:23,886 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6177337344] Starting processing file: resume_10.pdf
2025-09-05 11:19:23,886 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6194163712] Starting processing file: resume_9.pdf
2025-09-05 11:19:23,886 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6177337344] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:19:23,887 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6210990080] Starting processing file: resume_8.pdf
2025-09-05 11:19:23,887 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6194163712] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:19:23,887 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6227816448] Starting processing file: resume_7.pdf
2025-09-05 11:19:23,887 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6177337344] Validating file type...
2025-09-05 11:19:23,887 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6244642816] Starting processing file: resume_6.pdf
2025-09-05 11:19:23,887 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6210990080] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:19:23,887 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 9 tasks submitted to thread pool
2025-09-05 11:19:23,887 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6194163712] Validating file type...
2025-09-05 11:19:23,887 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6227816448] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:19:23,887 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6177337344] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6177337344_resume_10.pdf
2025-09-05 11:19:23,887 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6227816448] Validating file type...
2025-09-05 11:19:23,887 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6210990080] Validating file type...
2025-09-05 11:19:23,887 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6194163712] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6194163712_resume_9.pdf
2025-09-05 11:19:23,887 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6244642816] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:19:23,888 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6227816448] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6227816448_resume_7.pdf
2025-09-05 11:19:23,888 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6210990080] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6210990080_resume_8.pdf
2025-09-05 11:19:23,888 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6244642816] Validating file type...
2025-09-05 11:19:23,888 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6244642816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6244642816_resume_6.pdf
2025-09-05 11:19:23,888 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6177337344] File saved successfully
2025-09-05 11:19:23,889 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6177337344] Validating PDF structure...
2025-09-05 11:19:23,889 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6194163712] File saved successfully
2025-09-05 11:19:23,889 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6194163712] Validating PDF structure...
2025-09-05 11:19:23,889 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6227816448] File saved successfully
2025-09-05 11:19:23,889 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6227816448] Validating PDF structure...
2025-09-05 11:19:23,889 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6210990080] File saved successfully
2025-09-05 11:19:23,890 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6244642816] File saved successfully
2025-09-05 11:19:23,890 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6210990080] Validating PDF structure...
2025-09-05 11:19:23,891 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6177337344] PDF validation passed
2025-09-05 11:19:23,891 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6244642816] Validating PDF structure...
2025-09-05 11:19:23,891 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6177337344] Extracting text from PDF...
2025-09-05 11:19:23,891 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6194163712] PDF validation passed
2025-09-05 11:19:23,891 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6194163712] Extracting text from PDF...
2025-09-05 11:19:23,892 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6227816448] PDF validation passed
2025-09-05 11:19:23,896 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6210990080] PDF validation passed
2025-09-05 11:19:23,899 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6227816448] Extracting text from PDF...
2025-09-05 11:19:23,899 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6177337344] Text extracted successfully - 1093 characters
2025-09-05 11:19:23,899 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6210990080] Extracting text from PDF...
2025-09-05 11:19:23,901 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6244642816] PDF validation passed
2025-09-05 11:19:23,901 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6194163712] Text extracted successfully - 870 characters
2025-09-05 11:19:23,901 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6177337344] Mock mode - attempting to use cached response
2025-09-05 11:19:23,901 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6244642816] Extracting text from PDF...
2025-09-05 11:19:23,917 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6210990080] Text extracted successfully - 1125 characters
2025-09-05 11:19:23,922 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6210990080] Mock mode - attempting to use cached response
2025-09-05 11:19:23,902 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6194163712] Mock mode - attempting to use cached response
2025-09-05 11:19:23,904 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6227816448] Text extracted successfully - 1070 characters
2025-09-05 11:19:23,926 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6227816448] Mock mode - attempting to use cached response
2025-09-05 11:19:23,927 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:19:23,928 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:19:23,931 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:19:23,931 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 79%
2025-09-05 11:19:23,925 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:19:23,931 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Brown - 73%
2025-09-05 11:19:23,931 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 30%
2025-09-05 11:19:23,932 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-05 11:19:23,936 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6177337344] Using cached response: Mock-John Lee
2025-09-05 11:19:23,936 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6177337344] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6177337344_resume_10.pdf
2025-09-05 11:19:23,936 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6177337344] File processing completed successfully for: resume_10.pdf
2025-09-05 11:19:23,936 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6177337344] Mock result - not saving to cache
2025-09-05 11:19:23,935 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6244642816] Text extracted successfully - 873 characters
2025-09-05 11:19:23,937 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6177337344] Returning result: Mock-John Lee - 79%
2025-09-05 11:19:23,935 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 563bcf30
2025-09-05 11:19:23,938 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6194163712] Using cached response: Mock-Alice Brown
2025-09-05 11:19:23,938 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6194163712] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6194163712_resume_9.pdf
2025-09-05 11:19:23,936 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-05 11:19:23,937 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6244642816] Mock mode - attempting to use cached response
2025-09-05 11:19:23,937 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/9 completed: resume_10.pdf - success
2025-09-05 11:19:23,939 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6194163712] File processing completed successfully for: resume_9.pdf
2025-09-05 11:19:23,937 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6177337344] Starting processing file: resume_5.pdf
2025-09-05 11:19:23,939 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6227816448] Using cached response: Mock-James Anderson
2025-09-05 11:19:23,935 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 86%
2025-09-05 11:19:23,940 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-05 11:19:23,939 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6194163712] Mock result - not saving to cache
2025-09-05 11:19:23,939 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6177337344] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:19:23,940 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6227816448] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6227816448_resume_7.pdf
2025-09-05 11:19:23,940 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6210990080] Using cached response: Mock-Olivia Miller
2025-09-05 11:19:23,939 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:19:23,940 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6194163712] Returning result: Mock-Alice Brown - 73%
2025-09-05 11:19:23,940 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6177337344] Validating file type...
2025-09-05 11:19:23,940 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6210990080] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6210990080_resume_8.pdf
2025-09-05 11:19:23,940 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 71%
2025-09-05 11:19:23,940 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6227816448] File processing completed successfully for: resume_7.pdf
2025-09-05 11:19:23,940 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6194163712] Starting processing file: resume_4.pdf
2025-09-05 11:19:23,941 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6194163712] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:19:23,941 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6194163712] Validating file type...
2025-09-05 11:19:23,940 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/9 completed: resume_9.pdf - success
2025-09-05 11:19:23,941 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6227816448] Mock result - not saving to cache
2025-09-05 11:19:23,941 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6194163712] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6194163712_resume_4.pdf
2025-09-05 11:19:23,940 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6177337344] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6177337344_resume_5.pdf
2025-09-05 11:19:23,940 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-05 11:19:23,941 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6210990080] File processing completed successfully for: resume_8.pdf
2025-09-05 11:19:23,942 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6210990080] Mock result - not saving to cache
2025-09-05 11:19:23,942 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6244642816] Using cached response: Mock-John Lee
2025-09-05 11:19:23,941 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6227816448] Returning result: Mock-James Anderson - 30%
2025-09-05 11:19:23,942 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6210990080] Returning result: Mock-Olivia Miller - 86%
2025-09-05 11:19:23,942 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6244642816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6244642816_resume_6.pdf
2025-09-05 11:19:23,942 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6227816448] Starting processing file: resume_3.pdf
2025-09-05 11:19:23,942 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6210990080] Starting processing file: resume_2.pdf
2025-09-05 11:19:23,942 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/9 completed: resume_8.pdf - success
2025-09-05 11:19:23,942 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6227816448] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:19:23,942 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6194163712] File saved successfully
2025-09-05 11:19:23,942 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6210990080] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:19:23,942 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6244642816] File processing completed successfully for: resume_6.pdf
2025-09-05 11:19:23,943 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6177337344] File saved successfully
2025-09-05 11:19:23,943 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/9 completed: resume_7.pdf - success
2025-09-05 11:19:23,943 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6227816448] Validating file type...
2025-09-05 11:19:23,943 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6194163712] Validating PDF structure...
2025-09-05 11:19:23,943 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6210990080] Validating file type...
2025-09-05 11:19:23,943 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6244642816] Mock result - not saving to cache
2025-09-05 11:19:23,943 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6177337344] Validating PDF structure...
2025-09-05 11:19:23,943 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6227816448] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6227816448_resume_3.pdf
2025-09-05 11:19:23,943 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6210990080] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6210990080_resume_2.pdf
2025-09-05 11:19:23,944 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6194163712] PDF validation passed
2025-09-05 11:19:23,944 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6244642816] Returning result: Mock-John Lee - 71%
2025-09-05 11:19:23,944 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6194163712] Extracting text from PDF...
2025-09-05 11:19:23,944 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6177337344] PDF validation passed
2025-09-05 11:19:23,944 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/9 completed: resume_6.pdf - success
2025-09-05 11:19:23,945 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6227816448] File saved successfully
2025-09-05 11:19:23,945 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6210990080] File saved successfully
2025-09-05 11:19:23,945 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6177337344] Extracting text from PDF...
2025-09-05 11:19:23,947 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6194163712] Text extracted successfully - 889 characters
2025-09-05 11:19:23,947 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6227816448] Validating PDF structure...
2025-09-05 11:19:23,947 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6210990080] Validating PDF structure...
2025-09-05 11:19:23,947 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6194163712] Mock mode - attempting to use cached response
2025-09-05 11:19:23,948 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6227816448] PDF validation passed
2025-09-05 11:19:23,949 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6177337344] Text extracted successfully - 922 characters
2025-09-05 11:19:23,949 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6227816448] Extracting text from PDF...
2025-09-05 11:19:23,950 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:19:23,950 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6210990080] PDF validation passed
2025-09-05 11:19:23,950 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6177337344] Mock mode - attempting to use cached response
2025-09-05 11:19:23,950 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6210990080] Extracting text from PDF...
2025-09-05 11:19:23,950 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 20%
2025-09-05 11:19:23,952 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6227816448] Text extracted successfully - 902 characters
2025-09-05 11:19:23,953 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:19:23,953 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-05 11:19:23,955 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6227816448] Mock mode - attempting to use cached response
2025-09-05 11:19:23,955 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6210990080] Text extracted successfully - 1088 characters
2025-09-05 11:19:23,955 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Michael Brown - 35%
2025-09-05 11:19:23,955 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6194163712] Using cached response: Mock-Emily Davis
2025-09-05 11:19:23,955 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6210990080] Mock mode - attempting to use cached response
2025-09-05 11:19:23,955 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:19:23,956 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 399c9734
2025-09-05 11:19:23,956 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6194163712] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6194163712_resume_4.pdf
2025-09-05 11:19:23,956 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Brown - 78%
2025-09-05 11:19:23,956 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6177337344] Using cached response: Mock-Michael Brown
2025-09-05 11:19:23,956 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:19:23,956 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6194163712] File processing completed successfully for: resume_4.pdf
2025-09-05 11:19:23,956 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 563bcf30
2025-09-05 11:19:23,956 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6177337344] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6177337344_resume_5.pdf
2025-09-05 11:19:23,956 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 71%
2025-09-05 11:19:23,957 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6194163712] Mock result - not saving to cache
2025-09-05 11:19:23,957 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6227816448] Using cached response: Mock-Alice Brown
2025-09-05 11:19:23,957 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6177337344] File processing completed successfully for: resume_5.pdf
2025-09-05 11:19:23,957 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-05 11:19:23,957 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6194163712] Returning result: Mock-Emily Davis - 20%
2025-09-05 11:19:23,957 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6227816448] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6227816448_resume_3.pdf
2025-09-05 11:19:23,957 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6177337344] Mock result - not saving to cache
2025-09-05 11:19:23,957 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6210990080] Using cached response: Mock-David Lee
2025-09-05 11:19:23,957 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6177337344] Returning result: Mock-Michael Brown - 35%
2025-09-05 11:19:23,957 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6210990080] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_111923_6210990080_resume_2.pdf
2025-09-05 11:19:23,957 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6227816448] File processing completed successfully for: resume_3.pdf
2025-09-05 11:19:23,958 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/9 completed: resume_5.pdf - success
2025-09-05 11:19:23,958 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6227816448] Mock result - not saving to cache
2025-09-05 11:19:23,958 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/9 completed: resume_4.pdf - success
2025-09-05 11:19:23,958 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6210990080] File processing completed successfully for: resume_2.pdf
2025-09-05 11:19:23,958 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6227816448] Returning result: Mock-Alice Brown - 78%
2025-09-05 11:19:23,958 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6210990080] Mock result - not saving to cache
2025-09-05 11:19:23,958 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/9 completed: resume_3.pdf - success
2025-09-05 11:19:23,958 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6210990080] Returning result: Mock-David Lee - 71%
2025-09-05 11:19:23,958 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/9 completed: resume_2.pdf - success
2025-09-05 11:19:23,959 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 9 results collected
2025-09-05 11:19:23,959 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 9, Failed: 0
2025-09-05 11:19:23,959 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:19:23,959 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Miller with 86% match
2025-09-05 11:19:23,959 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:19:23,959 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 18098 characters
2025-09-05 11:19:23,959 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 19603 bytes
2025-09-05 11:19:23,959 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:23] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:19:39,833 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:19:39,833 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:19:39,834 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:19:39,834 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:39] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:19:39,844 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:19:39,844 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042289.7643762-22583-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:18:09 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:39,844 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:19:39,844 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042354.888065-49140-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:19:14 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:39,844 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 22583 bytes
2025-09-05 11:19:39,844 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 49140 bytes
2025-09-05 11:19:39,845 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:39] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:19:39,845 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:39] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:19:39,851 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:19:39,851 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:39,851 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:19:39,851 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:19:39,851 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:39] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:19:40,292 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:19:40,292 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:19:40,293 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:19:40,293 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,310 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:19:40,312 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:19:40,312 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042289.7643762-22583-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:18:09 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,312 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042354.888065-49140-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:19:14 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,312 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 22583 bytes
2025-09-05 11:19:40,313 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,314 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 49140 bytes
2025-09-05 11:19:40,314 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,322 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:19:40,323 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,323 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:19:40,323 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:19:40,323 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:19:40,451 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:19:40,451 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:19:40,451 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:19:40,451 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,462 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:19:40,463 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:19:40,463 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042289.7643762-22583-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:18:09 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,463 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042354.888065-49140-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:19:14 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,464 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 49140 bytes
2025-09-05 11:19:40,465 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 22583 bytes
2025-09-05 11:19:40,465 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,465 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,475 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:19:40,475 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,475 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:19:40,475 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:19:40,476 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:19:40,615 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:19:40,615 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:19:40,615 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:19:40,615 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,627 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:19:40,627 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:19:40,627 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042289.7643762-22583-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:18:09 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,627 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042354.888065-49140-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:19:14 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,628 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 22583 bytes
2025-09-05 11:19:40,628 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 49140 bytes
2025-09-05 11:19:40,628 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,628 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,637 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:19:40,637 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,637 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:19:40,637 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:19:40,637 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:19:40,759 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:19:40,760 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:19:40,760 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:19:40,760 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,770 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:19:40,771 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:19:40,771 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042289.7643762-22583-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:18:09 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,771 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042354.888065-49140-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:19:14 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,772 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 49140 bytes
2025-09-05 11:19:40,772 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 22583 bytes
2025-09-05 11:19:40,772 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,773 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,781 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:19:40,781 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,782 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:19:40,782 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:19:40,782 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:19:40,891 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:19:40,892 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:19:40,892 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:19:40,892 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,902 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:19:40,903 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042354.888065-49140-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:19:14 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,903 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:19:40,903 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042289.7643762-22583-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:18:09 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,904 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 49140 bytes
2025-09-05 11:19:40,904 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,905 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 22583 bytes
2025-09-05 11:19:40,905 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:19:40,910 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:19:40,910 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:19:40,910 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:19:40,910 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:19:40,910 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:19:40] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:20:46,064 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:20:46,065 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:20:46,066 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:20:46,066 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:20:46] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:20:46,090 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:20:46,091 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757042289.7643762-22583-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:18:09 GMT'}
2025-09-05 11:20:46,095 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:20:46,096 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757042354.888065-49140-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:19:14 GMT'}
2025-09-05 11:20:46,096 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 22583 bytes
2025-09-05 11:20:46,097 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:20:46] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:20:46,097 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 49140 bytes
2025-09-05 11:20:46,097 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:20:46] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:20:46,102 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:20:46,103 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:20:46,103 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:20:46,104 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:20:46,104 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:20:46] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:20:46,529 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:20:46,529 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:20:46,530 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:20:46,530 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:20:46] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:20:46,541 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:20:46,541 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042354.888065-49140-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:19:14 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:20:46,541 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:20:46,541 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042289.7643762-22583-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:18:09 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:20:46,541 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 49140 bytes
2025-09-05 11:20:46,541 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:20:46] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:20:46,542 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 22583 bytes
2025-09-05 11:20:46,543 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:20:46] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:20:46,550 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:20:46,550 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:20:46,550 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:20:46,550 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:20:46,551 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:20:46] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:21:58,897 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:21:58,898 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:21:58,898 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:21:58,898 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:21:58] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:21:58,922 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:21:58,922 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757042289.7643762-22583-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:18:09 GMT'}
2025-09-05 11:21:58,923 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:21:58,924 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757042354.888065-49140-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:19:14 GMT'}
2025-09-05 11:21:58,926 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 22583 bytes
2025-09-05 11:21:58,926 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 48843 bytes
2025-09-05 11:21:58,927 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:21:58] "GET /static/script.js HTTP/1.1" 200 -
2025-09-05 11:21:58,927 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:21:58] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-05 11:21:58,932 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:21:58,932 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:21:58,933 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:21:58,934 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:21:58,934 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:21:58] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:22:06,995 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:22:06,995 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '7805', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarywlIxyJxgszei0a42', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:22:06,995 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarywlIxyJxgszei0a42
2025-09-05 11:22:06,995 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 7805
2025-09-05 11:22:06,997 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf']
2025-09-05 11:22:06,997 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-05 11:22:06,997 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:22:06,997 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 3, Job desc length: 17, Mock: True
2025-09-05 11:22:06,997 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf']
2025-09-05 11:22:06,997 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 3 workers for 3 files
2025-09-05 11:22:06,997 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:22:06,997 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6177337344] Starting processing file: resume_9.pdf
2025-09-05 11:22:06,997 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6194163712] Starting processing file: resume_8.pdf
2025-09-05 11:22:06,997 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6177337344] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:22:06,997 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6210990080] Starting processing file: resume_7.pdf
2025-09-05 11:22:06,997 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 3 tasks submitted to thread pool
2025-09-05 11:22:06,997 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6194163712] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:22:06,997 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6177337344] Validating file type...
2025-09-05 11:22:06,997 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6210990080] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:22:06,997 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6194163712] Validating file type...
2025-09-05 11:22:06,997 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6177337344] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_112206_6177337344_resume_9.pdf
2025-09-05 11:22:06,997 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6210990080] Validating file type...
2025-09-05 11:22:06,997 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6194163712] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_112206_6194163712_resume_8.pdf
2025-09-05 11:22:06,998 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6210990080] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_112206_6210990080_resume_7.pdf
2025-09-05 11:22:06,998 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6210990080] File saved successfully
2025-09-05 11:22:06,998 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6194163712] File saved successfully
2025-09-05 11:22:06,998 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6177337344] File saved successfully
2025-09-05 11:22:06,998 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6210990080] Validating PDF structure...
2025-09-05 11:22:06,998 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6194163712] Validating PDF structure...
2025-09-05 11:22:06,998 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6177337344] Validating PDF structure...
2025-09-05 11:22:06,999 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6194163712] PDF validation passed
2025-09-05 11:22:06,999 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6177337344] PDF validation passed
2025-09-05 11:22:06,999 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6210990080] PDF validation passed
2025-09-05 11:22:06,999 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6194163712] Extracting text from PDF...
2025-09-05 11:22:07,000 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6177337344] Extracting text from PDF...
2025-09-05 11:22:07,000 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6210990080] Extracting text from PDF...
2025-09-05 11:22:07,005 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6194163712] Text extracted successfully - 1125 characters
2025-09-05 11:22:07,006 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6177337344] Text extracted successfully - 870 characters
2025-09-05 11:22:07,006 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6210990080] Text extracted successfully - 1070 characters
2025-09-05 11:22:07,006 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6194163712] Mock mode - attempting to use cached response
2025-09-05 11:22:07,006 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6177337344] Mock mode - attempting to use cached response
2025-09-05 11:22:07,006 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6210990080] Mock mode - attempting to use cached response
2025-09-05 11:22:07,006 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:22:07,007 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:22:07,007 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:22:07,007 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 89%
2025-09-05 11:22:07,007 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 29%
2025-09-05 11:22:07,007 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 34%
2025-09-05 11:22:07,007 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-05 11:22:07,007 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-05 11:22:07,007 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-05 11:22:07,007 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6210990080] Using cached response: Mock-Olivia Johnson
2025-09-05 11:22:07,007 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6177337344] Using cached response: Mock-Emily Davis
2025-09-05 11:22:07,007 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6194163712] Using cached response: Mock-Olivia Taylor
2025-09-05 11:22:07,007 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6210990080] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_112206_6210990080_resume_7.pdf
2025-09-05 11:22:07,007 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6177337344] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_112206_6177337344_resume_9.pdf
2025-09-05 11:22:07,007 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6194163712] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_112206_6194163712_resume_8.pdf
2025-09-05 11:22:07,007 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6210990080] File processing completed successfully for: resume_7.pdf
2025-09-05 11:22:07,007 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6177337344] File processing completed successfully for: resume_9.pdf
2025-09-05 11:22:07,007 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6210990080] Mock result - not saving to cache
2025-09-05 11:22:07,007 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6194163712] File processing completed successfully for: resume_8.pdf
2025-09-05 11:22:07,007 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6177337344] Mock result - not saving to cache
2025-09-05 11:22:07,008 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6210990080] Returning result: Mock-Olivia Johnson - 89%
2025-09-05 11:22:07,008 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6194163712] Mock result - not saving to cache
2025-09-05 11:22:07,008 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6177337344] Returning result: Mock-Emily Davis - 29%
2025-09-05 11:22:07,008 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6194163712] Returning result: Mock-Olivia Taylor - 34%
2025-09-05 11:22:07,008 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/3 completed: resume_9.pdf - success
2025-09-05 11:22:07,008 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/3 completed: resume_8.pdf - success
2025-09-05 11:22:07,008 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/3 completed: resume_7.pdf - success
2025-09-05 11:22:07,008 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 3 results collected
2025-09-05 11:22:07,008 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 3, Failed: 0
2025-09-05 11:22:07,008 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:22:07,008 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Johnson with 89% match
2025-09-05 11:22:07,008 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:22:07,008 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 5521 characters
2025-09-05 11:22:07,008 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 6016 bytes
2025-09-05 11:22:07,008 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:22:07] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:23:53,006 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:23:53,007 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:23:53,008 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:23:53,008 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:23:53] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:23:53,041 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:23:53,043 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:23:53,043 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757042489.506671-22583-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:21:29 GMT'}
2025-09-05 11:23:53,044 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757042514.392126-48843-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:21:54 GMT'}
2025-09-05 11:23:53,044 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 48843 bytes
2025-09-05 11:23:53,045 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 22583 bytes
2025-09-05 11:23:53,045 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:23:53] "GET /static/script.js HTTP/1.1" 200 -
2025-09-05 11:23:53,045 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:23:53] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-05 11:23:53,052 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:23:53,052 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:23:53,052 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:23:53,053 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:23:53,053 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:23:53] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:24:03,604 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:24:03,605 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '7803', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarykZdvTYFbz7GLBi0k', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:24:03,605 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarykZdvTYFbz7GLBi0k
2025-09-05 11:24:03,605 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 7803
2025-09-05 11:24:03,606 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf']
2025-09-05 11:24:03,606 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[15 chars]'}
2025-09-05 11:24:03,606 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:24:03,606 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 3, Job desc length: 15, Mock: True
2025-09-05 11:24:03,606 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf']
2025-09-05 11:24:03,606 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 3 workers for 3 files
2025-09-05 11:24:03,606 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:24:03,606 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6177337344] Starting processing file: resume_9.pdf
2025-09-05 11:24:03,606 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6194163712] Starting processing file: resume_8.pdf
2025-09-05 11:24:03,607 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6210990080] Starting processing file: resume_7.pdf
2025-09-05 11:24:03,607 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6177337344] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:24:03,607 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 3 tasks submitted to thread pool
2025-09-05 11:24:03,607 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6194163712] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:24:03,607 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6210990080] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:24:03,607 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6177337344] Validating file type...
2025-09-05 11:24:03,607 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6194163712] Validating file type...
2025-09-05 11:24:03,607 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6210990080] Validating file type...
2025-09-05 11:24:03,607 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6177337344] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_112403_6177337344_resume_9.pdf
2025-09-05 11:24:03,607 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6194163712] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_112403_6194163712_resume_8.pdf
2025-09-05 11:24:03,607 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6210990080] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_112403_6210990080_resume_7.pdf
2025-09-05 11:24:03,608 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6210990080] File saved successfully
2025-09-05 11:24:03,608 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6177337344] File saved successfully
2025-09-05 11:24:03,608 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6210990080] Validating PDF structure...
2025-09-05 11:24:03,608 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6194163712] File saved successfully
2025-09-05 11:24:03,608 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6177337344] Validating PDF structure...
2025-09-05 11:24:03,608 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6194163712] Validating PDF structure...
2025-09-05 11:24:03,609 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6210990080] PDF validation passed
2025-09-05 11:24:03,610 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6210990080] Extracting text from PDF...
2025-09-05 11:24:03,610 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6177337344] PDF validation passed
2025-09-05 11:24:03,610 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6177337344] Extracting text from PDF...
2025-09-05 11:24:03,610 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6194163712] PDF validation passed
2025-09-05 11:24:03,610 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6194163712] Extracting text from PDF...
2025-09-05 11:24:03,613 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6210990080] Text extracted successfully - 1070 characters
2025-09-05 11:24:03,614 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6210990080] Mock mode - attempting to use cached response
2025-09-05 11:24:03,616 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6177337344] Text extracted successfully - 870 characters
2025-09-05 11:24:03,617 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6177337344] Mock mode - attempting to use cached response
2025-09-05 11:24:03,618 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:24:03,620 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6194163712] Text extracted successfully - 1125 characters
2025-09-05 11:24:03,620 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 71%
2025-09-05 11:24:03,620 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6194163712] Mock mode - attempting to use cached response
2025-09-05 11:24:03,620 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:24:03,620 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-05 11:24:03,620 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6177337344] Using cached response: Mock-Alice Smith
2025-09-05 11:24:03,620 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6177337344] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_112403_6177337344_resume_9.pdf
2025-09-05 11:24:03,620 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 76%
2025-09-05 11:24:03,621 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:24:03,621 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-05 11:24:03,621 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6177337344] File processing completed successfully for: resume_9.pdf
2025-09-05 11:24:03,621 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 29%
2025-09-05 11:24:03,621 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6210990080] Using cached response: Mock-David Lee
2025-09-05 11:24:03,621 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6177337344] Mock result - not saving to cache
2025-09-05 11:24:03,621 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-05 11:24:03,621 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6210990080] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_112403_6210990080_resume_7.pdf
2025-09-05 11:24:03,621 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6177337344] Returning result: Mock-Alice Smith - 71%
2025-09-05 11:24:03,621 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6194163712] Using cached response: Mock-Daniel Wilson
2025-09-05 11:24:03,621 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6194163712] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_112403_6194163712_resume_8.pdf
2025-09-05 11:24:03,621 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/3 completed: resume_9.pdf - success
2025-09-05 11:24:03,621 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6210990080] File processing completed successfully for: resume_7.pdf
2025-09-05 11:24:03,621 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6210990080] Mock result - not saving to cache
2025-09-05 11:24:03,621 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6194163712] File processing completed successfully for: resume_8.pdf
2025-09-05 11:24:03,622 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6210990080] Returning result: Mock-David Lee - 76%
2025-09-05 11:24:03,622 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6194163712] Mock result - not saving to cache
2025-09-05 11:24:03,622 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6194163712] Returning result: Mock-Daniel Wilson - 29%
2025-09-05 11:24:03,622 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/3 completed: resume_8.pdf - success
2025-09-05 11:24:03,622 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/3 completed: resume_7.pdf - success
2025-09-05 11:24:03,622 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 3 results collected
2025-09-05 11:24:03,622 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 3, Failed: 0
2025-09-05 11:24:03,622 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:24:03,622 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-David Lee with 76% match
2025-09-05 11:24:03,622 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:24:03,622 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 5957 characters
2025-09-05 11:24:03,622 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 6457 bytes
2025-09-05 11:24:03,622 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:24:03] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:31:39,546 - werkzeug - INFO - [_internal.py:97] - _log() - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://10.11.152.19:8000
2025-09-05 11:31:39,546 - werkzeug - INFO - [_internal.py:97] - _log() - [33mPress CTRL+C to quit[0m
2025-09-05 11:31:39,547 - werkzeug - INFO - [_internal.py:97] - _log() -  * Restarting with stat
2025-09-05 11:31:39,901 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-05 11:31:39,908 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 207-057-880
2025-09-05 11:31:46,230 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:31:46,230 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:31:46,235 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:31:46,235 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:31:46] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:31:46,253 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:31:46,253 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757042555.6466007-48843-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:22:35 GMT'}
2025-09-05 11:31:46,254 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:31:46,254 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 48843 bytes
2025-09-05 11:31:46,255 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757042555.6467185-22583-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:22:35 GMT'}
2025-09-05 11:31:46,256 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23281 bytes
2025-09-05 11:31:46,256 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:31:46] "GET /static/script.js HTTP/1.1" 200 -
2025-09-05 11:31:46,257 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:31:46] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-05 11:31:46,299 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:31:46,299 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:31:46,299 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:31:46,299 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:31:46,299 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:31:46] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:31:53,312 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:31:53,312 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:31:53,313 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:31:53,313 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:31:53] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:31:53,326 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:31:53,326 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757043074.610031-23281-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:31:14 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:31:53,326 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:31:53,327 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042996.266096-48843-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:29:56 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:31:53,327 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23281 bytes
2025-09-05 11:31:53,328 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:31:53] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:31:53,328 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 48843 bytes
2025-09-05 11:31:53,328 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:31:53] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:31:53,340 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:31:53,341 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:31:53,341 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:31:53,341 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:31:53,341 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:31:53] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:31:58,805 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:31:58,806 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '17960', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryApQlmNFLg7pgZqtk', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:31:58,806 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryApQlmNFLg7pgZqtk
2025-09-05 11:31:58,806 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 17960
2025-09-05 11:31:58,809 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf']
2025-09-05 11:31:58,809 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[20 chars]'}
2025-09-05 11:31:58,809 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:31:58,810 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 7, Job desc length: 20, Mock: True
2025-09-05 11:31:58,810 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf']
2025-09-05 11:31:58,810 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 7 files
2025-09-05 11:31:58,810 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:31:58,811 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6181351424] Starting processing file: resume_10.pdf
2025-09-05 11:31:58,812 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6198177792] Starting processing file: resume_9.pdf
2025-09-05 11:31:58,812 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6215004160] Starting processing file: resume_8.pdf
2025-09-05 11:31:58,813 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6231830528] Starting processing file: resume_7.pdf
2025-09-05 11:31:58,813 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6181351424] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:31:58,813 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6248656896] Starting processing file: resume_6.pdf
2025-09-05 11:31:58,813 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 7 tasks submitted to thread pool
2025-09-05 11:31:58,813 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6198177792] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:31:58,813 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6215004160] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:31:58,813 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6198177792] Validating file type...
2025-09-05 11:31:58,813 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6181351424] Validating file type...
2025-09-05 11:31:58,813 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6248656896] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:31:58,813 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6231830528] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:31:58,814 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6215004160] Validating file type...
2025-09-05 11:31:58,814 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6198177792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6198177792_resume_9.pdf
2025-09-05 11:31:58,814 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6181351424] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6181351424_resume_10.pdf
2025-09-05 11:31:58,814 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6248656896] Validating file type...
2025-09-05 11:31:58,814 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6231830528] Validating file type...
2025-09-05 11:31:58,814 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6215004160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6215004160_resume_8.pdf
2025-09-05 11:31:58,814 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6248656896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6248656896_resume_6.pdf
2025-09-05 11:31:58,814 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6231830528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6231830528_resume_7.pdf
2025-09-05 11:31:58,815 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6181351424] File saved successfully
2025-09-05 11:31:58,815 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6248656896] File saved successfully
2025-09-05 11:31:58,815 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6215004160] File saved successfully
2025-09-05 11:31:58,816 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6215004160] Validating PDF structure...
2025-09-05 11:31:58,815 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6198177792] File saved successfully
2025-09-05 11:31:58,816 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6198177792] Validating PDF structure...
2025-09-05 11:31:58,816 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6181351424] Validating PDF structure...
2025-09-05 11:31:58,816 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6248656896] Validating PDF structure...
2025-09-05 11:31:58,815 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6231830528] File saved successfully
2025-09-05 11:31:58,823 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6215004160] PDF validation passed
2025-09-05 11:31:58,824 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6248656896] PDF validation passed
2025-09-05 11:31:58,829 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6215004160] Extracting text from PDF...
2025-09-05 11:31:58,827 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6198177792] PDF validation passed
2025-09-05 11:31:58,829 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6181351424] PDF validation passed
2025-09-05 11:31:58,829 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6248656896] Extracting text from PDF...
2025-09-05 11:31:58,829 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6231830528] Validating PDF structure...
2025-09-05 11:31:58,830 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6198177792] Extracting text from PDF...
2025-09-05 11:31:58,834 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6215004160] Text extracted successfully - 1125 characters
2025-09-05 11:31:58,838 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6231830528] PDF validation passed
2025-09-05 11:31:58,837 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6248656896] Text extracted successfully - 873 characters
2025-09-05 11:31:58,834 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6181351424] Extracting text from PDF...
2025-09-05 11:31:58,838 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6215004160] Mock mode - attempting to use cached response
2025-09-05 11:31:58,838 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6231830528] Extracting text from PDF...
2025-09-05 11:31:58,840 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6248656896] Mock mode - attempting to use cached response
2025-09-05 11:31:58,842 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6198177792] Text extracted successfully - 870 characters
2025-09-05 11:31:58,843 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6198177792] Mock mode - attempting to use cached response
2025-09-05 11:31:58,844 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:31:58,845 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:31:58,848 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:31:58,848 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 23%
2025-09-05 11:31:58,848 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6181351424] Text extracted successfully - 1093 characters
2025-09-05 11:31:58,848 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 77%
2025-09-05 11:31:58,849 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 32%
2025-09-05 11:31:58,851 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6231830528] Text extracted successfully - 1070 characters
2025-09-05 11:31:58,851 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-05 11:31:58,851 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6181351424] Mock mode - attempting to use cached response
2025-09-05 11:31:58,851 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-05 11:31:58,851 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-05 11:31:58,851 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6231830528] Mock mode - attempting to use cached response
2025-09-05 11:31:58,851 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6215004160] Using cached response: Mock-Maria Gonzalez
2025-09-05 11:31:58,851 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6248656896] Using cached response: Mock-David Lee
2025-09-05 11:31:58,851 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6198177792] Using cached response: Mock-Olivia Taylor
2025-09-05 11:31:58,852 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:31:58,852 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6215004160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6215004160_resume_8.pdf
2025-09-05 11:31:58,852 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6248656896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6248656896_resume_6.pdf
2025-09-05 11:31:58,852 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6198177792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6198177792_resume_9.pdf
2025-09-05 11:31:58,852 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:31:58,852 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 82%
2025-09-05 11:31:58,852 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 32%
2025-09-05 11:31:58,852 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6215004160] File processing completed successfully for: resume_8.pdf
2025-09-05 11:31:58,852 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6248656896] File processing completed successfully for: resume_6.pdf
2025-09-05 11:31:58,852 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-05 11:31:58,852 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6198177792] File processing completed successfully for: resume_9.pdf
2025-09-05 11:31:58,852 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-05 11:31:58,852 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6215004160] Mock result - not saving to cache
2025-09-05 11:31:58,852 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6248656896] Mock result - not saving to cache
2025-09-05 11:31:58,852 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6181351424] Using cached response: Mock-Olivia Miller
2025-09-05 11:31:58,852 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6198177792] Mock result - not saving to cache
2025-09-05 11:31:58,853 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6231830528] Using cached response: Mock-Isabella Martinez
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6215004160] Returning result: Mock-Maria Gonzalez - 23%
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6248656896] Returning result: Mock-David Lee - 77%
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6181351424] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6181351424_resume_10.pdf
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6198177792] Returning result: Mock-Olivia Taylor - 32%
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6231830528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6231830528_resume_7.pdf
2025-09-05 11:31:58,853 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6215004160] Starting processing file: resume_5.pdf
2025-09-05 11:31:58,853 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6248656896] Starting processing file: resume_4.pdf
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6215004160] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:31:58,853 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6181351424] File processing completed successfully for: resume_10.pdf
2025-09-05 11:31:58,853 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6231830528] File processing completed successfully for: resume_7.pdf
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6248656896] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6215004160] Validating file type...
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6181351424] Mock result - not saving to cache
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6231830528] Mock result - not saving to cache
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6248656896] Validating file type...
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6215004160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6215004160_resume_5.pdf
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6181351424] Returning result: Mock-Olivia Miller - 82%
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6231830528] Returning result: Mock-Isabella Martinez - 32%
2025-09-05 11:31:58,853 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6248656896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6248656896_resume_4.pdf
2025-09-05 11:31:58,853 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/7 completed: resume_10.pdf - success
2025-09-05 11:31:58,853 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/7 completed: resume_9.pdf - success
2025-09-05 11:31:58,854 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/7 completed: resume_8.pdf - success
2025-09-05 11:31:58,854 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/7 completed: resume_7.pdf - success
2025-09-05 11:31:58,854 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/7 completed: resume_6.pdf - success
2025-09-05 11:31:58,854 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6248656896] File saved successfully
2025-09-05 11:31:58,854 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6248656896] Validating PDF structure...
2025-09-05 11:31:58,854 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6215004160] File saved successfully
2025-09-05 11:31:58,854 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6215004160] Validating PDF structure...
2025-09-05 11:31:58,854 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6215004160] PDF validation passed
2025-09-05 11:31:58,855 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6215004160] Extracting text from PDF...
2025-09-05 11:31:58,855 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6248656896] PDF validation passed
2025-09-05 11:31:58,855 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6248656896] Extracting text from PDF...
2025-09-05 11:31:58,858 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6248656896] Text extracted successfully - 889 characters
2025-09-05 11:31:58,859 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6215004160] Text extracted successfully - 922 characters
2025-09-05 11:31:58,859 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6248656896] Mock mode - attempting to use cached response
2025-09-05 11:31:58,859 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6215004160] Mock mode - attempting to use cached response
2025-09-05 11:31:58,860 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:31:58,860 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 30%
2025-09-05 11:31:58,860 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:31:58,860 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-05 11:31:58,860 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 28%
2025-09-05 11:31:58,860 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-05 11:31:58,860 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6248656896] Using cached response: Mock-Isabella Martinez
2025-09-05 11:31:58,860 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6215004160] Using cached response: Mock-David Smith
2025-09-05 11:31:58,860 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6248656896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6248656896_resume_4.pdf
2025-09-05 11:31:58,860 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6215004160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113158_6215004160_resume_5.pdf
2025-09-05 11:31:58,860 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6248656896] File processing completed successfully for: resume_4.pdf
2025-09-05 11:31:58,860 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6248656896] Mock result - not saving to cache
2025-09-05 11:31:58,860 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6215004160] File processing completed successfully for: resume_5.pdf
2025-09-05 11:31:58,860 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6248656896] Returning result: Mock-Isabella Martinez - 30%
2025-09-05 11:31:58,860 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6215004160] Mock result - not saving to cache
2025-09-05 11:31:58,860 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6215004160] Returning result: Mock-David Smith - 28%
2025-09-05 11:31:58,860 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/7 completed: resume_5.pdf - success
2025-09-05 11:31:58,860 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/7 completed: resume_4.pdf - success
2025-09-05 11:31:58,861 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 7 results collected
2025-09-05 11:31:58,861 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 7, Failed: 0
2025-09-05 11:31:58,861 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:31:58,861 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Miller with 82% match
2025-09-05 11:31:58,861 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:31:58,861 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 12731 characters
2025-09-05 11:31:58,861 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 13842 bytes
2025-09-05 11:31:58,861 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:31:58] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:32:17,558 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:32:17,559 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:32:17,559 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:32:17,560 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:32:17] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:32:17,575 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:32:17,575 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757043074.610031-23281-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:31:14 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:32:17,575 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:32:17,576 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23281 bytes
2025-09-05 11:32:17,576 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757042996.266096-48843-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:29:56 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:32:17,576 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:32:17] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-05 11:32:17,577 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 48843 bytes
2025-09-05 11:32:17,577 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:32:17] "GET /static/script.js HTTP/1.1" 200 -
2025-09-05 11:32:17,584 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:32:17,584 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:32:17,584 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:32:17,584 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:32:17,584 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:32:17] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:32:22,675 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:32:22,675 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '12838', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarykLYmBeb3O7JyJZtn', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:32:22,676 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarykLYmBeb3O7JyJZtn
2025-09-05 11:32:22,676 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 12838
2025-09-05 11:32:22,677 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf']
2025-09-05 11:32:22,678 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[14 chars]'}
2025-09-05 11:32:22,678 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:32:22,678 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 5, Job desc length: 14, Mock: True
2025-09-05 11:32:22,678 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf']
2025-09-05 11:32:22,678 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 5 files
2025-09-05 11:32:22,678 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:32:22,679 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_6.pdf
2025-09-05 11:32:22,679 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_5.pdf
2025-09-05 11:32:22,679 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_4.pdf
2025-09-05 11:32:22,679 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:32:22,680 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:32:22,680 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:32:22,680 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_3.pdf
2025-09-05 11:32:22,680 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_2.pdf
2025-09-05 11:32:22,681 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113222_6325039104_resume_6.pdf
2025-09-05 11:32:22,681 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 5 tasks submitted to thread pool
2025-09-05 11:32:22,680 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:32:22,681 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:32:22,681 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:32:22,681 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:32:22,682 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:32:22,682 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113222_6341865472_resume_5.pdf
2025-09-05 11:32:22,682 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:32:22,682 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:32:22,682 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113222_6358691840_resume_4.pdf
2025-09-05 11:32:22,682 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113222_6375518208_resume_3.pdf
2025-09-05 11:32:22,682 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113222_6392344576_resume_2.pdf
2025-09-05 11:32:22,683 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:32:22,683 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:32:22,683 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:32:22,684 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:32:22,684 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:32:22,684 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:32:22,684 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:32:22,684 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:32:22,684 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:32:22,684 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:32:22,684 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:32:22,684 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:32:22,686 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:32:22,687 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:32:22,687 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:32:22,687 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:32:22,691 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 873 characters
2025-09-05 11:32:22,691 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:32:22,691 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:32:22,691 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:32:22,692 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:32:22,695 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 889 characters
2025-09-05 11:32:22,695 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:32:22,695 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 11:32:22,696 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:32:22,696 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 83%
2025-09-05 11:32:22,696 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-05 11:32:22,696 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-Emily Taylor
2025-09-05 11:32:22,696 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113222_6325039104_resume_6.pdf
2025-09-05 11:32:22,696 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:32:22,697 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 33%
2025-09-05 11:32:22,697 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-05 11:32:22,697 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-James Anderson
2025-09-05 11:32:22,697 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113222_6358691840_resume_4.pdf
2025-09-05 11:32:22,697 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_6.pdf
2025-09-05 11:32:22,700 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 922 characters
2025-09-05 11:32:22,700 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_4.pdf
2025-09-05 11:32:22,700 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:32:22,703 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 1088 characters
2025-09-05 11:32:22,705 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 902 characters
2025-09-05 11:32:22,705 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 11:32:22,705 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 11:32:22,705 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-Emily Taylor - 83%
2025-09-05 11:32:22,705 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 11:32:22,705 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 11:32:22,705 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-James Anderson - 33%
2025-09-05 11:32:22,706 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/5 completed: resume_6.pdf - success
2025-09-05 11:32:22,706 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:32:22,706 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:32:22,706 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:32:22,707 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 88%
2025-09-05 11:32:22,707 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 72%
2025-09-05 11:32:22,707 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 30%
2025-09-05 11:32:22,707 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-05 11:32:22,707 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-05 11:32:22,707 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-05 11:32:22,707 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-Emily Miller
2025-09-05 11:32:22,707 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113222_6341865472_resume_5.pdf
2025-09-05 11:32:22,707 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-David Lee
2025-09-05 11:32:22,707 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-David Smith
2025-09-05 11:32:22,707 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113222_6392344576_resume_2.pdf
2025-09-05 11:32:22,707 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_5.pdf
2025-09-05 11:32:22,707 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_113222_6375518208_resume_3.pdf
2025-09-05 11:32:22,707 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 11:32:22,707 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_2.pdf
2025-09-05 11:32:22,707 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-Emily Miller - 88%
2025-09-05 11:32:22,707 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 11:32:22,708 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_3.pdf
2025-09-05 11:32:22,708 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-David Lee - 72%
2025-09-05 11:32:22,708 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/5 completed: resume_5.pdf - success
2025-09-05 11:32:22,708 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 11:32:22,708 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/5 completed: resume_4.pdf - success
2025-09-05 11:32:22,708 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-David Smith - 30%
2025-09-05 11:32:22,708 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/5 completed: resume_3.pdf - success
2025-09-05 11:32:22,708 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/5 completed: resume_2.pdf - success
2025-09-05 11:32:22,708 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 5 results collected
2025-09-05 11:32:22,708 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 5, Failed: 0
2025-09-05 11:32:22,708 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:32:22,708 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Emily Miller with 88% match
2025-09-05 11:32:22,708 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:32:22,708 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 9628 characters
2025-09-05 11:32:22,709 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 10440 bytes
2025-09-05 11:32:22,709 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:32:22] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:41:42,067 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:41:42,068 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:41:42,069 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:41:42,069 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:41:42] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:41:42,093 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:41:42,093 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757043135.3950498-23281-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:32:15 GMT'}
2025-09-05 11:41:42,098 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:41:42,098 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23281 bytes
2025-09-05 11:41:42,099 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757043135.3937953-48843-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:32:15 GMT'}
2025-09-05 11:41:42,099 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:41:42] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:41:42,100 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 48843 bytes
2025-09-05 11:41:42,101 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:41:42] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:41:42,108 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:41:42,108 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:41:42,109 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:41:42,110 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:41:42,110 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:41:42] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:42:38,697 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:42:38,698 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:42:38,698 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:42:38,698 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:42:38] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:42:38,711 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:42:38,711 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757043135.3950498-23281-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:32:15 GMT'}
2025-09-05 11:42:38,712 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23281 bytes
2025-09-05 11:42:38,713 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:42:38] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:42:38,715 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:42:38,716 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757043135.3937953-48843-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:32:15 GMT'}
2025-09-05 11:42:38,717 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 48843 bytes
2025-09-05 11:42:38,717 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:42:38] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:42:38,722 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:42:38,722 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:42:38,722 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:42:38,723 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:42:38,723 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:42:38] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:45:14,006 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:45:14,007 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:45:14,007 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:45:14,008 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:45:14] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:45:14,037 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:45:14,038 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:45:14,039 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757043135.3950498-23281-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:32:15 GMT'}
2025-09-05 11:45:14,039 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757043135.3937953-48843-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:32:15 GMT'}
2025-09-05 11:45:14,040 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 48843 bytes
2025-09-05 11:45:14,040 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:45:14] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:45:14,040 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23281 bytes
2025-09-05 11:45:14,041 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:45:14] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:45:14,046 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:45:14,046 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:45:14,047 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:45:14,047 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:45:14,047 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:45:14] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:45:29,155 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:45:29,156 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '25543', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary7HbqrTHag9wxJ7Fc', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:45:29,156 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7HbqrTHag9wxJ7Fc
2025-09-05 11:45:29,156 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 25543
2025-09-05 11:45:29,158 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_9.pdf', 'resume_10.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:45:29,158 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[11 chars]'}
2025-09-05 11:45:29,158 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:45:29,158 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 11, Mock: True
2025-09-05 11:45:29,159 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_9.pdf', 'resume_10.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:45:29,159 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-05 11:45:29,159 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:45:29,159 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_9.pdf
2025-09-05 11:45:29,160 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_10.pdf
2025-09-05 11:45:29,160 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:45:29,160 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_8.pdf
2025-09-05 11:45:29,160 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:45:29,160 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_7.pdf
2025-09-05 11:45:29,160 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_6.pdf
2025-09-05 11:45:29,160 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-05 11:45:29,160 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:45:29,160 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:45:29,160 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:45:29,160 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:45:29,161 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:45:29,161 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6325039104_resume_9.pdf
2025-09-05 11:45:29,161 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:45:29,161 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6341865472_resume_10.pdf
2025-09-05 11:45:29,161 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:45:29,162 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:45:29,162 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6358691840_resume_8.pdf
2025-09-05 11:45:29,162 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6375518208_resume_7.pdf
2025-09-05 11:45:29,162 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6392344576_resume_6.pdf
2025-09-05 11:45:29,162 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:45:29,162 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:45:29,162 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:45:29,163 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:45:29,163 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:45:29,163 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:45:29,163 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:45:29,163 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:45:29,163 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:45:29,163 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:45:29,165 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:45:29,165 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:45:29,167 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:45:29,168 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:45:29,168 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:45:29,168 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:45:29,171 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:45:29,171 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:45:29,171 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 1093 characters
2025-09-05 11:45:29,171 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:45:29,171 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:45:29,172 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 11:45:29,175 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 1125 characters
2025-09-05 11:45:29,177 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 870 characters
2025-09-05 11:45:29,182 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 873 characters
2025-09-05 11:45:29,180 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 1070 characters
2025-09-05 11:45:29,182 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:45:29,182 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 11:45:29,178 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 11:45:29,182 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 11:45:29,183 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:45:29,183 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 80%
2025-09-05 11:45:29,183 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-05 11:45:29,183 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-John Lee
2025-09-05 11:45:29,183 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:45:29,184 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 33%
2025-09-05 11:45:29,183 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:45:29,183 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6341865472_resume_10.pdf
2025-09-05 11:45:29,184 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:45:29,184 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-05 11:45:29,184 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:45:29,184 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 87%
2025-09-05 11:45:29,185 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 28%
2025-09-05 11:45:29,184 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 21%
2025-09-05 11:45:29,185 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-James Anderson
2025-09-05 11:45:29,185 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_10.pdf
2025-09-05 11:45:29,185 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-05 11:45:29,185 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-05 11:45:29,185 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-05 11:45:29,185 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6325039104_resume_9.pdf
2025-09-05 11:45:29,185 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 11:45:29,185 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-Olivia Miller
2025-09-05 11:45:29,185 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-Maria Gonzalez
2025-09-05 11:45:29,185 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-Sophia Lee
2025-09-05 11:45:29,186 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6375518208_resume_7.pdf
2025-09-05 11:45:29,185 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_9.pdf
2025-09-05 11:45:29,185 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-John Lee - 80%
2025-09-05 11:45:29,186 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6358691840_resume_8.pdf
2025-09-05 11:45:29,186 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6392344576_resume_6.pdf
2025-09-05 11:45:29,186 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_7.pdf
2025-09-05 11:45:29,186 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:45:29,186 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_5.pdf
2025-09-05 11:45:29,186 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 11:45:29,186 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_8.pdf
2025-09-05 11:45:29,186 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-James Anderson - 33%
2025-09-05 11:45:29,186 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_6.pdf
2025-09-05 11:45:29,186 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:45:29,187 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-Olivia Miller - 87%
2025-09-05 11:45:29,187 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 11:45:29,187 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_4.pdf
2025-09-05 11:45:29,187 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_9.pdf - success
2025-09-05 11:45:29,187 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 11:45:29,187 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:45:29,187 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_3.pdf
2025-09-05 11:45:29,187 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-Maria Gonzalez - 28%
2025-09-05 11:45:29,187 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:45:29,187 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:45:29,187 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-Sophia Lee - 21%
2025-09-05 11:45:29,188 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_1.pdf
2025-09-05 11:45:29,187 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6341865472_resume_5.pdf
2025-09-05 11:45:29,187 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_2.pdf
2025-09-05 11:45:29,188 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6325039104_resume_4.pdf
2025-09-05 11:45:29,187 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_10.pdf - success
2025-09-05 11:45:29,188 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:45:29,187 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:45:29,188 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:45:29,188 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_8.pdf - success
2025-09-05 11:45:29,188 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:45:29,188 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:45:29,188 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:45:29,188 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:45:29,188 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:45:29,188 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_7.pdf - success
2025-09-05 11:45:29,188 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6392344576_resume_1.pdf
2025-09-05 11:45:29,188 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:45:29,188 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6375518208_resume_3.pdf
2025-09-05 11:45:29,188 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:45:29,188 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6358691840_resume_2.pdf
2025-09-05 11:45:29,188 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_6.pdf - success
2025-09-05 11:45:29,189 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:45:29,189 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:45:29,189 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:45:29,189 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:45:29,189 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:45:29,189 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:45:29,189 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:45:29,190 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:45:29,190 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:45:29,190 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:45:29,190 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:45:29,193 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 922 characters
2025-09-05 11:45:29,193 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:45:29,195 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 889 characters
2025-09-05 11:45:29,196 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 11:45:29,196 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:45:29,196 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:45:29,196 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:45:29,196 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:45:29,196 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:45:29,196 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:45:29,196 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:45:29,198 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 859 characters
2025-09-05 11:45:29,198 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 81%
2025-09-05 11:45:29,198 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 11:45:29,198 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-05 11:45:29,198 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 29%
2025-09-05 11:45:29,202 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-Olivia Johnson
2025-09-05 11:45:29,202 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 1088 characters
2025-09-05 11:45:29,202 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 902 characters
2025-09-05 11:45:29,202 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-05 11:45:29,202 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:45:29,203 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6341865472_resume_5.pdf
2025-09-05 11:45:29,203 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 11:45:29,203 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 11:45:29,203 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-Sophia Lee
2025-09-05 11:45:29,203 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 38%
2025-09-05 11:45:29,203 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_5.pdf
2025-09-05 11:45:29,203 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:45:29,203 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6325039104_resume_4.pdf
2025-09-05 11:45:29,203 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-05 11:45:29,203 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:45:29,203 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 11:45:29,203 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 81%
2025-09-05 11:45:29,203 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_4.pdf
2025-09-05 11:45:29,203 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-Isabella Martinez
2025-09-05 11:45:29,203 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 38%
2025-09-05 11:45:29,203 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-Olivia Johnson - 81%
2025-09-05 11:45:29,204 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-05 11:45:29,204 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:45:29,204 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6392344576_resume_1.pdf
2025-09-05 11:45:29,204 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-05 11:45:29,204 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_5.pdf - success
2025-09-05 11:45:29,204 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-Isabella Martinez
2025-09-05 11:45:29,204 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-Sophia Lee - 29%
2025-09-05 11:45:29,204 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-Emily Miller
2025-09-05 11:45:29,204 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_1.pdf
2025-09-05 11:45:29,204 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6375518208_resume_3.pdf
2025-09-05 11:45:29,204 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_4.pdf - success
2025-09-05 11:45:29,204 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114529_6358691840_resume_2.pdf
2025-09-05 11:45:29,204 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 11:45:29,204 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_3.pdf
2025-09-05 11:45:29,204 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-Isabella Martinez - 38%
2025-09-05 11:45:29,204 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 11:45:29,204 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_2.pdf
2025-09-05 11:45:29,204 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-Isabella Martinez - 38%
2025-09-05 11:45:29,204 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 11:45:29,204 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_3.pdf - success
2025-09-05 11:45:29,204 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-Emily Miller - 81%
2025-09-05 11:45:29,204 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_2.pdf - success
2025-09-05 11:45:29,204 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-05 11:45:29,205 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-05 11:45:29,205 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-05 11:45:29,205 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:45:29,205 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Miller with 87% match
2025-09-05 11:45:29,205 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:45:29,205 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 17629 characters
2025-09-05 11:45:29,205 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 19225 bytes
2025-09-05 11:45:29,205 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:45:29] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:45:57,913 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:45:57,913 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:45:57,913 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:45:57,914 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:45:57] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:45:57,932 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:45:57,932 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757043135.3950498-23281-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:32:15 GMT'}
2025-09-05 11:45:57,934 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23424 bytes
2025-09-05 11:45:57,934 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:45:57] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-05 11:45:57,937 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:45:57,938 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757043135.3937953-48843-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:32:15 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:45:57,938 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 48843 bytes
2025-09-05 11:45:57,939 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:45:57] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:45:57,942 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:45:57,942 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:45:57,942 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:45:57,943 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:45:57,943 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:45:57] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:46:02,771 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:46:02,771 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '12868', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryHCUeQBmdSBAXVKz8', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:46:02,772 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryHCUeQBmdSBAXVKz8
2025-09-05 11:46:02,772 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 12868
2025-09-05 11:46:02,773 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_4.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf']
2025-09-05 11:46:02,773 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[11 chars]'}
2025-09-05 11:46:02,773 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:46:02,773 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 5, Job desc length: 11, Mock: True
2025-09-05 11:46:02,773 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_4.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf']
2025-09-05 11:46:02,773 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 5 files
2025-09-05 11:46:02,773 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:46:02,773 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_4.pdf
2025-09-05 11:46:02,773 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_8.pdf
2025-09-05 11:46:02,773 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:46:02,773 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:46:02,773 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_7.pdf
2025-09-05 11:46:02,773 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_6.pdf
2025-09-05 11:46:02,773 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:46:02,774 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_5.pdf
2025-09-05 11:46:02,774 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 5 tasks submitted to thread pool
2025-09-05 11:46:02,774 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:46:02,774 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:46:02,774 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:46:02,774 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114602_6325039104_resume_4.pdf
2025-09-05 11:46:02,774 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:46:02,774 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114602_6341865472_resume_8.pdf
2025-09-05 11:46:02,774 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:46:02,774 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:46:02,774 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:46:02,774 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114602_6358691840_resume_7.pdf
2025-09-05 11:46:02,774 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114602_6375518208_resume_6.pdf
2025-09-05 11:46:02,775 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114602_6392344576_resume_5.pdf
2025-09-05 11:46:02,775 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:46:02,775 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:46:02,776 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:46:02,776 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:46:02,776 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:46:02,776 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:46:02,776 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:46:02,776 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:46:02,776 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:46:02,776 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:46:02,776 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:46:02,776 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:46:02,777 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:46:02,778 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:46:02,778 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:46:02,779 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:46:02,779 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:46:02,780 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:46:02,780 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 889 characters
2025-09-05 11:46:02,781 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:46:02,781 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:46:02,781 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:46:02,783 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 922 characters
2025-09-05 11:46:02,784 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:46:02,789 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 11:46:02,789 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 1125 characters
2025-09-05 11:46:02,789 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 34%
2025-09-05 11:46:02,790 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 11:46:02,792 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 1070 characters
2025-09-05 11:46:02,792 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:46:02,793 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 873 characters
2025-09-05 11:46:02,793 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-05 11:46:02,793 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 11:46:02,794 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alex Johnson - 66%
2025-09-05 11:46:02,794 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 11:46:02,794 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-Daniel Wilson
2025-09-05 11:46:02,794 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:46:02,794 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: b1f5815d
2025-09-05 11:46:02,794 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:46:02,794 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114602_6325039104_resume_4.pdf
2025-09-05 11:46:02,794 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 28%
2025-09-05 11:46:02,794 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-Alex Johnson
2025-09-05 11:46:02,795 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114602_6392344576_resume_5.pdf
2025-09-05 11:46:02,794 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:46:02,795 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-05 11:46:02,794 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 30%
2025-09-05 11:46:02,795 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_4.pdf
2025-09-05 11:46:02,795 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Michael Brown - 34%
2025-09-05 11:46:02,795 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-Maria Gonzalez
2025-09-05 11:46:02,795 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 399c9734
2025-09-05 11:46:02,795 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-05 11:46:02,795 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:46:02,795 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_5.pdf
2025-09-05 11:46:02,795 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114602_6341865472_resume_8.pdf
2025-09-05 11:46:02,795 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-Michael Brown
2025-09-05 11:46:02,795 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-Emily Davis
2025-09-05 11:46:02,795 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-Daniel Wilson - 34%
2025-09-05 11:46:02,795 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 11:46:02,796 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114602_6358691840_resume_7.pdf
2025-09-05 11:46:02,796 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114602_6375518208_resume_6.pdf
2025-09-05 11:46:02,796 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_8.pdf
2025-09-05 11:46:02,796 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/5 completed: resume_4.pdf - success
2025-09-05 11:46:02,796 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-Alex Johnson - 66%
2025-09-05 11:46:02,796 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 11:46:02,796 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_7.pdf
2025-09-05 11:46:02,796 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_6.pdf
2025-09-05 11:46:02,796 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-Maria Gonzalez - 28%
2025-09-05 11:46:02,796 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 11:46:02,796 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 11:46:02,796 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/5 completed: resume_8.pdf - success
2025-09-05 11:46:02,796 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-Emily Davis - 30%
2025-09-05 11:46:02,796 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-Michael Brown - 34%
2025-09-05 11:46:02,796 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/5 completed: resume_7.pdf - success
2025-09-05 11:46:02,796 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/5 completed: resume_6.pdf - success
2025-09-05 11:46:02,796 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/5 completed: resume_5.pdf - success
2025-09-05 11:46:02,797 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 5 results collected
2025-09-05 11:46:02,797 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 5, Failed: 0
2025-09-05 11:46:02,797 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:46:02,797 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Alex Johnson with 66% match
2025-09-05 11:46:02,797 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:46:02,797 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 8106 characters
2025-09-05 11:46:02,797 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 8905 bytes
2025-09-05 11:46:02,797 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:46:02] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:46:27,128 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:46:27,129 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:46:27,129 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:46:27,129 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:46:27] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:46:27,149 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:46:27,150 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:46:27,151 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757043951.5656707-23424-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:45:51 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:46:27,151 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757043135.3937953-48843-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:32:15 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:46:27,152 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23424 bytes
2025-09-05 11:46:27,152 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:46:27] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:46:27,152 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 48843 bytes
2025-09-05 11:46:27,153 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:46:27] "GET /static/script.js HTTP/1.1" 200 -
2025-09-05 11:46:27,158 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:46:27,158 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:46:27,158 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:46:27,158 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:46:27,158 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:46:27] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:46:32,994 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:46:32,995 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2697', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarygtCBg4iluz09js83', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:46:32,995 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarygtCBg4iluz09js83
2025-09-05 11:46:32,995 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2697
2025-09-05 11:46:32,995 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_5.pdf']
2025-09-05 11:46:32,995 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[18 chars]'}
2025-09-05 11:46:32,996 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:46:32,996 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 18, Mock: True
2025-09-05 11:46:32,996 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_5.pdf']
2025-09-05 11:46:32,996 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-05 11:46:32,996 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:46:32,996 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_5.pdf
2025-09-05 11:46:32,996 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:46:32,996 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:46:32,996 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-05 11:46:32,996 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114632_6325039104_resume_5.pdf
2025-09-05 11:46:32,997 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:46:32,997 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:46:32,997 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:46:32,997 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:46:33,000 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 922 characters
2025-09-05 11:46:33,000 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:46:33,001 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:46:33,001 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 20%
2025-09-05 11:46:33,002 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-05 11:46:33,002 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-Maria Gonzalez
2025-09-05 11:46:33,002 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114632_6325039104_resume_5.pdf
2025-09-05 11:46:33,002 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_5.pdf
2025-09-05 11:46:33,002 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:46:33,002 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-Maria Gonzalez - 20%
2025-09-05 11:46:33,002 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: resume_5.pdf - success
2025-09-05 11:46:33,002 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-05 11:46:33,002 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-05 11:46:33,002 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:46:33,002 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Maria Gonzalez with 20% match
2025-09-05 11:46:33,002 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-05 11:46:33,002 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:46:33,003 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 3051 characters
2025-09-05 11:46:33,003 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 3280 bytes
2025-09-05 11:46:33,003 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:46:33] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:46:37,719 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:46:37,719 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '7769', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryLjdYk983gcoFWEeQ', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:46:37,720 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryLjdYk983gcoFWEeQ
2025-09-05 11:46:37,720 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 7769
2025-09-05 11:46:37,721 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_4.pdf', 'resume_7.pdf', 'resume_6.pdf']
2025-09-05 11:46:37,721 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[18 chars]'}
2025-09-05 11:46:37,721 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:46:37,721 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 3, Job desc length: 18, Mock: True
2025-09-05 11:46:37,721 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_4.pdf', 'resume_7.pdf', 'resume_6.pdf']
2025-09-05 11:46:37,721 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 3 workers for 3 files
2025-09-05 11:46:37,721 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:46:37,721 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_4.pdf
2025-09-05 11:46:37,721 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_7.pdf
2025-09-05 11:46:37,721 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:46:37,721 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_6.pdf
2025-09-05 11:46:37,721 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 3 tasks submitted to thread pool
2025-09-05 11:46:37,721 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:46:37,721 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:46:37,721 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:46:37,721 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:46:37,722 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114637_6325039104_resume_4.pdf
2025-09-05 11:46:37,722 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:46:37,722 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114637_6341865472_resume_7.pdf
2025-09-05 11:46:37,722 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114637_6358691840_resume_6.pdf
2025-09-05 11:46:37,722 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:46:37,722 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:46:37,722 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:46:37,722 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:46:37,722 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:46:37,723 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:46:37,723 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:46:37,723 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:46:37,723 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:46:37,723 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:46:37,724 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:46:37,725 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:46:37,729 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 1070 characters
2025-09-05 11:46:37,729 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 873 characters
2025-09-05 11:46:37,729 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 11:46:37,729 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 11:46:37,731 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 889 characters
2025-09-05 11:46:37,731 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:46:37,731 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:46:37,731 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:46:37,731 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 82%
2025-09-05 11:46:37,731 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 85%
2025-09-05 11:46:37,732 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-05 11:46:37,732 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-05 11:46:37,732 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:46:37,732 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-Emily Miller
2025-09-05 11:46:37,733 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-Olivia Miller
2025-09-05 11:46:37,733 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114637_6358691840_resume_6.pdf
2025-09-05 11:46:37,733 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 33%
2025-09-05 11:46:37,733 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-05 11:46:37,733 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-Daniel Wilson
2025-09-05 11:46:37,733 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114637_6325039104_resume_4.pdf
2025-09-05 11:46:37,733 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114637_6341865472_resume_7.pdf
2025-09-05 11:46:37,733 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_6.pdf
2025-09-05 11:46:37,733 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 11:46:37,734 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-Olivia Miller - 85%
2025-09-05 11:46:37,734 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_4.pdf
2025-09-05 11:46:37,734 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:46:37,734 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_7.pdf
2025-09-05 11:46:37,734 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-Daniel Wilson - 33%
2025-09-05 11:46:37,734 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 11:46:37,734 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/3 completed: resume_4.pdf - success
2025-09-05 11:46:37,734 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-Emily Miller - 82%
2025-09-05 11:46:37,735 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/3 completed: resume_7.pdf - success
2025-09-05 11:46:37,735 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/3 completed: resume_6.pdf - success
2025-09-05 11:46:37,735 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 3 results collected
2025-09-05 11:46:37,735 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 3, Failed: 0
2025-09-05 11:46:37,735 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:46:37,735 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Miller with 85% match
2025-09-05 11:46:37,735 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:46:37,735 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 5652 characters
2025-09-05 11:46:37,735 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 6160 bytes
2025-09-05 11:46:37,735 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:46:37] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:47:11,217 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:47:11,217 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:47:11,217 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:47:11,218 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:47:11] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:47:11,237 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:47:11,238 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757043951.5656707-23424-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:45:51 GMT'}
2025-09-05 11:47:11,239 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23443 bytes
2025-09-05 11:47:11,240 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:47:11] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-05 11:47:11,241 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:47:11,242 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757043976.9504485-48843-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:46:16 GMT'}
2025-09-05 11:47:11,244 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 48843 bytes
2025-09-05 11:47:11,244 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:47:11] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:47:11,275 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:47:11,276 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:47:11,276 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:47:11,277 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:47:11,277 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:47:11] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:47:17,748 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:47:17,748 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '25544', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryZKBA23yWGgZBAccP', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:47:17,748 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryZKBA23yWGgZBAccP
2025-09-05 11:47:17,749 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 25544
2025-09-05 11:47:17,750 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:47:17,750 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[12 chars]'}
2025-09-05 11:47:17,750 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:47:17,750 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 12, Mock: True
2025-09-05 11:47:17,750 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:47:17,750 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-05 11:47:17,751 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:47:17,751 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_10.pdf
2025-09-05 11:47:17,751 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_9.pdf
2025-09-05 11:47:17,751 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:47:17,751 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_8.pdf
2025-09-05 11:47:17,751 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:47:17,751 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_7.pdf
2025-09-05 11:47:17,751 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_6.pdf
2025-09-05 11:47:17,751 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-05 11:47:17,751 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:47:17,751 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:47:17,751 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:47:17,751 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:47:17,752 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:47:17,752 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6325039104_resume_10.pdf
2025-09-05 11:47:17,752 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:47:17,752 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6341865472_resume_9.pdf
2025-09-05 11:47:17,752 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:47:17,752 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:47:17,752 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6358691840_resume_8.pdf
2025-09-05 11:47:17,752 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6375518208_resume_7.pdf
2025-09-05 11:47:17,752 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6392344576_resume_6.pdf
2025-09-05 11:47:17,753 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:47:17,753 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:47:17,753 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:47:17,753 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:47:17,753 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:47:17,753 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:47:17,753 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:47:17,753 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:47:17,753 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:47:17,753 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:47:17,755 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:47:17,755 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:47:17,755 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:47:17,755 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:47:17,756 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:47:17,756 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:47:17,757 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:47:17,757 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:47:17,757 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:47:17,761 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 1093 characters
2025-09-05 11:47:17,764 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:47:17,764 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 870 characters
2025-09-05 11:47:17,764 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:47:17,764 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 11:47:17,767 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 1125 characters
2025-09-05 11:47:17,770 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 11:47:17,771 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 1070 characters
2025-09-05 11:47:17,771 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:47:17,771 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:47:17,772 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 873 characters
2025-09-05 11:47:17,772 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 11:47:17,772 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 74%
2025-09-05 11:47:17,772 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 78%
2025-09-05 11:47:17,772 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 11:47:17,772 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:47:17,772 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-05 11:47:17,772 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-05 11:47:17,772 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 24%
2025-09-05 11:47:17,772 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:47:17,772 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-Alice Lee
2025-09-05 11:47:17,772 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:47:17,773 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-John Lee
2025-09-05 11:47:17,773 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-05 11:47:17,773 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 72%
2025-09-05 11:47:17,773 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6341865472_resume_9.pdf
2025-09-05 11:47:17,773 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 29%
2025-09-05 11:47:17,773 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6325039104_resume_10.pdf
2025-09-05 11:47:17,773 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-Sophia Lee
2025-09-05 11:47:17,773 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-05 11:47:17,773 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6358691840_resume_8.pdf
2025-09-05 11:47:17,774 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-David Lee
2025-09-05 11:47:17,774 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-Emily Davis
2025-09-05 11:47:17,774 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_10.pdf
2025-09-05 11:47:17,774 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_9.pdf
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6375518208_resume_7.pdf
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6392344576_resume_6.pdf
2025-09-05 11:47:17,774 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_8.pdf
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 11:47:17,774 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_7.pdf
2025-09-05 11:47:17,774 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_6.pdf
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-John Lee - 78%
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-Alice Lee - 74%
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-Sophia Lee - 24%
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 11:47:17,774 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_5.pdf
2025-09-05 11:47:17,774 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_10.pdf - success
2025-09-05 11:47:17,774 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_4.pdf
2025-09-05 11:47:17,774 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_3.pdf
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-David Lee - 72%
2025-09-05 11:47:17,775 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_2.pdf
2025-09-05 11:47:17,775 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:47:17,774 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-Emily Davis - 29%
2025-09-05 11:47:17,775 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:47:17,775 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:47:17,774 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_9.pdf - success
2025-09-05 11:47:17,775 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:47:17,775 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:47:17,775 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_1.pdf
2025-09-05 11:47:17,775 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:47:17,775 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:47:17,775 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_8.pdf - success
2025-09-05 11:47:17,775 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6375518208_resume_2.pdf
2025-09-05 11:47:17,775 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6325039104_resume_5.pdf
2025-09-05 11:47:17,775 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:47:17,776 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:47:17,776 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6358691840_resume_3.pdf
2025-09-05 11:47:17,776 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_7.pdf - success
2025-09-05 11:47:17,776 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6341865472_resume_4.pdf
2025-09-05 11:47:17,776 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6392344576_resume_1.pdf
2025-09-05 11:47:17,777 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_6.pdf - success
2025-09-05 11:47:17,777 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:47:17,777 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:47:17,777 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:47:17,777 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:47:17,777 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:47:17,777 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:47:17,777 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:47:17,777 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:47:17,778 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:47:17,778 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:47:17,778 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:47:17,778 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:47:17,778 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:47:17,778 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:47:17,778 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:47:17,779 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:47:17,779 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:47:17,779 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:47:17,781 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 1088 characters
2025-09-05 11:47:17,781 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:47:17,783 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 922 characters
2025-09-05 11:47:17,783 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 11:47:17,784 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:47:17,784 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:47:17,786 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 902 characters
2025-09-05 11:47:17,788 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 859 characters
2025-09-05 11:47:17,788 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 11:47:17,788 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:47:17,788 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 11:47:17,788 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:47:17,790 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 80%
2025-09-05 11:47:17,788 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:47:17,790 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 889 characters
2025-09-05 11:47:17,790 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-05 11:47:17,788 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alex Johnson - 64%
2025-09-05 11:47:17,790 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:47:17,791 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 80%
2025-09-05 11:47:17,790 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 11:47:17,791 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-Olivia Miller
2025-09-05 11:47:17,791 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6375518208_resume_2.pdf
2025-09-05 11:47:17,791 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: b1f5815d
2025-09-05 11:47:17,790 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 86%
2025-09-05 11:47:17,791 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-05 11:47:17,791 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-Alex Johnson
2025-09-05 11:47:17,791 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:47:17,791 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_2.pdf
2025-09-05 11:47:17,791 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-05 11:47:17,792 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-Olivia Johnson
2025-09-05 11:47:17,792 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6325039104_resume_5.pdf
2025-09-05 11:47:17,792 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 27%
2025-09-05 11:47:17,792 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 11:47:17,792 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-Olivia Miller
2025-09-05 11:47:17,792 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6392344576_resume_1.pdf
2025-09-05 11:47:17,792 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-05 11:47:17,792 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-Olivia Miller - 80%
2025-09-05 11:47:17,792 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6358691840_resume_3.pdf
2025-09-05 11:47:17,792 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-Sophia Lee
2025-09-05 11:47:17,792 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_5.pdf
2025-09-05 11:47:17,792 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_1.pdf
2025-09-05 11:47:17,792 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114717_6341865472_resume_4.pdf
2025-09-05 11:47:17,792 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:47:17,792 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_3.pdf
2025-09-05 11:47:17,792 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 11:47:17,793 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-Alex Johnson - 64%
2025-09-05 11:47:17,793 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_4.pdf
2025-09-05 11:47:17,793 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 11:47:17,793 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-Olivia Johnson - 80%
2025-09-05 11:47:17,793 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 11:47:17,793 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_5.pdf - success
2025-09-05 11:47:17,793 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-Olivia Miller - 86%
2025-09-05 11:47:17,793 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-Sophia Lee - 27%
2025-09-05 11:47:17,794 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_4.pdf - success
2025-09-05 11:47:17,794 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_3.pdf - success
2025-09-05 11:47:17,794 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_2.pdf - success
2025-09-05 11:47:17,794 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-05 11:47:17,794 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-05 11:47:17,794 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-05 11:47:17,794 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:47:17,794 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Miller with 86% match
2025-09-05 11:47:17,795 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:47:17,795 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 19191 characters
2025-09-05 11:47:17,795 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 20830 bytes
2025-09-05 11:47:17,795 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:47:17] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:49:41,837 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:49:41,838 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:49:41,839 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:49:41,840 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:49:41] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:49:41,865 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:49:41,868 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757044000.4360502-23443-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:46:40 GMT'}
2025-09-05 11:49:41,879 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:49:41,880 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23730 bytes
2025-09-05 11:49:41,880 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757043976.9504485-48843-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:46:16 GMT'}
2025-09-05 11:49:41,882 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 50292 bytes
2025-09-05 11:49:41,882 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:49:41] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-05 11:49:41,882 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:49:41] "GET /static/script.js HTTP/1.1" 200 -
2025-09-05 11:49:41,918 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:49:41,919 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:49:41,919 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:49:41,919 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:49:41,919 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:49:41] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:49:48,304 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:49:48,305 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '25549', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryFpR4bTAa4D9vmy8J', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:49:48,305 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryFpR4bTAa4D9vmy8J
2025-09-05 11:49:48,305 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 25549
2025-09-05 11:49:48,307 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:49:48,307 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-05 11:49:48,307 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:49:48,307 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 17, Mock: True
2025-09-05 11:49:48,307 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:49:48,307 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-05 11:49:48,307 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:49:48,307 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_10.pdf
2025-09-05 11:49:48,307 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_9.pdf
2025-09-05 11:49:48,308 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:49:48,308 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_8.pdf
2025-09-05 11:49:48,308 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:49:48,308 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_7.pdf
2025-09-05 11:49:48,308 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:49:48,308 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_6.pdf
2025-09-05 11:49:48,308 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-05 11:49:48,308 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:49:48,308 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:49:48,308 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:49:48,308 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6325039104_resume_10.pdf
2025-09-05 11:49:48,308 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:49:48,309 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:49:48,309 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6341865472_resume_9.pdf
2025-09-05 11:49:48,309 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:49:48,309 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:49:48,309 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6392344576_resume_6.pdf
2025-09-05 11:49:48,309 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6358691840_resume_8.pdf
2025-09-05 11:49:48,309 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6375518208_resume_7.pdf
2025-09-05 11:49:48,310 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:49:48,310 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:49:48,310 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:49:48,310 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:49:48,310 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:49:48,310 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:49:48,310 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:49:48,310 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:49:48,310 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:49:48,311 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:49:48,311 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:49:48,311 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:49:48,312 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:49:48,312 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:49:48,313 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:49:48,313 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:49:48,313 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:49:48,321 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 870 characters
2025-09-05 11:49:48,327 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 1093 characters
2025-09-05 11:49:48,327 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:49:48,327 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:49:48,328 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 11:49:48,328 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:49:48,332 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:49:48,332 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 1125 characters
2025-09-05 11:49:48,332 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 11:49:48,336 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:49:48,341 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 873 characters
2025-09-05 11:49:48,341 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:49:48,347 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 26%
2025-09-05 11:49:48,348 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:49:48,348 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 11:49:48,349 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 81%
2025-09-05 11:49:48,352 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-05 11:49:48,355 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 1070 characters
2025-09-05 11:49:48,356 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Michael Brown - 34%
2025-09-05 11:49:48,356 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-Sophia Lee
2025-09-05 11:49:48,356 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 11:49:48,356 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-05 11:49:48,356 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 399c9734
2025-09-05 11:49:48,356 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6325039104_resume_10.pdf
2025-09-05 11:49:48,356 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-Olivia Miller
2025-09-05 11:49:48,356 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-Michael Brown
2025-09-05 11:49:48,357 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6341865472_resume_9.pdf
2025-09-05 11:49:48,357 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6358691840_resume_8.pdf
2025-09-05 11:49:48,357 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:49:48,357 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_10.pdf
2025-09-05 11:49:48,357 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_8.pdf
2025-09-05 11:49:48,358 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 11:49:48,358 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-Michael Brown - 34%
2025-09-05 11:49:48,358 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_5.pdf
2025-09-05 11:49:48,358 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:49:48,357 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 35%
2025-09-05 11:49:48,358 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:49:48,358 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:49:48,358 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-Sophia Lee - 26%
2025-09-05 11:49:48,358 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_9.pdf
2025-09-05 11:49:48,358 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-05 11:49:48,358 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:49:48,359 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6358691840_resume_5.pdf
2025-09-05 11:49:48,359 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_4.pdf
2025-09-05 11:49:48,359 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_10.pdf - success
2025-09-05 11:49:48,359 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 11:49:48,359 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-James Anderson
2025-09-05 11:49:48,359 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 28%
2025-09-05 11:49:48,359 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:49:48,360 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-Olivia Miller - 81%
2025-09-05 11:49:48,360 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:49:48,360 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6392344576_resume_6.pdf
2025-09-05 11:49:48,360 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6325039104_resume_4.pdf
2025-09-05 11:49:48,360 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_3.pdf
2025-09-05 11:49:48,360 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_9.pdf - success
2025-09-05 11:49:48,360 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:49:48,360 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-05 11:49:48,361 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:49:48,360 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:49:48,361 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_8.pdf - success
2025-09-05 11:49:48,361 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-Daniel Wilson
2025-09-05 11:49:48,360 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_6.pdf
2025-09-05 11:49:48,361 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 11:49:48,361 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:49:48,361 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6375518208_resume_7.pdf
2025-09-05 11:49:48,361 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:49:48,362 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:49:48,362 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6341865472_resume_3.pdf
2025-09-05 11:49:48,361 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-James Anderson - 35%
2025-09-05 11:49:48,362 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:49:48,363 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_2.pdf
2025-09-05 11:49:48,363 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:49:48,363 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:49:48,362 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_7.pdf
2025-09-05 11:49:48,363 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:49:48,364 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:49:48,364 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:49:48,364 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:49:48,364 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 11:49:48,364 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6392344576_resume_2.pdf
2025-09-05 11:49:48,364 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:49:48,364 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-Daniel Wilson - 28%
2025-09-05 11:49:48,368 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:49:48,368 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 922 characters
2025-09-05 11:49:48,368 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_1.pdf
2025-09-05 11:49:48,368 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_7.pdf - success
2025-09-05 11:49:48,368 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:49:48,368 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 11:49:48,368 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:49:48,369 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_6.pdf - success
2025-09-05 11:49:48,370 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 889 characters
2025-09-05 11:49:48,370 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:49:48,370 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:49:48,373 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:49:48,371 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:49:48,370 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:49:48,373 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 902 characters
2025-09-05 11:49:48,371 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6375518208_resume_1.pdf
2025-09-05 11:49:48,373 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 28%
2025-09-05 11:49:48,374 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:49:48,374 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 11:49:48,374 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:49:48,374 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-05 11:49:48,374 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:49:48,374 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 77%
2025-09-05 11:49:48,374 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-Daniel Wilson
2025-09-05 11:49:48,374 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:49:48,374 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-05 11:49:48,374 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6358691840_resume_5.pdf
2025-09-05 11:49:48,374 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:49:48,374 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 29%
2025-09-05 11:49:48,374 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-John Lee
2025-09-05 11:49:48,375 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_5.pdf
2025-09-05 11:49:48,377 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 1088 characters
2025-09-05 11:49:48,377 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:49:48,377 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-05 11:49:48,377 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6325039104_resume_4.pdf
2025-09-05 11:49:48,377 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 11:49:48,377 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 11:49:48,377 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-Maria Gonzalez
2025-09-05 11:49:48,377 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-Daniel Wilson - 28%
2025-09-05 11:49:48,377 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:49:48,377 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_4.pdf
2025-09-05 11:49:48,378 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6341865472_resume_3.pdf
2025-09-05 11:49:48,378 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:49:48,378 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_5.pdf - success
2025-09-05 11:49:48,378 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:49:48,378 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:49:48,378 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 26%
2025-09-05 11:49:48,378 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-John Lee - 77%
2025-09-05 11:49:48,378 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-05 11:49:48,378 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_3.pdf
2025-09-05 11:49:48,379 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_4.pdf - success
2025-09-05 11:49:48,379 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-Sophia Lee
2025-09-05 11:49:48,380 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 859 characters
2025-09-05 11:49:48,380 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 11:49:48,380 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6392344576_resume_2.pdf
2025-09-05 11:49:48,380 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 11:49:48,381 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-Maria Gonzalez - 29%
2025-09-05 11:49:48,381 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_3.pdf - success
2025-09-05 11:49:48,381 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_2.pdf
2025-09-05 11:49:48,381 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 11:49:48,381 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-Sophia Lee - 26%
2025-09-05 11:49:48,381 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:49:48,381 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_2.pdf - success
2025-09-05 11:49:48,381 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 29%
2025-09-05 11:49:48,381 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-05 11:49:48,381 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-David Smith
2025-09-05 11:49:48,381 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_114948_6375518208_resume_1.pdf
2025-09-05 11:49:48,382 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_1.pdf
2025-09-05 11:49:48,382 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 11:49:48,382 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-David Smith - 29%
2025-09-05 11:49:48,382 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-05 11:49:48,382 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-05 11:49:48,382 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-05 11:49:48,382 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:49:48,382 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Miller with 81% match
2025-09-05 11:49:48,382 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:49:48,382 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 16804 characters
2025-09-05 11:49:48,382 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 18371 bytes
2025-09-05 11:49:48,382 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:49:48] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:49:55,275 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:49:55,276 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:49:55,277 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:49:55,277 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:49:55] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:49:55,296 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:49:55,296 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757044132.2406895-50292-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:48:52 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:49:55,297 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:49:55,297 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757044132.2406485-23730-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:48:52 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:49:55,298 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 50292 bytes
2025-09-05 11:49:55,299 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23730 bytes
2025-09-05 11:49:55,299 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:49:55] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-05 11:49:55,299 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:49:55] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:49:55,310 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:49:55,310 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:49:55,310 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:49:55,311 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:49:55,311 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:49:55] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:50:02,955 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:50:02,955 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '25549', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryjMFApuav5v5eEC9A', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:50:02,956 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryjMFApuav5v5eEC9A
2025-09-05 11:50:02,956 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 25549
2025-09-05 11:50:02,959 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:50:02,959 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-05 11:50:02,959 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:50:02,959 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 17, Mock: True
2025-09-05 11:50:02,959 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:50:02,959 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-05 11:50:02,959 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:50:02,960 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_10.pdf
2025-09-05 11:50:02,960 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:50:02,960 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_9.pdf
2025-09-05 11:50:02,960 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_8.pdf
2025-09-05 11:50:02,960 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:50:02,960 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_7.pdf
2025-09-05 11:50:02,960 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_6.pdf
2025-09-05 11:50:02,960 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-05 11:50:02,960 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:50:02,961 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:50:02,961 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6325039104_resume_10.pdf
2025-09-05 11:50:02,961 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:50:02,961 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:50:02,961 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:50:02,961 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:50:02,961 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:50:02,961 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:50:02,961 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6341865472_resume_9.pdf
2025-09-05 11:50:02,961 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6358691840_resume_8.pdf
2025-09-05 11:50:02,961 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6375518208_resume_7.pdf
2025-09-05 11:50:02,962 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6392344576_resume_6.pdf
2025-09-05 11:50:02,962 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:50:02,962 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:50:02,963 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:50:02,963 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:50:02,963 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:50:02,963 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:50:02,963 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:50:02,963 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:50:02,963 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:50:02,965 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:50:02,967 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 1093 characters
2025-09-05 11:50:02,968 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:50:02,968 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:50:02,968 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:50:02,969 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:50:02,969 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:50:02,969 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:50:02,971 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:50:02,973 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:50:02,973 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:50:02,973 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:50:02,974 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:50:02,977 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:50:02,977 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 873 characters
2025-09-05 11:50:02,977 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 82%
2025-09-05 11:50:02,978 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 11:50:02,978 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-05 11:50:02,982 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 870 characters
2025-09-05 11:50:02,982 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-Emily Miller
2025-09-05 11:50:02,983 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 11:50:02,986 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 1125 characters
2025-09-05 11:50:02,986 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:50:02,986 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6325039104_resume_10.pdf
2025-09-05 11:50:02,987 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 11:50:02,989 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 1070 characters
2025-09-05 11:50:02,989 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 30%
2025-09-05 11:50:02,990 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:50:02,990 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_10.pdf
2025-09-05 11:50:02,990 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 11:50:02,990 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-05 11:50:02,990 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 88%
2025-09-05 11:50:02,990 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:50:02,991 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:50:02,991 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-Sophia Lee
2025-09-05 11:50:02,991 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-05 11:50:02,991 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-Emily Miller - 82%
2025-09-05 11:50:02,991 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:50:02,991 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 31%
2025-09-05 11:50:02,991 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6392344576_resume_6.pdf
2025-09-05 11:50:02,991 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-Emily Taylor
2025-09-05 11:50:02,991 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_5.pdf
2025-09-05 11:50:02,991 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_10.pdf - success
2025-09-05 11:50:02,991 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 90%
2025-09-05 11:50:02,991 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-05 11:50:02,991 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6341865472_resume_9.pdf
2025-09-05 11:50:02,991 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:50:02,991 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_6.pdf
2025-09-05 11:50:02,991 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-05 11:50:02,991 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-Olivia Taylor
2025-09-05 11:50:02,991 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:50:02,991 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 11:50:02,991 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-Olivia Johnson
2025-09-05 11:50:02,991 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_9.pdf
2025-09-05 11:50:02,992 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6358691840_resume_8.pdf
2025-09-05 11:50:02,992 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6325039104_resume_5.pdf
2025-09-05 11:50:02,992 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-Sophia Lee - 30%
2025-09-05 11:50:02,992 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6375518208_resume_7.pdf
2025-09-05 11:50:02,992 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 11:50:02,992 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_4.pdf
2025-09-05 11:50:02,992 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_8.pdf
2025-09-05 11:50:02,992 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-Emily Taylor - 88%
2025-09-05 11:50:02,992 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:50:02,992 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 11:50:02,992 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_3.pdf
2025-09-05 11:50:02,992 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_9.pdf - success
2025-09-05 11:50:02,992 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:50:02,992 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_7.pdf
2025-09-05 11:50:02,992 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-Olivia Taylor - 31%
2025-09-05 11:50:02,992 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:50:02,992 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6392344576_resume_4.pdf
2025-09-05 11:50:02,992 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 11:50:02,992 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:50:02,993 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_2.pdf
2025-09-05 11:50:02,993 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:50:02,993 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_8.pdf - success
2025-09-05 11:50:02,993 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-Olivia Johnson - 90%
2025-09-05 11:50:02,993 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:50:02,993 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:50:02,993 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6341865472_resume_3.pdf
2025-09-05 11:50:02,993 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_1.pdf
2025-09-05 11:50:02,993 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_7.pdf - success
2025-09-05 11:50:02,993 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:50:02,993 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:50:02,993 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:50:02,993 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_6.pdf - success
2025-09-05 11:50:02,993 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:50:02,993 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6358691840_resume_2.pdf
2025-09-05 11:50:02,994 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:50:02,994 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:50:02,994 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:50:02,994 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:50:02,994 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6375518208_resume_1.pdf
2025-09-05 11:50:02,994 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:50:02,994 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:50:02,995 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:50:02,995 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:50:02,995 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:50:02,995 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:50:02,997 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:50:02,997 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 922 characters
2025-09-05 11:50:02,998 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:50:02,998 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:50:02,999 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:50:03,000 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 889 characters
2025-09-05 11:50:03,000 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:50:03,000 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:50:03,000 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 11:50:03,001 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:50:03,001 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:50:03,001 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 30%
2025-09-05 11:50:03,002 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:50:03,003 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 902 characters
2025-09-05 11:50:03,003 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:50:03,003 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-05 11:50:03,005 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 1088 characters
2025-09-05 11:50:03,005 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 11:50:03,006 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 74%
2025-09-05 11:50:03,007 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 859 characters
2025-09-05 11:50:03,007 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-Sophia Lee
2025-09-05 11:50:03,007 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 11:50:03,007 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-05 11:50:03,007 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 11:50:03,008 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:50:03,008 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6325039104_resume_5.pdf
2025-09-05 11:50:03,008 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-John Lee
2025-09-05 11:50:03,008 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 35%
2025-09-05 11:50:03,008 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:50:03,008 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6392344576_resume_4.pdf
2025-09-05 11:50:03,008 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-05 11:50:03,008 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:50:03,008 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_5.pdf
2025-09-05 11:50:03,008 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 20%
2025-09-05 11:50:03,008 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-Olivia Taylor
2025-09-05 11:50:03,008 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 89%
2025-09-05 11:50:03,008 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_4.pdf
2025-09-05 11:50:03,008 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:50:03,008 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-05 11:50:03,009 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6341865472_resume_3.pdf
2025-09-05 11:50:03,009 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-05 11:50:03,009 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 11:50:03,009 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-Sophia Lee - 30%
2025-09-05 11:50:03,009 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-Sophia Lee
2025-09-05 11:50:03,009 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-Olivia Johnson
2025-09-05 11:50:03,009 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-John Lee - 74%
2025-09-05 11:50:03,009 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_3.pdf
2025-09-05 11:50:03,009 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6358691840_resume_2.pdf
2025-09-05 11:50:03,009 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_5.pdf - success
2025-09-05 11:50:03,009 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115002_6375518208_resume_1.pdf
2025-09-05 11:50:03,009 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 11:50:03,009 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_4.pdf - success
2025-09-05 11:50:03,009 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_2.pdf
2025-09-05 11:50:03,009 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-Olivia Taylor - 35%
2025-09-05 11:50:03,009 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_1.pdf
2025-09-05 11:50:03,009 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 11:50:03,009 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 11:50:03,009 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_3.pdf - success
2025-09-05 11:50:03,009 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-Sophia Lee - 20%
2025-09-05 11:50:03,009 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-Olivia Johnson - 89%
2025-09-05 11:50:03,009 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_2.pdf - success
2025-09-05 11:50:03,009 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-05 11:50:03,009 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-05 11:50:03,010 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-05 11:50:03,010 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:50:03,010 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Johnson with 90% match
2025-09-05 11:50:03,010 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:50:03,010 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 17877 characters
2025-09-05 11:50:03,010 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 19473 bytes
2025-09-05 11:50:03,010 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:50:03] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 11:52:13,904 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:52:13,905 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:52:13,906 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:52:13,906 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:52:13] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:52:13,938 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:52:13,939 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757044132.2406485-23730-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:48:52 GMT'}
2025-09-05 11:52:13,941 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23730 bytes
2025-09-05 11:52:13,942 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:52:13] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:52:13,944 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:52:13,945 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757044132.2406895-50292-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:48:52 GMT'}
2025-09-05 11:52:13,946 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 50306 bytes
2025-09-05 11:52:13,946 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:52:13] "GET /static/script.js HTTP/1.1" 200 -
2025-09-05 11:52:13,952 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:52:13,952 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:52:13,953 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:52:13,957 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:52:13,957 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:52:13] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:53:39,221 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 11:53:39,221 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 11:53:39,222 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 11:53:39,222 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:53:39] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 11:53:39,238 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 11:53:39,240 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 11:53:39,240 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757044132.2406485-23730-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:48:52 GMT'}
2025-09-05 11:53:39,240 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757044331.1473827-50306-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:52:11 GMT'}
2025-09-05 11:53:39,241 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23730 bytes
2025-09-05 11:53:39,241 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 50315 bytes
2025-09-05 11:53:39,242 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:53:39] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-05 11:53:39,242 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:53:39] "GET /static/script.js HTTP/1.1" 200 -
2025-09-05 11:53:39,250 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 11:53:39,251 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:53:39,251 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 11:53:39,251 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 11:53:39,251 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:53:39] "GET /api/health HTTP/1.1" 200 -
2025-09-05 11:53:43,121 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 11:53:43,121 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '25544', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryCVdwbQpoC7Hjwd0O', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 11:53:43,121 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryCVdwbQpoC7Hjwd0O
2025-09-05 11:53:43,122 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 25544
2025-09-05 11:53:43,123 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:53:43,124 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[12 chars]'}
2025-09-05 11:53:43,124 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 11:53:43,124 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 12, Mock: True
2025-09-05 11:53:43,124 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 11:53:43,124 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-05 11:53:43,124 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 11:53:43,124 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_10.pdf
2025-09-05 11:53:43,124 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:53:43,124 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_9.pdf
2025-09-05 11:53:43,124 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:53:43,124 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_8.pdf
2025-09-05 11:53:43,124 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_7.pdf
2025-09-05 11:53:43,124 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_6.pdf
2025-09-05 11:53:43,125 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-05 11:53:43,125 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:53:43,125 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6325039104_resume_10.pdf
2025-09-05 11:53:43,125 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:53:43,125 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:53:43,125 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:53:43,125 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:53:43,125 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:53:43,125 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:53:43,125 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:53:43,125 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6341865472_resume_9.pdf
2025-09-05 11:53:43,125 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6358691840_resume_8.pdf
2025-09-05 11:53:43,125 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6375518208_resume_7.pdf
2025-09-05 11:53:43,125 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6392344576_resume_6.pdf
2025-09-05 11:53:43,126 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:53:43,126 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:53:43,126 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:53:43,126 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:53:43,126 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:53:43,126 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:53:43,126 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:53:43,126 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:53:43,126 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:53:43,127 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:53:43,127 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:53:43,127 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:53:43,127 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:53:43,128 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:53:43,128 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:53:43,128 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:53:43,129 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:53:43,129 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:53:43,130 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:53:43,131 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:53:43,131 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 870 characters
2025-09-05 11:53:43,134 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 1093 characters
2025-09-05 11:53:43,134 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 11:53:43,134 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:53:43,135 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:53:43,136 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:53:43,138 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 1070 characters
2025-09-05 11:53:43,138 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 77%
2025-09-05 11:53:43,141 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 873 characters
2025-09-05 11:53:43,141 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 1125 characters
2025-09-05 11:53:43,141 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 27%
2025-09-05 11:53:43,141 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 11:53:43,141 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-05 11:53:43,141 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 11:53:43,141 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 11:53:43,141 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-05 11:53:43,141 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-John Lee
2025-09-05 11:53:43,141 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:53:43,141 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-David Smith
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6325039104_resume_10.pdf
2025-09-05 11:53:43,142 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 32%
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6341865472_resume_9.pdf
2025-09-05 11:53:43,142 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Michael Brown - 38%
2025-09-05 11:53:43,142 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 27%
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 399c9734
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-05 11:53:43,142 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_10.pdf
2025-09-05 11:53:43,142 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_9.pdf
2025-09-05 11:53:43,142 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-Olivia Taylor
2025-09-05 11:53:43,142 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-Michael Brown
2025-09-05 11:53:43,142 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-David Smith
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6375518208_resume_7.pdf
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6392344576_resume_6.pdf
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6358691840_resume_8.pdf
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-John Lee - 77%
2025-09-05 11:53:43,142 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-David Smith - 27%
2025-09-05 11:53:43,143 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_7.pdf
2025-09-05 11:53:43,143 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_6.pdf
2025-09-05 11:53:43,143 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_5.pdf
2025-09-05 11:53:43,143 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_10.pdf - success
2025-09-05 11:53:43,143 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_4.pdf
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 11:53:43,143 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_8.pdf
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-Michael Brown - 38%
2025-09-05 11:53:43,143 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_9.pdf - success
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-Olivia Taylor - 32%
2025-09-05 11:53:43,143 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_2.pdf
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:53:43,143 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_3.pdf
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6341865472_resume_4.pdf
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-David Smith - 27%
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 11:53:43,143 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6325039104_resume_5.pdf
2025-09-05 11:53:43,144 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_1.pdf
2025-09-05 11:53:43,144 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 11:53:43,144 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_8.pdf - success
2025-09-05 11:53:43,144 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6375518208_resume_2.pdf
2025-09-05 11:53:43,144 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 11:53:43,144 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6392344576_resume_3.pdf
2025-09-05 11:53:43,144 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_7.pdf - success
2025-09-05 11:53:43,144 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 11:53:43,144 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_6.pdf - success
2025-09-05 11:53:43,144 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6358691840_resume_1.pdf
2025-09-05 11:53:43,144 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 11:53:43,144 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 11:53:43,144 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 11:53:43,144 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 11:53:43,144 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 11:53:43,144 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 11:53:43,144 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 11:53:43,144 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 11:53:43,144 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 11:53:43,144 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 11:53:43,145 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 11:53:43,146 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 11:53:43,146 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 11:53:43,147 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 11:53:43,147 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 11:53:43,147 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 11:53:43,147 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 11:53:43,147 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 11:53:43,147 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 11:53:43,148 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 11:53:43,150 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 1088 characters
2025-09-05 11:53:43,150 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 11:53:43,151 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 889 characters
2025-09-05 11:53:43,151 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 11:53:43,153 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 902 characters
2025-09-05 11:53:43,153 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 11:53:43,153 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:53:43,153 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:53:43,153 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:53:43,154 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Michael Brown - 36%
2025-09-05 11:53:43,157 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 79%
2025-09-05 11:53:43,157 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-05 11:53:43,157 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 859 characters
2025-09-05 11:53:43,157 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 72%
2025-09-05 11:53:43,157 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 399c9734
2025-09-05 11:53:43,157 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 922 characters
2025-09-05 11:53:43,157 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-Alice Smith
2025-09-05 11:53:43,157 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 11:53:43,157 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-05 11:53:43,157 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-Michael Brown
2025-09-05 11:53:43,158 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 11:53:43,158 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6341865472_resume_4.pdf
2025-09-05 11:53:43,158 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-John Lee
2025-09-05 11:53:43,158 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6375518208_resume_2.pdf
2025-09-05 11:53:43,158 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:53:43,158 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_4.pdf
2025-09-05 11:53:43,158 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6392344576_resume_3.pdf
2025-09-05 11:53:43,158 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 77%
2025-09-05 11:53:43,158 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_2.pdf
2025-09-05 11:53:43,158 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 11:53:43,158 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-05 11:53:43,158 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 11:53:43,158 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 11:53:43,158 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_3.pdf
2025-09-05 11:53:43,158 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-Alice Smith - 79%
2025-09-05 11:53:43,158 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-Alice Smith
2025-09-05 11:53:43,158 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 36%
2025-09-05 11:53:43,159 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-Michael Brown - 36%
2025-09-05 11:53:43,159 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 11:53:43,159 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6358691840_resume_1.pdf
2025-09-05 11:53:43,159 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-05 11:53:43,159 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-John Lee - 72%
2025-09-05 11:53:43,159 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-Isabella Martinez
2025-09-05 11:53:43,159 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_1.pdf
2025-09-05 11:53:43,159 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_115343_6325039104_resume_5.pdf
2025-09-05 11:53:43,159 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 11:53:43,159 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-Alice Smith - 77%
2025-09-05 11:53:43,159 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_5.pdf
2025-09-05 11:53:43,159 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 11:53:43,159 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-Isabella Martinez - 36%
2025-09-05 11:53:43,159 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_5.pdf - success
2025-09-05 11:53:43,159 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_4.pdf - success
2025-09-05 11:53:43,159 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_3.pdf - success
2025-09-05 11:53:43,159 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_2.pdf - success
2025-09-05 11:53:43,159 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-05 11:53:43,159 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-05 11:53:43,159 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-05 11:53:43,159 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 11:53:43,159 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Alice Smith with 79% match
2025-09-05 11:53:43,159 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 11:53:43,159 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 18274 characters
2025-09-05 11:53:43,160 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 19843 bytes
2025-09-05 11:53:43,160 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 11:53:43] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-05 12:02:10,684 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-05 12:02:10,685 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-05 12:02:10,688 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-05 12:02:10,689 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 12:02:10] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-05 12:02:10,715 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-05 12:02:10,716 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757044132.2406485-23730-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:48:52 GMT'}
2025-09-05 12:02:10,718 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23517 bytes
2025-09-05 12:02:10,720 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-05 12:02:10,720 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757044373.493878-50315-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 03:52:53 GMT'}
2025-09-05 12:02:10,720 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 12:02:10] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-05 12:02:10,721 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 50206 bytes
2025-09-05 12:02:10,722 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 12:02:10] "GET /static/script.js HTTP/1.1" 200 -
2025-09-05 12:02:10,796 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-05 12:02:10,796 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 12:02:10,797 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-05 12:02:10,798 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-05 12:02:10,799 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 12:02:10] "GET /api/health HTTP/1.1" 200 -
2025-09-05 12:02:17,107 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-05 12:02:17,107 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '25543', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryWBrpLqoCb1d38BYL', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-05 12:02:17,107 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryWBrpLqoCb1d38BYL
2025-09-05 12:02:17,107 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 25543
2025-09-05 12:02:17,110 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_5.pdf', 'resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 12:02:17,111 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[11 chars]'}
2025-09-05 12:02:17,111 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-05 12:02:17,111 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 11, Mock: True
2025-09-05 12:02:17,111 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_5.pdf', 'resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-05 12:02:17,111 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-05 12:02:17,114 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-05 12:02:17,114 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_5.pdf
2025-09-05 12:02:17,114 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_10.pdf
2025-09-05 12:02:17,115 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_9.pdf
2025-09-05 12:02:17,115 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 12:02:17,115 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_8.pdf
2025-09-05 12:02:17,115 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_7.pdf
2025-09-05 12:02:17,116 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-05 12:02:17,116 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 12:02:17,116 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 12:02:17,116 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 12:02:17,116 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 12:02:17,116 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 12:02:17,116 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 12:02:17,116 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 12:02:17,116 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6325039104_resume_5.pdf
2025-09-05 12:02:17,116 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 12:02:17,116 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 12:02:17,116 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6341865472_resume_10.pdf
2025-09-05 12:02:17,117 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6358691840_resume_9.pdf
2025-09-05 12:02:17,117 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6375518208_resume_8.pdf
2025-09-05 12:02:17,117 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6392344576_resume_7.pdf
2025-09-05 12:02:17,118 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 12:02:17,118 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 12:02:17,118 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 12:02:17,118 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 12:02:17,118 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 12:02:17,118 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 12:02:17,119 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 12:02:17,118 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 12:02:17,119 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 12:02:17,118 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 12:02:17,121 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 12:02:17,126 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 12:02:17,126 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 12:02:17,126 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 12:02:17,126 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 12:02:17,127 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 12:02:17,127 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 12:02:17,128 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 12:02:17,132 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 12:02:17,133 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 870 characters
2025-09-05 12:02:17,135 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 922 characters
2025-09-05 12:02:17,135 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 12:02:17,139 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 1093 characters
2025-09-05 12:02:17,139 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 12:02:17,140 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 12:02:17,142 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 1125 characters
2025-09-05 12:02:17,143 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 12:02:17,145 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 1070 characters
2025-09-05 12:02:17,145 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 12:02:17,146 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 12:02:17,146 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 12:02:17,146 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alex Johnson - 60%
2025-09-05 12:02:17,146 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: b1f5815d
2025-09-05 12:02:17,146 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-Alex Johnson
2025-09-05 12:02:17,146 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6325039104_resume_5.pdf
2025-09-05 12:02:17,147 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 12:02:17,147 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 12:02:17,147 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 12:02:17,147 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_5.pdf
2025-09-05 12:02:17,147 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 86%
2025-09-05 12:02:17,147 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 80%
2025-09-05 12:02:17,147 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 76%
2025-09-05 12:02:17,147 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 12:02:17,147 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 12:02:17,148 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-05 12:02:17,148 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-05 12:02:17,148 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-05 12:02:17,148 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 88%
2025-09-05 12:02:17,148 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-Alex Johnson - 60%
2025-09-05 12:02:17,148 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-Emily Miller
2025-09-05 12:02:17,148 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-John Lee
2025-09-05 12:02:17,148 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-Alice Lee
2025-09-05 12:02:17,148 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-05 12:02:17,148 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6325039104] Starting processing file: resume_6.pdf
2025-09-05 12:02:17,148 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_5.pdf - success
2025-09-05 12:02:17,148 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6341865472_resume_10.pdf
2025-09-05 12:02:17,148 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6392344576_resume_7.pdf
2025-09-05 12:02:17,148 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6358691840_resume_9.pdf
2025-09-05 12:02:17,148 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-Emily Miller
2025-09-05 12:02:17,148 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6325039104] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 12:02:17,148 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6375518208_resume_8.pdf
2025-09-05 12:02:17,148 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_7.pdf
2025-09-05 12:02:17,149 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_9.pdf
2025-09-05 12:02:17,149 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_10.pdf
2025-09-05 12:02:17,149 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6325039104] Validating file type...
2025-09-05 12:02:17,149 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 12:02:17,149 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_8.pdf
2025-09-05 12:02:17,149 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 12:02:17,149 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 12:02:17,149 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6325039104] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6325039104_resume_6.pdf
2025-09-05 12:02:17,149 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-John Lee - 80%
2025-09-05 12:02:17,149 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 12:02:17,149 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-Alice Lee - 76%
2025-09-05 12:02:17,149 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-Emily Miller - 86%
2025-09-05 12:02:17,149 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6392344576] Starting processing file: resume_4.pdf
2025-09-05 12:02:17,149 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-Emily Miller - 88%
2025-09-05 12:02:17,149 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6358691840] Starting processing file: resume_3.pdf
2025-09-05 12:02:17,149 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6341865472] Starting processing file: resume_2.pdf
2025-09-05 12:02:17,149 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6392344576] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 12:02:17,149 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6375518208] Starting processing file: resume_1.pdf
2025-09-05 12:02:17,149 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_10.pdf - success
2025-09-05 12:02:17,149 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6358691840] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 12:02:17,150 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6341865472] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 12:02:17,150 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6392344576] Validating file type...
2025-09-05 12:02:17,150 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6325039104] File saved successfully
2025-09-05 12:02:17,150 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_9.pdf - success
2025-09-05 12:02:17,150 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6375518208] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-05 12:02:17,150 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6358691840] Validating file type...
2025-09-05 12:02:17,151 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6358691840] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6358691840_resume_3.pdf
2025-09-05 12:02:17,150 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6392344576] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6392344576_resume_4.pdf
2025-09-05 12:02:17,150 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6325039104] Validating PDF structure...
2025-09-05 12:02:17,150 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_8.pdf - success
2025-09-05 12:02:17,150 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6375518208] Validating file type...
2025-09-05 12:02:17,150 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6341865472] Validating file type...
2025-09-05 12:02:17,151 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_7.pdf - success
2025-09-05 12:02:17,151 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6375518208] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6375518208_resume_1.pdf
2025-09-05 12:02:17,151 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6325039104] PDF validation passed
2025-09-05 12:02:17,152 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6341865472] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6341865472_resume_2.pdf
2025-09-05 12:02:17,152 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6358691840] File saved successfully
2025-09-05 12:02:17,152 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6392344576] File saved successfully
2025-09-05 12:02:17,152 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6325039104] Extracting text from PDF...
2025-09-05 12:02:17,152 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6358691840] Validating PDF structure...
2025-09-05 12:02:17,152 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6392344576] Validating PDF structure...
2025-09-05 12:02:17,152 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6375518208] File saved successfully
2025-09-05 12:02:17,152 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6375518208] Validating PDF structure...
2025-09-05 12:02:17,152 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6341865472] File saved successfully
2025-09-05 12:02:17,152 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6341865472] Validating PDF structure...
2025-09-05 12:02:17,153 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6358691840] PDF validation passed
2025-09-05 12:02:17,154 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6325039104] Text extracted successfully - 873 characters
2025-09-05 12:02:17,155 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6392344576] PDF validation passed
2025-09-05 12:02:17,155 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6358691840] Extracting text from PDF...
2025-09-05 12:02:17,155 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6325039104] Mock mode - attempting to use cached response
2025-09-05 12:02:17,155 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6392344576] Extracting text from PDF...
2025-09-05 12:02:17,155 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6341865472] PDF validation passed
2025-09-05 12:02:17,155 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6375518208] PDF validation passed
2025-09-05 12:02:17,157 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 12:02:17,158 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6341865472] Extracting text from PDF...
2025-09-05 12:02:17,160 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6375518208] Extracting text from PDF...
2025-09-05 12:02:17,160 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6392344576] Text extracted successfully - 889 characters
2025-09-05 12:02:17,161 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 38%
2025-09-05 12:02:17,163 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6358691840] Text extracted successfully - 902 characters
2025-09-05 12:02:17,163 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6392344576] Mock mode - attempting to use cached response
2025-09-05 12:02:17,163 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-05 12:02:17,163 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6358691840] Mock mode - attempting to use cached response
2025-09-05 12:02:17,164 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6325039104] Using cached response: Mock-Isabella Martinez
2025-09-05 12:02:17,165 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6341865472] Text extracted successfully - 1088 characters
2025-09-05 12:02:17,166 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 12:02:17,166 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 12:02:17,167 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6375518208] Text extracted successfully - 859 characters
2025-09-05 12:02:17,167 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6325039104] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6325039104_resume_6.pdf
2025-09-05 12:02:17,167 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6341865472] Mock mode - attempting to use cached response
2025-09-05 12:02:17,167 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 31%
2025-09-05 12:02:17,167 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 32%
2025-09-05 12:02:17,167 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6375518208] Mock mode - attempting to use cached response
2025-09-05 12:02:17,167 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-05 12:02:17,168 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-05 12:02:17,168 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6325039104] File processing completed successfully for: resume_6.pdf
2025-09-05 12:02:17,168 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 12:02:17,168 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6392344576] Using cached response: Mock-Daniel Wilson
2025-09-05 12:02:17,168 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6358691840] Using cached response: Mock-David Smith
2025-09-05 12:02:17,168 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-05 12:02:17,168 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6325039104] Mock result - not saving to cache
2025-09-05 12:02:17,168 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 82%
2025-09-05 12:02:17,168 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6392344576] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6392344576_resume_4.pdf
2025-09-05 12:02:17,168 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6358691840] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6358691840_resume_3.pdf
2025-09-05 12:02:17,168 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 72%
2025-09-05 12:02:17,168 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6325039104] Returning result: Mock-Isabella Martinez - 38%
2025-09-05 12:02:17,168 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-05 12:02:17,168 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-05 12:02:17,168 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6392344576] File processing completed successfully for: resume_4.pdf
2025-09-05 12:02:17,168 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6358691840] File processing completed successfully for: resume_3.pdf
2025-09-05 12:02:17,168 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6341865472] Using cached response: Mock-Olivia Miller
2025-09-05 12:02:17,168 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_6.pdf - success
2025-09-05 12:02:17,168 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6375518208] Using cached response: Mock-Alice Smith
2025-09-05 12:02:17,168 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6392344576] Mock result - not saving to cache
2025-09-05 12:02:17,168 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6358691840] Mock result - not saving to cache
2025-09-05 12:02:17,169 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6341865472] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6341865472_resume_2.pdf
2025-09-05 12:02:17,169 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6375518208] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250905_120217_6375518208_resume_1.pdf
2025-09-05 12:02:17,169 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6392344576] Returning result: Mock-Daniel Wilson - 31%
2025-09-05 12:02:17,169 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6358691840] Returning result: Mock-David Smith - 32%
2025-09-05 12:02:17,169 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_4.pdf - success
2025-09-05 12:02:17,169 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6375518208] File processing completed successfully for: resume_1.pdf
2025-09-05 12:02:17,169 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6341865472] File processing completed successfully for: resume_2.pdf
2025-09-05 12:02:17,169 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_3.pdf - success
2025-09-05 12:02:17,169 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6375518208] Mock result - not saving to cache
2025-09-05 12:02:17,169 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6341865472] Mock result - not saving to cache
2025-09-05 12:02:17,169 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6375518208] Returning result: Mock-Alice Smith - 72%
2025-09-05 12:02:17,169 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6341865472] Returning result: Mock-Olivia Miller - 82%
2025-09-05 12:02:17,169 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_2.pdf - success
2025-09-05 12:02:17,169 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-05 12:02:17,169 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-05 12:02:17,169 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-05 12:02:17,169 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-05 12:02:17,169 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Emily Miller with 88% match
2025-09-05 12:02:17,169 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-05 12:02:17,170 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 18472 characters
2025-09-05 12:02:17,170 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 20086 bytes
2025-09-05 12:02:17,170 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [05/Sep/2025 12:02:17] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:39:43,017 - werkzeug - INFO - [_internal.py:97] - _log() - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.31.75:8000
2025-09-07 22:39:43,018 - werkzeug - INFO - [_internal.py:97] - _log() - [33mPress CTRL+C to quit[0m
2025-09-07 22:39:43,020 - werkzeug - INFO - [_internal.py:97] - _log() -  * Restarting with stat
2025-09-07 22:39:43,282 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-07 22:39:43,287 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 580-702-148
2025-09-07 22:39:43,412 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:39:43,412 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-07 22:39:43,417 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:39:43,418 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:43] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:39:43,430 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:39:43,431 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757044914.25801-23517-2280592960"', 'If-Modified-Since': 'Fri, 05 Sep 2025 04:01:54 GMT'}
2025-09-07 22:39:43,434 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:39:43,434 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757044914.2629929-50206-1898780101"', 'If-Modified-Since': 'Fri, 05 Sep 2025 04:01:54 GMT'}
2025-09-07 22:39:43,435 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23517 bytes
2025-09-07 22:39:43,436 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 50206 bytes
2025-09-07 22:39:43,436 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:43] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 22:39:43,437 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:43] "GET /static/script.js HTTP/1.1" 200 -
2025-09-07 22:39:43,479 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:39:43,479 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:39:43,479 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:39:43,479 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:39:43,479 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:43] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:39:43,513 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/favicon.ico
2025-09-07 22:39:43,513 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'image', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:39:43,513 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 22:39:43,513 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:43] "[33mGET /favicon.ico HTTP/1.1[0m" 404 -
2025-09-07 22:39:44,880 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:39:44,881 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-07 22:39:44,882 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:39:44,883 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:44] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:39:44,897 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:39:44,897 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757255525.3955252-23517-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:32:05 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:39:44,898 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:39:44,900 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757255524.8203425-50206-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:32:04 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:39:44,902 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 50206 bytes
2025-09-07 22:39:44,902 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23517 bytes
2025-09-07 22:39:44,903 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:44] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:39:44,903 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:44] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:39:44,909 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:39:44,909 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:39:44,910 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:39:44,910 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:39:44,910 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:44] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:39:52,002 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:39:52,002 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-07 22:39:52,003 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:39:52,003 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:52] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:39:52,016 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:39:52,017 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757255525.3955252-23517-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:32:05 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:39:52,018 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23517 bytes
2025-09-07 22:39:52,019 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:39:52,019 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:52] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:39:52,020 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757255524.8203425-50206-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:32:04 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:39:52,021 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 50206 bytes
2025-09-07 22:39:52,022 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:52] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:39:52,030 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:39:52,030 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:39:52,030 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:39:52,031 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:39:52,031 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:52] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:39:58,406 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:39:58,406 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '7819', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary85xfx7K4lHDQot3k', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:39:58,410 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundary85xfx7K4lHDQot3k
2025-09-07 22:39:58,410 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 7819
2025-09-07 22:39:58,420 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf']
2025-09-07 22:39:58,420 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 22:39:58,420 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:39:58,420 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 3, Job desc length: 17, Mock: True
2025-09-07 22:39:58,420 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf']
2025-09-07 22:39:58,420 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 3 workers for 3 files
2025-09-07 22:39:58,420 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:39:58,420 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6196211712] Starting processing file: resume_10.pdf
2025-09-07 22:39:58,421 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6196211712] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:39:58,421 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6213038080] Starting processing file: resume_9.pdf
2025-09-07 22:39:58,421 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6196211712] Validating file type...
2025-09-07 22:39:58,421 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6229864448] Starting processing file: resume_8.pdf
2025-09-07 22:39:58,421 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 3 tasks submitted to thread pool
2025-09-07 22:39:58,421 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6213038080] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:39:58,421 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6196211712] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_223958_6196211712_resume_10.pdf
2025-09-07 22:39:58,421 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6229864448] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:39:58,421 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6213038080] Validating file type...
2025-09-07 22:39:58,421 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6229864448] Validating file type...
2025-09-07 22:39:58,421 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6213038080] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_223958_6213038080_resume_9.pdf
2025-09-07 22:39:58,422 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6229864448] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_223958_6229864448_resume_8.pdf
2025-09-07 22:39:58,422 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6196211712] File saved successfully
2025-09-07 22:39:58,422 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6196211712] Validating PDF structure...
2025-09-07 22:39:58,422 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6213038080] File saved successfully
2025-09-07 22:39:58,422 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6229864448] File saved successfully
2025-09-07 22:39:58,422 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6213038080] Validating PDF structure...
2025-09-07 22:39:58,427 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6196211712] PDF validation passed
2025-09-07 22:39:58,427 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6229864448] Validating PDF structure...
2025-09-07 22:39:58,427 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6196211712] Extracting text from PDF...
2025-09-07 22:39:58,428 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6229864448] PDF validation passed
2025-09-07 22:39:58,428 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6229864448] Extracting text from PDF...
2025-09-07 22:39:58,428 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6213038080] PDF validation passed
2025-09-07 22:39:58,429 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6213038080] Extracting text from PDF...
2025-09-07 22:39:58,430 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6196211712] Text extracted successfully - 1093 characters
2025-09-07 22:39:58,430 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6196211712] Mock mode - attempting to use cached response
2025-09-07 22:39:58,433 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6229864448] Text extracted successfully - 1125 characters
2025-09-07 22:39:58,435 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6229864448] Mock mode - attempting to use cached response
2025-09-07 22:39:58,435 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6213038080] Text extracted successfully - 870 characters
2025-09-07 22:39:58,435 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:39:58,435 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6213038080] Mock mode - attempting to use cached response
2025-09-07 22:39:58,436 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:39:58,436 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 20%
2025-09-07 22:39:58,436 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 76%
2025-09-07 22:39:58,436 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-07 22:39:58,436 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:39:58,436 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-07 22:39:58,436 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6196211712] Using cached response: Mock-Sophia Lee
2025-09-07 22:39:58,436 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 33%
2025-09-07 22:39:58,436 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6229864448] Using cached response: Mock-John Lee
2025-09-07 22:39:58,436 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6196211712] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_223958_6196211712_resume_10.pdf
2025-09-07 22:39:58,436 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 22:39:58,436 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6229864448] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_223958_6229864448_resume_8.pdf
2025-09-07 22:39:58,436 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6213038080] Using cached response: Mock-James Anderson
2025-09-07 22:39:58,436 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6213038080] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_223958_6213038080_resume_9.pdf
2025-09-07 22:39:58,436 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6196211712] File processing completed successfully for: resume_10.pdf
2025-09-07 22:39:58,436 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6229864448] File processing completed successfully for: resume_8.pdf
2025-09-07 22:39:58,436 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6196211712] Mock result - not saving to cache
2025-09-07 22:39:58,436 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6213038080] File processing completed successfully for: resume_9.pdf
2025-09-07 22:39:58,436 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6229864448] Mock result - not saving to cache
2025-09-07 22:39:58,437 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6196211712] Returning result: Mock-Sophia Lee - 20%
2025-09-07 22:39:58,437 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6213038080] Mock result - not saving to cache
2025-09-07 22:39:58,437 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6229864448] Returning result: Mock-John Lee - 76%
2025-09-07 22:39:58,437 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/3 completed: resume_10.pdf - success
2025-09-07 22:39:58,437 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6213038080] Returning result: Mock-James Anderson - 33%
2025-09-07 22:39:58,437 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/3 completed: resume_9.pdf - success
2025-09-07 22:39:58,437 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/3 completed: resume_8.pdf - success
2025-09-07 22:39:58,437 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 3 results collected
2025-09-07 22:39:58,437 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 3, Failed: 0
2025-09-07 22:39:58,437 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:39:58,437 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-John Lee with 76% match
2025-09-07 22:39:58,437 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:39:58,437 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 5517 characters
2025-09-07 22:39:58,437 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 6012 bytes
2025-09-07 22:39:58,437 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:39:58] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:40:04,096 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:40:04,097 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-07 22:40:04,097 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:40:04,098 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:40:04] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:40:04,117 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:40:04,120 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:40:04,120 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757255525.3955252-23517-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:32:05 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:40:04,121 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757255524.8203425-50206-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:32:04 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:40:04,122 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23517 bytes
2025-09-07 22:40:04,122 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 50206 bytes
2025-09-07 22:40:04,122 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:40:04] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:40:04,122 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:40:04] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:40:04,126 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:40:04,126 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:40:04,126 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:40:04,126 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:40:04,126 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:40:04] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:42:01,424 - werkzeug - INFO - [_internal.py:97] - _log() - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.31.75:8000
2025-09-07 22:42:01,424 - werkzeug - INFO - [_internal.py:97] - _log() - [33mPress CTRL+C to quit[0m
2025-09-07 22:42:01,424 - werkzeug - INFO - [_internal.py:97] - _log() -  * Restarting with stat
2025-09-07 22:42:01,709 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-07 22:42:01,714 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 580-702-148
2025-09-07 22:42:03,362 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:42:03,362 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-07 22:42:03,366 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:42:03,366 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:42:03] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:42:03,384 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:42:03,385 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757255525.3955252-23517-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:32:05 GMT'}
2025-09-07 22:42:03,385 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:42:03,386 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23517 bytes
2025-09-07 22:42:03,386 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757255524.8203425-50206-1898780101"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:32:04 GMT'}
2025-09-07 22:42:03,386 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:42:03] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:42:03,387 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 50206 bytes
2025-09-07 22:42:03,389 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:42:03] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:42:03,435 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:42:03,435 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:42:03,435 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:42:03,436 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:42:03,436 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:42:03] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:43:02,675 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:43:02,675 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757040136.1003284-10876-2258441760"', 'If-Modified-Since': 'Fri, 05 Sep 2025 02:42:16 GMT'}
2025-09-07 22:43:02,676 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 11561 bytes
2025-09-07 22:43:02,677 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:43:02] "GET / HTTP/1.1" 200 -
2025-09-07 22:43:02,696 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:43:02,697 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757255525.3955252-23517-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:32:05 GMT'}
2025-09-07 22:43:02,701 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 24550 bytes
2025-09-07 22:43:02,702 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:43:02,703 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:43:02] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 22:43:02,704 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757255524.8203425-50206-1898780101"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:32:04 GMT'}
2025-09-07 22:43:02,705 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 50206 bytes
2025-09-07 22:43:02,706 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:43:02] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:43:02,728 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:43:02,728 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:43:02,729 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:43:02,729 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:43:02,729 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:43:02] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:43:17,508 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:43:17,510 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '25549', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryEBM1hBaxQrXU6Sdi', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:43:17,510 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryEBM1hBaxQrXU6Sdi
2025-09-07 22:43:17,511 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 25549
2025-09-07 22:43:17,513 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-07 22:43:17,513 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 22:43:17,513 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:43:17,513 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 17, Mock: True
2025-09-07 22:43:17,513 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-07 22:43:17,513 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-07 22:43:17,513 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:43:17,514 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_10.pdf
2025-09-07 22:43:17,514 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_9.pdf
2025-09-07 22:43:17,515 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:17,515 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_8.pdf
2025-09-07 22:43:17,522 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:43:17,515 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:17,523 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:17,523 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6233436160_resume_9.pdf
2025-09-07 22:43:17,523 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_7.pdf
2025-09-07 22:43:17,523 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:43:17,524 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6216609792_resume_10.pdf
2025-09-07 22:43:17,523 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_6.pdf
2025-09-07 22:43:17,524 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:17,524 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:43:17,524 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6283915264_resume_6.pdf
2025-09-07 22:43:17,523 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:43:17,524 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6250262528_resume_8.pdf
2025-09-07 22:43:17,523 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-07 22:43:17,524 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:17,524 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:43:17,525 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:43:17,524 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:43:17,525 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:43:17,525 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:43:17,525 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:43:17,531 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:43:17,531 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:43:17,531 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6267088896_resume_7.pdf
2025-09-07 22:43:17,531 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:43:17,531 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:43:17,531 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:43:17,532 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:43:17,532 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:43:17,532 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:43:17,532 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:43:17,533 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:43:17,535 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:43:17,535 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:43:17,535 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 1093 characters
2025-09-07 22:43:17,533 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:43:17,535 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:43:17,536 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:43:17,536 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:43:17,537 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:17,540 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 1125 characters
2025-09-07 22:43:17,543 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 72%
2025-09-07 22:43:17,543 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 870 characters
2025-09-07 22:43:17,546 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1070 characters
2025-09-07 22:43:17,547 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 873 characters
2025-09-07 22:43:17,547 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:43:17,547 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-07 22:43:17,547 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:43:17,547 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:43:17,547 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:43:17,547 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Alice Smith
2025-09-07 22:43:17,548 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:17,548 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:17,548 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6216609792_resume_10.pdf
2025-09-07 22:43:17,548 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:17,549 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Michael Brown - 36%
2025-09-07 22:43:17,549 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 399c9734
2025-09-07 22:43:17,549 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Michael Brown
2025-09-07 22:43:17,549 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6267088896_resume_7.pdf
2025-09-07 22:43:17,549 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_7.pdf
2025-09-07 22:43:17,549 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:43:17,549 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Michael Brown - 36%
2025-09-07 22:43:17,548 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:17,549 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_10.pdf
2025-09-07 22:43:17,550 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:43:17,548 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 79%
2025-09-07 22:43:17,550 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 22:43:17,550 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 22%
2025-09-07 22:43:17,549 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 27%
2025-09-07 22:43:17,550 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_5.pdf
2025-09-07 22:43:17,550 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:17,550 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:43:17,550 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6267088896_resume_5.pdf
2025-09-07 22:43:17,550 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-07 22:43:17,550 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Alice Lee
2025-09-07 22:43:17,551 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Maria Gonzalez
2025-09-07 22:43:17,550 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 22:43:17,551 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6250262528_resume_8.pdf
2025-09-07 22:43:17,550 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Alice Smith - 72%
2025-09-07 22:43:17,551 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6233436160_resume_9.pdf
2025-09-07 22:43:17,551 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Emily Davis
2025-09-07 22:43:17,551 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_4.pdf
2025-09-07 22:43:17,551 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_10.pdf - success
2025-09-07 22:43:17,551 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_8.pdf
2025-09-07 22:43:17,551 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:43:17,551 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6283915264_resume_6.pdf
2025-09-07 22:43:17,551 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_9.pdf
2025-09-07 22:43:17,551 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:17,551 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:43:17,551 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:43:17,552 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:43:17,552 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_6.pdf
2025-09-07 22:43:17,552 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:43:17,552 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Alice Lee - 79%
2025-09-07 22:43:17,552 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Maria Gonzalez - 27%
2025-09-07 22:43:17,552 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:43:17,552 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6216609792_resume_4.pdf
2025-09-07 22:43:17,552 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_3.pdf
2025-09-07 22:43:17,552 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_2.pdf
2025-09-07 22:43:17,552 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_9.pdf - success
2025-09-07 22:43:17,552 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Emily Davis - 22%
2025-09-07 22:43:17,553 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:43:17,553 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:17,553 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:43:17,553 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:17,553 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_8.pdf - success
2025-09-07 22:43:17,553 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_1.pdf
2025-09-07 22:43:17,553 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:43:17,553 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:43:17,553 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:43:17,553 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:43:17,553 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_7.pdf - success
2025-09-07 22:43:17,553 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:17,553 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6250262528_resume_3.pdf
2025-09-07 22:43:17,553 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6233436160_resume_2.pdf
2025-09-07 22:43:17,553 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_6.pdf - success
2025-09-07 22:43:17,554 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:43:17,556 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:43:17,556 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 922 characters
2025-09-07 22:43:17,556 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6283915264_resume_1.pdf
2025-09-07 22:43:17,556 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:43:17,556 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:43:17,556 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:43:17,556 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:43:17,556 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:43:17,556 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:43:17,556 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:43:17,556 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:43:17,557 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:43:17,557 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:43:17,557 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:43:17,557 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:17,557 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:43:17,560 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:43:17,560 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 889 characters
2025-09-07 22:43:17,560 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 70%
2025-09-07 22:43:17,560 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:43:17,560 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:43:17,560 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:43:17,562 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 902 characters
2025-09-07 22:43:17,562 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-John Lee
2025-09-07 22:43:17,562 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:43:17,562 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6267088896_resume_5.pdf
2025-09-07 22:43:17,562 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:17,563 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:17,564 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_5.pdf
2025-09-07 22:43:17,566 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 1088 characters
2025-09-07 22:43:17,566 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 40%
2025-09-07 22:43:17,566 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:43:17,566 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 72%
2025-09-07 22:43:17,566 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-07 22:43:17,566 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Alice Smith
2025-09-07 22:43:17,566 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6250262528_resume_3.pdf
2025-09-07 22:43:17,567 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:17,567 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 73%
2025-09-07 22:43:17,567 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 22:43:17,567 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Alice Lee
2025-09-07 22:43:17,567 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6233436160_resume_2.pdf
2025-09-07 22:43:17,566 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:43:17,567 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-John Lee - 70%
2025-09-07 22:43:17,566 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 859 characters
2025-09-07 22:43:17,567 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:43:17,566 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 22:43:17,567 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Isabella Martinez
2025-09-07 22:43:17,567 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6216609792_resume_4.pdf
2025-09-07 22:43:17,567 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_2.pdf
2025-09-07 22:43:17,567 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:43:17,568 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Alice Lee - 73%
2025-09-07 22:43:17,568 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_4.pdf
2025-09-07 22:43:17,568 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:43:17,567 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_5.pdf - success
2025-09-07 22:43:17,568 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Isabella Martinez - 40%
2025-09-07 22:43:17,567 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:17,567 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_3.pdf
2025-09-07 22:43:17,568 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_4.pdf - success
2025-09-07 22:43:17,568 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 81%
2025-09-07 22:43:17,568 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:43:17,568 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 22:43:17,568 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Alice Smith - 72%
2025-09-07 22:43:17,568 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Alice Lee
2025-09-07 22:43:17,568 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224317_6283915264_resume_1.pdf
2025-09-07 22:43:17,568 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_3.pdf - success
2025-09-07 22:43:17,568 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_2.pdf - success
2025-09-07 22:43:17,568 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_1.pdf
2025-09-07 22:43:17,568 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:43:17,568 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Alice Lee - 81%
2025-09-07 22:43:17,568 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-07 22:43:17,568 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-07 22:43:17,568 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-07 22:43:17,568 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:43:17,568 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Alice Lee with 81% match
2025-09-07 22:43:17,568 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:43:17,569 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 18884 characters
2025-09-07 22:43:17,569 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 20485 bytes
2025-09-07 22:43:17,569 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:43:17] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:43:26,888 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:43:26,889 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256179.4001029-11561-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:42:59 GMT'}
2025-09-07 22:43:26,890 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 10876 bytes
2025-09-07 22:43:26,890 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:43:26] "GET / HTTP/1.1" 200 -
2025-09-07 22:43:26,902 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:43:26,902 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256179.400121-24550-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:42:59 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:43:26,903 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:43:26,903 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757255524.8203425-50206-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:32:04 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:43:26,904 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23517 bytes
2025-09-07 22:43:26,904 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:43:26] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 22:43:26,904 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 50206 bytes
2025-09-07 22:43:26,905 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:43:26] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:43:26,916 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:43:26,916 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:43:26,916 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:43:26,916 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:43:26,916 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:43:26] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:43:33,589 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:43:33,589 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '25549', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryACfAl05wMQmuOBTa', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:43:33,589 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryACfAl05wMQmuOBTa
2025-09-07 22:43:33,589 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 25549
2025-09-07 22:43:33,591 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_2.pdf', 'resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_1.pdf']
2025-09-07 22:43:33,591 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 22:43:33,591 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:43:33,591 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 17, Mock: True
2025-09-07 22:43:33,591 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_2.pdf', 'resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_1.pdf']
2025-09-07 22:43:33,591 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-07 22:43:33,591 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:43:33,592 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_2.pdf
2025-09-07 22:43:33,592 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:33,592 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_10.pdf
2025-09-07 22:43:33,592 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_9.pdf
2025-09-07 22:43:33,592 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:43:33,592 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_8.pdf
2025-09-07 22:43:33,592 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:33,592 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_7.pdf
2025-09-07 22:43:33,592 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-07 22:43:33,592 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:33,593 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6216609792_resume_2.pdf
2025-09-07 22:43:33,593 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:33,593 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:43:33,593 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:33,593 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:43:33,593 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6283915264_resume_7.pdf
2025-09-07 22:43:33,593 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:43:33,594 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6267088896_resume_8.pdf
2025-09-07 22:43:33,593 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:43:33,593 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6233436160_resume_10.pdf
2025-09-07 22:43:33,595 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:43:33,596 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:43:33,596 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6250262528_resume_9.pdf
2025-09-07 22:43:33,596 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:43:33,598 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:43:33,597 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:43:33,597 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:43:33,597 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:43:33,599 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:43:33,599 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:43:33,600 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:43:33,598 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:43:33,601 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:43:33,601 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:43:33,601 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:43:33,604 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:43:33,611 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:43:33,611 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 1070 characters
2025-09-07 22:43:33,613 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:43:33,614 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:43:33,615 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:43:33,617 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:43:33,618 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 1088 characters
2025-09-07 22:43:33,618 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:43:33,618 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:43:33,623 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1125 characters
2025-09-07 22:43:33,625 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:33,628 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 1093 characters
2025-09-07 22:43:33,629 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:43:33,629 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:33,630 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 38%
2025-09-07 22:43:33,631 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 870 characters
2025-09-07 22:43:33,631 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:43:33,631 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 27%
2025-09-07 22:43:33,631 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 22:43:33,632 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:33,632 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:43:33,632 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:43:33,632 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-James Anderson
2025-09-07 22:43:33,632 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:33,632 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 84%
2025-09-07 22:43:33,632 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Daniel Wilson
2025-09-07 22:43:33,632 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6283915264_resume_7.pdf
2025-09-07 22:43:33,632 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:33,632 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alex Johnson - 67%
2025-09-07 22:43:33,632 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:43:33,632 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6216609792_resume_2.pdf
2025-09-07 22:43:33,633 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 70%
2025-09-07 22:43:33,633 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-07 22:43:33,633 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: b1f5815d
2025-09-07 22:43:33,633 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Alice Smith
2025-09-07 22:43:33,633 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_2.pdf
2025-09-07 22:43:33,633 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Miller
2025-09-07 22:43:33,633 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_7.pdf
2025-09-07 22:43:33,633 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Alex Johnson
2025-09-07 22:43:33,633 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6250262528_resume_9.pdf
2025-09-07 22:43:33,633 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:43:33,633 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6267088896_resume_8.pdf
2025-09-07 22:43:33,633 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:43:33,633 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6233436160_resume_10.pdf
2025-09-07 22:43:33,633 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Daniel Wilson - 27%
2025-09-07 22:43:33,633 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_9.pdf
2025-09-07 22:43:33,633 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-James Anderson - 38%
2025-09-07 22:43:33,633 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_6.pdf
2025-09-07 22:43:33,633 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:43:33,633 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_10.pdf
2025-09-07 22:43:33,633 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_8.pdf
2025-09-07 22:43:33,634 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_5.pdf
2025-09-07 22:43:33,634 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_2.pdf - success
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Alice Smith - 70%
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:43:33,634 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_4.pdf
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Alex Johnson - 67%
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Miller - 84%
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6216609792_resume_6.pdf
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:43:33,634 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_3.pdf
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6250262528_resume_4.pdf
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6283915264_resume_5.pdf
2025-09-07 22:43:33,634 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_1.pdf
2025-09-07 22:43:33,635 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:33,634 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:43:33,635 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:43:33,635 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:43:33,634 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_10.pdf - success
2025-09-07 22:43:33,635 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:43:33,635 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:43:33,635 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:43:33,635 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6267088896_resume_1.pdf
2025-09-07 22:43:33,635 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:43:33,635 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_9.pdf - success
2025-09-07 22:43:33,635 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:43:33,635 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6233436160_resume_3.pdf
2025-09-07 22:43:33,635 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:43:33,636 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_8.pdf - success
2025-09-07 22:43:33,636 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:43:33,637 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:43:33,637 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:43:33,638 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_7.pdf - success
2025-09-07 22:43:33,638 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:43:33,638 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:43:33,638 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:43:33,638 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:43:33,638 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:43:33,639 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:43:33,639 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:43:33,641 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 873 characters
2025-09-07 22:43:33,642 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:43:33,642 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:43:33,643 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 889 characters
2025-09-07 22:43:33,646 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:43:33,645 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 922 characters
2025-09-07 22:43:33,646 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:33,646 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:43:33,643 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:43:33,647 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:43:33,647 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 28%
2025-09-07 22:43:33,647 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:43:33,647 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:33,647 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 28%
2025-09-07 22:43:33,647 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:33,647 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 22:43:33,647 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 22:43:33,647 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 72%
2025-09-07 22:43:33,651 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 902 characters
2025-09-07 22:43:33,651 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 859 characters
2025-09-07 22:43:33,651 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Emily Davis
2025-09-07 22:43:33,651 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-David Smith
2025-09-07 22:43:33,651 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-07 22:43:33,651 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:43:33,651 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:43:33,651 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6250262528_resume_4.pdf
2025-09-07 22:43:33,651 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6216609792_resume_6.pdf
2025-09-07 22:43:33,651 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-David Lee
2025-09-07 22:43:33,651 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:33,651 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:43:33,651 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_4.pdf
2025-09-07 22:43:33,651 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6283915264_resume_5.pdf
2025-09-07 22:43:33,652 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 35%
2025-09-07 22:43:33,652 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_6.pdf
2025-09-07 22:43:33,652 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 80%
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:43:33,652 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_5.pdf
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Emily Davis - 28%
2025-09-07 22:43:33,652 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-David Smith
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-David Smith - 28%
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:43:33,652 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Emily Taylor
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6233436160_resume_3.pdf
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-David Lee - 72%
2025-09-07 22:43:33,652 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_6.pdf - success
2025-09-07 22:43:33,652 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_5.pdf - success
2025-09-07 22:43:33,652 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_4.pdf - success
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224333_6267088896_resume_1.pdf
2025-09-07 22:43:33,652 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_3.pdf
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Emily Taylor - 80%
2025-09-07 22:43:33,652 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_1.pdf
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:43:33,652 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-David Smith - 35%
2025-09-07 22:43:33,653 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_3.pdf - success
2025-09-07 22:43:33,653 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-07 22:43:33,653 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-07 22:43:33,653 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-07 22:43:33,653 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:43:33,653 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Miller with 84% match
2025-09-07 22:43:33,653 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:43:33,654 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 18439 characters
2025-09-07 22:43:33,654 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 20027 bytes
2025-09-07 22:43:33,654 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:43:33] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:48:32,895 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:48:32,895 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:48:32,896 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:48:32,896 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:48:32] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:48:32,914 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:48:32,914 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250173-23517-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:48:32,915 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:48:32,915 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757255524.8203425-50206-1898780101"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:32:04 GMT'}
2025-09-07 22:48:32,916 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 53161 bytes
2025-09-07 22:48:32,916 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23733 bytes
2025-09-07 22:48:32,917 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:48:32] "GET /static/script.js HTTP/1.1" 200 -
2025-09-07 22:48:32,917 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:48:32] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 22:48:32,950 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:48:32,950 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:48:32,950 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:48:32,951 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:48:32,951 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:48:32] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:48:38,589 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:48:38,589 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '25549', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryBGWX56uKTpl4h5yp', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:48:38,589 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryBGWX56uKTpl4h5yp
2025-09-07 22:48:38,590 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 25549
2025-09-07 22:48:38,591 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-07 22:48:38,591 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 22:48:38,592 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:48:38,592 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 10, Job desc length: 17, Mock: True
2025-09-07 22:48:38,592 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf']
2025-09-07 22:48:38,592 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 10 files
2025-09-07 22:48:38,592 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:48:38,592 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_10.pdf
2025-09-07 22:48:38,592 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_9.pdf
2025-09-07 22:48:38,592 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_8.pdf
2025-09-07 22:48:38,592 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:48:38,592 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_7.pdf
2025-09-07 22:48:38,592 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_6.pdf
2025-09-07 22:48:38,592 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:48:38,592 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 10 tasks submitted to thread pool
2025-09-07 22:48:38,593 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:48:38,593 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:48:38,593 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:48:38,593 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:48:38,593 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:48:38,593 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:48:38,593 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6216609792_resume_10.pdf
2025-09-07 22:48:38,593 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:48:38,593 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6267088896_resume_7.pdf
2025-09-07 22:48:38,593 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:48:38,593 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6233436160_resume_9.pdf
2025-09-07 22:48:38,594 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6283915264_resume_6.pdf
2025-09-07 22:48:38,594 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:48:38,594 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:48:38,593 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6250262528_resume_8.pdf
2025-09-07 22:48:38,594 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:48:38,594 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:48:38,594 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:48:38,594 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:48:38,594 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:48:38,595 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:48:38,595 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:48:38,595 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:48:38,595 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:48:38,596 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:48:38,596 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:48:38,597 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:48:38,597 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:48:38,597 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:48:38,601 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:48:38,598 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:48:38,601 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 1093 characters
2025-09-07 22:48:38,598 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:48:38,603 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1070 characters
2025-09-07 22:48:38,605 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 873 characters
2025-09-07 22:48:38,605 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:48:38,605 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:48:38,606 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:48:38,606 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:48:38,606 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:48:38,609 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 870 characters
2025-09-07 22:48:38,609 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 84%
2025-09-07 22:48:38,610 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:48:38,612 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 30%
2025-09-07 22:48:38,612 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-07 22:48:38,613 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Maria Gonzalez
2025-09-07 22:48:38,613 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6267088896_resume_7.pdf
2025-09-07 22:48:38,612 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:48:38,612 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:48:38,613 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Olivia Miller
2025-09-07 22:48:38,610 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:48:38,612 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 1125 characters
2025-09-07 22:48:38,613 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_7.pdf
2025-09-07 22:48:38,613 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 32%
2025-09-07 22:48:38,613 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6216609792_resume_10.pdf
2025-09-07 22:48:38,613 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:48:38,613 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:48:38,613 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:48:38,613 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 22:48:38,613 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 28%
2025-09-07 22:48:38,614 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:48:38,614 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Maria Gonzalez - 30%
2025-09-07 22:48:38,614 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_10.pdf
2025-09-07 22:48:38,614 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-James Anderson
2025-09-07 22:48:38,614 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-07 22:48:38,614 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 87%
2025-09-07 22:48:38,614 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_5.pdf
2025-09-07 22:48:38,614 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:48:38,614 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6283915264_resume_6.pdf
2025-09-07 22:48:38,614 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Maria Gonzalez
2025-09-07 22:48:38,614 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-07 22:48:38,614 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:48:38,614 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Olivia Miller - 84%
2025-09-07 22:48:38,614 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6233436160_resume_9.pdf
2025-09-07 22:48:38,614 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Olivia Johnson
2025-09-07 22:48:38,614 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_6.pdf
2025-09-07 22:48:38,614 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:48:38,614 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_4.pdf
2025-09-07 22:48:38,614 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/10 completed: resume_10.pdf - success
2025-09-07 22:48:38,614 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6250262528_resume_8.pdf
2025-09-07 22:48:38,614 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:48:38,614 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_9.pdf
2025-09-07 22:48:38,614 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6267088896_resume_5.pdf
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-James Anderson - 32%
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:48:38,615 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_8.pdf
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:48:38,615 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_3.pdf
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Maria Gonzalez - 28%
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6216609792_resume_4.pdf
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:48:38,615 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_2.pdf
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Olivia Johnson - 87%
2025-09-07 22:48:38,615 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/10 completed: resume_9.pdf - success
2025-09-07 22:48:38,615 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:48:38,615 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_1.pdf
2025-09-07 22:48:38,615 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/10 completed: resume_8.pdf - success
2025-09-07 22:48:38,615 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6283915264_resume_3.pdf
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:48:38,615 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/10 completed: resume_7.pdf - success
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:48:38,615 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6233436160_resume_2.pdf
2025-09-07 22:48:38,616 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:48:38,616 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/10 completed: resume_6.pdf - success
2025-09-07 22:48:38,616 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:48:38,616 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:48:38,616 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6250262528_resume_1.pdf
2025-09-07 22:48:38,616 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:48:38,616 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:48:38,616 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:48:38,616 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:48:38,617 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:48:38,617 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:48:38,617 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:48:38,619 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:48:38,619 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:48:38,619 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 922 characters
2025-09-07 22:48:38,619 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:48:38,619 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:48:38,619 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:48:38,621 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 902 characters
2025-09-07 22:48:38,621 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:48:38,622 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 889 characters
2025-09-07 22:48:38,622 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:48:38,624 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 1088 characters
2025-09-07 22:48:38,624 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:48:38,625 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:48:38,625 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:48:38,625 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Michael Brown - 34%
2025-09-07 22:48:38,625 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:48:38,625 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 399c9734
2025-09-07 22:48:38,625 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:48:38,625 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 71%
2025-09-07 22:48:38,625 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:48:38,625 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Michael Brown
2025-09-07 22:48:38,625 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:48:38,626 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:48:38,626 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-07 22:48:38,626 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 25%
2025-09-07 22:48:38,626 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6267088896_resume_5.pdf
2025-09-07 22:48:38,626 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 30%
2025-09-07 22:48:38,626 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-David Lee
2025-09-07 22:48:38,626 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-07 22:48:38,626 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 22:48:38,626 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6283915264_resume_3.pdf
2025-09-07 22:48:38,627 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 859 characters
2025-09-07 22:48:38,627 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_5.pdf
2025-09-07 22:48:38,627 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Maria Gonzalez
2025-09-07 22:48:38,627 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Emily Davis
2025-09-07 22:48:38,627 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:48:38,627 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:48:38,627 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6216609792_resume_4.pdf
2025-09-07 22:48:38,627 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_3.pdf
2025-09-07 22:48:38,627 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6233436160_resume_2.pdf
2025-09-07 22:48:38,628 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Michael Brown - 34%
2025-09-07 22:48:38,628 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:48:38,628 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_4.pdf
2025-09-07 22:48:38,628 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:48:38,628 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_2.pdf
2025-09-07 22:48:38,628 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/10 completed: resume_5.pdf - success
2025-09-07 22:48:38,628 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 82%
2025-09-07 22:48:38,628 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:48:38,628 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-David Lee - 71%
2025-09-07 22:48:38,628 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:48:38,628 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:48:38,628 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Maria Gonzalez - 25%
2025-09-07 22:48:38,628 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Emily Davis - 30%
2025-09-07 22:48:38,628 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Emily Miller
2025-09-07 22:48:38,628 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/10 completed: resume_4.pdf - success
2025-09-07 22:48:38,628 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_224838_6250262528_resume_1.pdf
2025-09-07 22:48:38,628 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/10 completed: resume_3.pdf - success
2025-09-07 22:48:38,628 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/10 completed: resume_2.pdf - success
2025-09-07 22:48:38,628 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_1.pdf
2025-09-07 22:48:38,628 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:48:38,628 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Emily Miller - 82%
2025-09-07 22:48:38,628 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/10 completed: resume_1.pdf - success
2025-09-07 22:48:38,629 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 10 results collected
2025-09-07 22:48:38,629 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 10, Failed: 0
2025-09-07 22:48:38,629 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:48:38,629 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Johnson with 87% match
2025-09-07 22:48:38,629 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:48:38,629 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 17702 characters
2025-09-07 22:48:38,629 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 19306 bytes
2025-09-07 22:48:38,629 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:48:38] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:50:18,431 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:50:18,432 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:50:18,433 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:50:18,433 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:50:18] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:50:18,450 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:50:18,451 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256490.7085545-23733-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:48:10 GMT'}
2025-09-07 22:50:18,453 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23733 bytes
2025-09-07 22:50:18,454 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:50:18,454 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:50:18] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 22:50:18,455 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256490.7024376-53161-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:48:10 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:50:18,457 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 54744 bytes
2025-09-07 22:50:18,457 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:50:18] "GET /static/script.js HTTP/1.1" 200 -
2025-09-07 22:50:18,471 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:50:18,471 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:50:18,471 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:50:18,472 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:50:18,472 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:50:18] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:50:28,720 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:50:28,721 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '48836', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryjuPqnjVQxn4aYYzg', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:50:28,722 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryjuPqnjVQxn4aYYzg
2025-09-07 22:50:28,722 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 48836
2025-09-07 22:50:28,725 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:50:28,725 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 22:50:28,729 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:50:28,731 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 20, Job desc length: 17, Mock: True
2025-09-07 22:50:28,731 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:50:28,731 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 20 files
2025-09-07 22:50:28,731 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:50:28,732 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_10.pdf
2025-09-07 22:50:28,732 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,732 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:50:28,732 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6216609792_resume_10.pdf
2025-09-07 22:50:28,732 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_9.pdf
2025-09-07 22:50:28,735 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,735 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_8.pdf
2025-09-07 22:50:28,736 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,736 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:50:28,735 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_7.pdf
2025-09-07 22:50:28,736 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_6.pdf
2025-09-07 22:50:28,735 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:50:28,735 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:50:28,737 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 20 tasks submitted to thread pool
2025-09-07 22:50:28,737 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6250262528_resume_8.pdf
2025-09-07 22:50:28,737 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,738 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:50:28,737 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,737 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6233436160_resume_9.pdf
2025-09-07 22:50:28,738 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6267088896_resume_7.pdf
2025-09-07 22:50:28,738 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:50:28,738 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6283915264_resume_6.pdf
2025-09-07 22:50:28,737 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:50:28,738 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:50:28,739 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:50:28,739 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:50:28,739 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:50:28,739 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:50:28,739 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:50:28,739 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:50:28,740 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:50:28,740 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:50:28,740 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:50:28,741 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:50:28,741 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:50:28,741 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:50:28,743 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:50:28,743 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:50:28,743 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:50:28,748 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 1125 characters
2025-09-07 22:50:28,749 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:50:28,751 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 1093 characters
2025-09-07 22:50:28,752 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:50:28,752 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:50:28,752 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:50:28,754 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 873 characters
2025-09-07 22:50:28,756 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 870 characters
2025-09-07 22:50:28,756 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:50:28,757 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:50:28,760 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,760 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1070 characters
2025-09-07 22:50:28,761 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,761 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 88%
2025-09-07 22:50:28,761 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,761 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:50:28,761 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,761 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 71%
2025-09-07 22:50:28,761 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-07 22:50:28,761 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 35%
2025-09-07 22:50:28,761 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 82%
2025-09-07 22:50:28,761 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-07 22:50:28,762 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,762 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Olivia Johnson
2025-09-07 22:50:28,762 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 22:50:28,762 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-07 22:50:28,762 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-David Lee
2025-09-07 22:50:28,762 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 35%
2025-09-07 22:50:28,762 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6250262528_resume_8.pdf
2025-09-07 22:50:28,762 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-David Smith
2025-09-07 22:50:28,762 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Olivia Johnson
2025-09-07 22:50:28,762 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6216609792_resume_10.pdf
2025-09-07 22:50:28,762 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 22:50:28,762 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6233436160_resume_9.pdf
2025-09-07 22:50:28,762 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-David Smith
2025-09-07 22:50:28,762 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6267088896_resume_7.pdf
2025-09-07 22:50:28,762 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_10.pdf
2025-09-07 22:50:28,762 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6283915264_resume_6.pdf
2025-09-07 22:50:28,762 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_8.pdf
2025-09-07 22:50:28,762 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:50:28,762 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_9.pdf
2025-09-07 22:50:28,762 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_7.pdf
2025-09-07 22:50:28,762 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:50:28,762 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-David Lee - 71%
2025-09-07 22:50:28,762 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_6.pdf
2025-09-07 22:50:28,762 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Olivia Johnson - 88%
2025-09-07 22:50:28,763 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_5.pdf
2025-09-07 22:50:28,763 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/20 completed: resume_10.pdf - success
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Olivia Johnson - 82%
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-David Smith - 35%
2025-09-07 22:50:28,763 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_4.pdf
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-David Smith - 35%
2025-09-07 22:50:28,763 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_2.pdf
2025-09-07 22:50:28,763 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/20 completed: resume_9.pdf - success
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,763 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_3.pdf
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6216609792_resume_5.pdf
2025-09-07 22:50:28,763 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_1.pdf
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,763 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/20 completed: resume_8.pdf - success
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,764 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:50:28,763 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:50:28,764 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:50:28,764 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/20 completed: resume_7.pdf - success
2025-09-07 22:50:28,764 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:50:28,764 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6267088896_resume_1.pdf
2025-09-07 22:50:28,764 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6250262528_resume_4.pdf
2025-09-07 22:50:28,764 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:50:28,764 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6233436160_resume_2.pdf
2025-09-07 22:50:28,764 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/20 completed: resume_6.pdf - success
2025-09-07 22:50:28,764 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6283915264_resume_3.pdf
2025-09-07 22:50:28,764 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:50:28,764 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:50:28,765 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:50:28,765 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:50:28,765 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:50:28,765 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:50:28,765 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:50:28,765 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:50:28,766 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:50:28,767 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:50:28,766 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:50:28,766 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:50:28,767 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:50:28,766 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:50:28,767 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:50:28,770 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 922 characters
2025-09-07 22:50:28,770 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:50:28,771 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,771 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:50:28,773 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 1088 characters
2025-09-07 22:50:28,773 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:50:28,773 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 74%
2025-09-07 22:50:28,773 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:50:28,773 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:50:28,775 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 859 characters
2025-09-07 22:50:28,775 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:50:28,775 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-07 22:50:28,775 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:50:28,775 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,778 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 902 characters
2025-09-07 22:50:28,778 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-David Lee
2025-09-07 22:50:28,780 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6216609792_resume_5.pdf
2025-09-07 22:50:28,779 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 35%
2025-09-07 22:50:28,779 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:50:28,780 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 889 characters
2025-09-07 22:50:28,779 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,781 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 22:50:28,781 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,781 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:50:28,781 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_5.pdf
2025-09-07 22:50:28,781 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 81%
2025-09-07 22:50:28,781 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-David Smith
2025-09-07 22:50:28,781 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 80%
2025-09-07 22:50:28,781 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:50:28,781 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,781 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-07 22:50:28,781 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6233436160_resume_2.pdf
2025-09-07 22:50:28,781 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:50:28,781 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Olivia Miller
2025-09-07 22:50:28,781 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 25%
2025-09-07 22:50:28,781 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Johnson
2025-09-07 22:50:28,781 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6283915264_resume_3.pdf
2025-09-07 22:50:28,781 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_2.pdf
2025-09-07 22:50:28,781 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-David Lee - 74%
2025-09-07 22:50:28,781 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-07 22:50:28,781 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6267088896_resume_1.pdf
2025-09-07 22:50:28,782 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:50:28,782 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_101.pdf
2025-09-07 22:50:28,782 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_3.pdf
2025-09-07 22:50:28,782 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/20 completed: resume_5.pdf - success
2025-09-07 22:50:28,782 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Sophia Lee
2025-09-07 22:50:28,782 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-David Smith - 35%
2025-09-07 22:50:28,782 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_101.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,782 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_1.pdf
2025-09-07 22:50:28,782 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:50:28,782 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6250262528_resume_4.pdf
2025-09-07 22:50:28,782 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_91.pdf
2025-09-07 22:50:28,782 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:50:28,782 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:50:28,782 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Olivia Miller - 80%
2025-09-07 22:50:28,782 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_91.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,782 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6216609792_resume_101.pdf
2025-09-07 22:50:28,782 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_4.pdf
2025-09-07 22:50:28,782 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Johnson - 81%
2025-09-07 22:50:28,782 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_81.pdf
2025-09-07 22:50:28,782 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:50:28,782 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:50:28,782 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_71.pdf
2025-09-07 22:50:28,783 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_71.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,783 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:50:28,783 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6233436160_resume_91.pdf
2025-09-07 22:50:28,783 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Sophia Lee - 25%
2025-09-07 22:50:28,783 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_61.pdf
2025-09-07 22:50:28,783 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:50:28,783 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:50:28,783 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_61.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,783 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:50:28,783 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6267088896_resume_71.pdf
2025-09-07 22:50:28,783 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/20 completed: resume_4.pdf - success
2025-09-07 22:50:28,783 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6250262528_resume_61.pdf
2025-09-07 22:50:28,783 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_81.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,784 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:50:28,784 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:50:28,784 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:50:28,784 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/20 completed: resume_3.pdf - success
2025-09-07 22:50:28,785 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:50:28,785 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:50:28,785 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:50:28,785 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:50:28,785 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:50:28,785 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/20 completed: resume_2.pdf - success
2025-09-07 22:50:28,785 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/20 completed: resume_1.pdf - success
2025-09-07 22:50:28,785 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:50:28,785 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6283915264_resume_81.pdf
2025-09-07 22:50:28,787 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 405 characters
2025-09-07 22:50:28,787 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:50:28,787 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:50:28,788 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:50:28,788 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:50:28,788 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:50:28,788 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,788 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:50:28,788 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:50:28,788 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:50:28,788 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 29%
2025-09-07 22:50:28,789 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 391 characters
2025-09-07 22:50:28,789 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:50:28,789 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 22:50:28,790 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:50:28,790 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Emily Davis
2025-09-07 22:50:28,790 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6216609792_resume_101.pdf
2025-09-07 22:50:28,791 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 409 characters
2025-09-07 22:50:28,792 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 380 characters
2025-09-07 22:50:28,792 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:50:28,792 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:50:28,792 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_101.pdf
2025-09-07 22:50:28,792 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,792 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:50:28,792 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,793 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,793 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:50:28,793 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 24%
2025-09-07 22:50:28,793 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:50:28,793 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 25%
2025-09-07 22:50:28,793 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 31%
2025-09-07 22:50:28,793 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Emily Davis - 29%
2025-09-07 22:50:28,793 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-07 22:50:28,793 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-07 22:50:28,793 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:50:28,795 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 390 characters
2025-09-07 22:50:28,795 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_51.pdf
2025-09-07 22:50:28,795 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 11/20 completed: resume_101.pdf - success
2025-09-07 22:50:28,795 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Maria Gonzalez
2025-09-07 22:50:28,795 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Maria Gonzalez
2025-09-07 22:50:28,795 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Daniel Wilson
2025-09-07 22:50:28,795 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:50:28,795 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_51.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6267088896_resume_71.pdf
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6250262528_resume_61.pdf
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6233436160_resume_91.pdf
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,796 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_71.pdf
2025-09-07 22:50:28,796 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_61.pdf
2025-09-07 22:50:28,796 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_91.pdf
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6216609792_resume_51.pdf
2025-09-07 22:50:28,796 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 75%
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Maria Gonzalez - 24%
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Maria Gonzalez - 25%
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Daniel Wilson - 31%
2025-09-07 22:50:28,796 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-John Lee
2025-09-07 22:50:28,796 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_41.pdf
2025-09-07 22:50:28,796 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_31.pdf
2025-09-07 22:50:28,796 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_21.pdf
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6283915264_resume_81.pdf
2025-09-07 22:50:28,796 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 12/20 completed: resume_91.pdf - success
2025-09-07 22:50:28,796 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:50:28,796 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_41.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_31.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_21.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:50:28,797 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_81.pdf
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6267088896_resume_41.pdf
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6250262528_resume_31.pdf
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6233436160_resume_21.pdf
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-John Lee - 75%
2025-09-07 22:50:28,797 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:50:28,797 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:50:28,797 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_11.pdf
2025-09-07 22:50:28,797 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 13/20 completed: resume_81.pdf - success
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:50:28,797 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:50:28,797 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_11.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:28,797 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:50:28,797 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 14/20 completed: resume_71.pdf - success
2025-09-07 22:50:28,798 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:50:28,798 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:50:28,798 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:50:28,798 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:50:28,798 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 15/20 completed: resume_61.pdf - success
2025-09-07 22:50:28,799 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 429 characters
2025-09-07 22:50:28,799 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6283915264_resume_11.pdf
2025-09-07 22:50:28,799 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:50:28,799 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:50:28,799 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:50:28,800 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:50:28,800 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:50:28,800 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:50:28,800 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:50:28,800 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,801 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:50:28,801 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 399 characters
2025-09-07 22:50:28,803 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 400 characters
2025-09-07 22:50:28,803 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 39%
2025-09-07 22:50:28,804 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 397 characters
2025-09-07 22:50:28,804 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:50:28,804 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:50:28,805 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 22:50:28,805 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:50:28,805 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:50:28,805 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,805 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Isabella Martinez
2025-09-07 22:50:28,805 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,805 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:50:28,805 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,806 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 70%
2025-09-07 22:50:28,806 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6216609792_resume_51.pdf
2025-09-07 22:50:28,806 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 85%
2025-09-07 22:50:28,806 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 75%
2025-09-07 22:50:28,806 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:50:28,806 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-07 22:50:28,806 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:50:28,807 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_51.pdf
2025-09-07 22:50:28,807 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 418 characters
2025-09-07 22:50:28,807 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-John Lee
2025-09-07 22:50:28,807 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Olivia Johnson
2025-09-07 22:50:28,807 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-John Lee
2025-09-07 22:50:28,807 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:50:28,807 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:50:28,807 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6267088896_resume_41.pdf
2025-09-07 22:50:28,807 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6250262528_resume_31.pdf
2025-09-07 22:50:28,808 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6233436160_resume_21.pdf
2025-09-07 22:50:28,808 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Isabella Martinez - 39%
2025-09-07 22:50:28,808 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:28,808 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_41.pdf
2025-09-07 22:50:28,808 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_31.pdf
2025-09-07 22:50:28,808 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 16/20 completed: resume_51.pdf - success
2025-09-07 22:50:28,808 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_21.pdf
2025-09-07 22:50:28,808 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:50:28,808 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:50:28,808 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:50:28,808 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-John Lee - 75%
2025-09-07 22:50:28,808 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 29%
2025-09-07 22:50:28,808 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-John Lee - 70%
2025-09-07 22:50:28,808 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Olivia Johnson - 85%
2025-09-07 22:50:28,808 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 22:50:28,809 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 17/20 completed: resume_41.pdf - success
2025-09-07 22:50:28,809 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 18/20 completed: resume_31.pdf - success
2025-09-07 22:50:28,809 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 19/20 completed: resume_21.pdf - success
2025-09-07 22:50:28,809 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Emily Davis
2025-09-07 22:50:28,810 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225028_6283915264_resume_11.pdf
2025-09-07 22:50:28,810 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_11.pdf
2025-09-07 22:50:28,811 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:50:28,811 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Emily Davis - 29%
2025-09-07 22:50:28,811 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 20/20 completed: resume_11.pdf - success
2025-09-07 22:50:28,811 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 20 results collected
2025-09-07 22:50:28,811 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 20, Failed: 0
2025-09-07 22:50:28,812 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:50:28,812 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Johnson with 88% match
2025-09-07 22:50:28,812 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:50:28,812 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 36704 characters
2025-09-07 22:50:28,812 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 39887 bytes
2025-09-07 22:50:28,812 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:50:28] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:50:54,650 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:50:54,650 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:50:54,651 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:50:54,651 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:50:54] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:50:54,667 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:50:54,668 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256552.9850469-23733-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:49:12 GMT'}
2025-09-07 22:50:54,669 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:50:54,671 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23733 bytes
2025-09-07 22:50:54,673 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:50:54] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:50:54,672 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256552.9850187-54744-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:49:12 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:50:54,675 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 54747 bytes
2025-09-07 22:50:54,676 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:50:54] "GET /static/script.js HTTP/1.1" 200 -
2025-09-07 22:50:54,681 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:50:54,682 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:50:54,682 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:50:54,682 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:50:54,682 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:50:54] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:50:59,241 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:50:59,245 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '48831', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryTkKzSaS9baFxVtgI', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:50:59,245 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryTkKzSaS9baFxVtgI
2025-09-07 22:50:59,246 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 48831
2025-09-07 22:50:59,250 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:50:59,250 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[12 chars]'}
2025-09-07 22:50:59,255 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:50:59,255 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 20, Job desc length: 12, Mock: True
2025-09-07 22:50:59,255 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:50:59,255 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 20 files
2025-09-07 22:50:59,255 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:50:59,256 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_10.pdf
2025-09-07 22:50:59,256 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_9.pdf
2025-09-07 22:50:59,256 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_8.pdf
2025-09-07 22:50:59,256 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,257 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:50:59,256 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_7.pdf
2025-09-07 22:50:59,257 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_6.pdf
2025-09-07 22:50:59,257 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 20 tasks submitted to thread pool
2025-09-07 22:50:59,257 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,258 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:50:59,257 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6216609792_resume_10.pdf
2025-09-07 22:50:59,257 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,257 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,258 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:50:59,258 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6267088896_resume_7.pdf
2025-09-07 22:50:59,257 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,258 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6250262528_resume_8.pdf
2025-09-07 22:50:59,258 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:50:59,261 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:50:59,262 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6283915264_resume_6.pdf
2025-09-07 22:50:59,263 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6233436160_resume_9.pdf
2025-09-07 22:50:59,263 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:50:59,263 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:50:59,263 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:50:59,263 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:50:59,264 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:50:59,264 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:50:59,264 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:50:59,264 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:50:59,264 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:50:59,264 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:50:59,265 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:50:59,266 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:50:59,267 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:50:59,268 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:50:59,269 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:50:59,270 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:50:59,270 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:50:59,270 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:50:59,272 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:50:59,274 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 1093 characters
2025-09-07 22:50:59,274 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:50:59,278 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 873 characters
2025-09-07 22:50:59,278 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:50:59,278 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:50:59,282 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 1125 characters
2025-09-07 22:50:59,283 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,285 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1070 characters
2025-09-07 22:50:59,285 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,285 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:50:59,286 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 22%
2025-09-07 22:50:59,287 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 870 characters
2025-09-07 22:50:59,287 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:50:59,287 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 83%
2025-09-07 22:50:59,288 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-07 22:50:59,288 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:50:59,288 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,288 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:50:59,288 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,288 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Sophia Lee
2025-09-07 22:50:59,288 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 34%
2025-09-07 22:50:59,288 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,288 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Emily Miller
2025-09-07 22:50:59,288 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 35%
2025-09-07 22:50:59,288 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6216609792_resume_10.pdf
2025-09-07 22:50:59,288 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 22:50:59,289 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 80%
2025-09-07 22:50:59,289 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6283915264_resume_6.pdf
2025-09-07 22:50:59,289 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 22:50:59,289 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Isabella Martinez
2025-09-07 22:50:59,289 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:50:59,289 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_10.pdf
2025-09-07 22:50:59,289 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Isabella Martinez
2025-09-07 22:50:59,289 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6250262528_resume_8.pdf
2025-09-07 22:50:59,289 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_6.pdf
2025-09-07 22:50:59,289 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Emily Miller
2025-09-07 22:50:59,289 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:50:59,289 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6267088896_resume_7.pdf
2025-09-07 22:50:59,289 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:50:59,289 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6233436160_resume_9.pdf
2025-09-07 22:50:59,289 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Sophia Lee - 22%
2025-09-07 22:50:59,289 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_8.pdf
2025-09-07 22:50:59,289 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Emily Miller - 83%
2025-09-07 22:50:59,289 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_7.pdf
2025-09-07 22:50:59,289 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_5.pdf
2025-09-07 22:50:59,289 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:50:59,290 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/20 completed: resume_10.pdf - success
2025-09-07 22:50:59,290 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_4.pdf
2025-09-07 22:50:59,290 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_9.pdf
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Isabella Martinez - 34%
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Isabella Martinez - 35%
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:50:59,290 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_3.pdf
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Emily Miller - 80%
2025-09-07 22:50:59,290 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_2.pdf
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6216609792_resume_5.pdf
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6283915264_resume_4.pdf
2025-09-07 22:50:59,290 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_1.pdf
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,290 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/20 completed: resume_9.pdf - success
2025-09-07 22:50:59,290 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:50:59,291 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,291 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:50:59,291 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/20 completed: resume_8.pdf - success
2025-09-07 22:50:59,291 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6250262528_resume_3.pdf
2025-09-07 22:50:59,291 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:50:59,291 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:50:59,291 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:50:59,291 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6267088896_resume_2.pdf
2025-09-07 22:50:59,291 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:50:59,291 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6233436160_resume_1.pdf
2025-09-07 22:50:59,291 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:50:59,291 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:50:59,291 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/20 completed: resume_7.pdf - success
2025-09-07 22:50:59,291 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:50:59,291 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/20 completed: resume_6.pdf - success
2025-09-07 22:50:59,291 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:50:59,292 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:50:59,292 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:50:59,292 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:50:59,292 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:50:59,292 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:50:59,293 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:50:59,294 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:50:59,294 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:50:59,296 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:50:59,294 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:50:59,296 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 922 characters
2025-09-07 22:50:59,294 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:50:59,296 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:50:59,296 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:50:59,296 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:50:59,302 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 859 characters
2025-09-07 22:50:59,302 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,304 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1088 characters
2025-09-07 22:50:59,304 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 902 characters
2025-09-07 22:50:59,304 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:50:59,306 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 889 characters
2025-09-07 22:50:59,306 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:50:59,306 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 71%
2025-09-07 22:50:59,306 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:50:59,306 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-07 22:50:59,306 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:50:59,307 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,307 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-David Lee
2025-09-07 22:50:59,307 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,307 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,307 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 88%
2025-09-07 22:50:59,307 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,307 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6216609792_resume_5.pdf
2025-09-07 22:50:59,307 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 82%
2025-09-07 22:50:59,307 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 84%
2025-09-07 22:50:59,307 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:50:59,307 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 81%
2025-09-07 22:50:59,307 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:50:59,307 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-07 22:50:59,307 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_5.pdf
2025-09-07 22:50:59,308 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Emily Miller
2025-09-07 22:50:59,308 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:50:59,308 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Olivia Miller
2025-09-07 22:50:59,308 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Emily Taylor
2025-09-07 22:50:59,308 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:50:59,308 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6250262528_resume_3.pdf
2025-09-07 22:50:59,308 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Miller
2025-09-07 22:50:59,308 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6233436160_resume_1.pdf
2025-09-07 22:50:59,308 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6283915264_resume_4.pdf
2025-09-07 22:50:59,308 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-David Lee - 71%
2025-09-07 22:50:59,308 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6267088896_resume_2.pdf
2025-09-07 22:50:59,308 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_3.pdf
2025-09-07 22:50:59,308 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_101.pdf
2025-09-07 22:50:59,308 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_1.pdf
2025-09-07 22:50:59,308 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/20 completed: resume_5.pdf - success
2025-09-07 22:50:59,308 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_4.pdf
2025-09-07 22:50:59,308 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_2.pdf
2025-09-07 22:50:59,308 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:50:59,309 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_101.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,309 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:50:59,309 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Olivia Miller - 82%
2025-09-07 22:50:59,309 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:50:59,309 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Emily Miller - 88%
2025-09-07 22:50:59,309 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:50:59,309 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_91.pdf
2025-09-07 22:50:59,309 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:50:59,310 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Miller - 81%
2025-09-07 22:50:59,309 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Emily Taylor - 84%
2025-09-07 22:50:59,309 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6216609792_resume_101.pdf
2025-09-07 22:50:59,309 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_91.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,310 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_71.pdf
2025-09-07 22:50:59,309 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_81.pdf
2025-09-07 22:50:59,310 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_61.pdf
2025-09-07 22:50:59,310 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:50:59,310 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_71.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,310 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/20 completed: resume_4.pdf - success
2025-09-07 22:50:59,310 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_81.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,310 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_61.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,310 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:50:59,310 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6233436160_resume_91.pdf
2025-09-07 22:50:59,310 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:50:59,310 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/20 completed: resume_3.pdf - success
2025-09-07 22:50:59,310 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:50:59,310 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:50:59,310 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:50:59,310 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6283915264_resume_61.pdf
2025-09-07 22:50:59,310 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/20 completed: resume_2.pdf - success
2025-09-07 22:50:59,310 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6250262528_resume_81.pdf
2025-09-07 22:50:59,310 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6267088896_resume_71.pdf
2025-09-07 22:50:59,310 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:50:59,311 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/20 completed: resume_1.pdf - success
2025-09-07 22:50:59,311 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:50:59,311 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:50:59,311 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:50:59,311 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:50:59,311 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:50:59,311 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:50:59,311 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:50:59,311 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:50:59,311 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:50:59,312 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:50:59,312 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:50:59,312 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:50:59,312 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:50:59,312 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:50:59,312 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:50:59,314 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 405 characters
2025-09-07 22:50:59,314 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:50:59,314 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:50:59,314 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:50:59,315 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 390 characters
2025-09-07 22:50:59,315 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:50:59,316 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 380 characters
2025-09-07 22:50:59,316 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:50:59,316 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,317 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 30%
2025-09-07 22:50:59,318 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 391 characters
2025-09-07 22:50:59,318 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-07 22:50:59,319 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,320 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,320 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 409 characters
2025-09-07 22:50:59,320 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:50:59,320 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Sophia Lee
2025-09-07 22:50:59,320 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 40%
2025-09-07 22:50:59,320 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 35%
2025-09-07 22:50:59,320 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:50:59,320 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6216609792_resume_101.pdf
2025-09-07 22:50:59,320 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 22:50:59,320 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:50:59,320 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,320 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,320 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-James Anderson
2025-09-07 22:50:59,320 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_101.pdf
2025-09-07 22:50:59,320 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Olivia Taylor
2025-09-07 22:50:59,320 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 72%
2025-09-07 22:50:59,320 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 34%
2025-09-07 22:50:59,320 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6250262528_resume_81.pdf
2025-09-07 22:50:59,320 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:50:59,320 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6283915264_resume_61.pdf
2025-09-07 22:50:59,321 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:50:59,321 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 22:50:59,321 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Sophia Lee - 30%
2025-09-07 22:50:59,321 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_81.pdf
2025-09-07 22:50:59,321 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_61.pdf
2025-09-07 22:50:59,321 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-John Lee
2025-09-07 22:50:59,321 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Isabella Martinez
2025-09-07 22:50:59,321 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_51.pdf
2025-09-07 22:50:59,321 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 11/20 completed: resume_101.pdf - success
2025-09-07 22:50:59,321 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:50:59,321 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:50:59,321 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6267088896_resume_71.pdf
2025-09-07 22:50:59,321 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6233436160_resume_91.pdf
2025-09-07 22:50:59,321 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_51.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,321 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-James Anderson - 40%
2025-09-07 22:50:59,321 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Olivia Taylor - 35%
2025-09-07 22:50:59,322 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_31.pdf
2025-09-07 22:50:59,321 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:50:59,321 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_91.pdf
2025-09-07 22:50:59,321 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_41.pdf
2025-09-07 22:50:59,322 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_31.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,321 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_71.pdf
2025-09-07 22:50:59,322 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6216609792_resume_51.pdf
2025-09-07 22:50:59,322 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:50:59,322 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_41.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,322 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:50:59,322 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:50:59,322 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Isabella Martinez - 34%
2025-09-07 22:50:59,322 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:50:59,322 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6250262528_resume_41.pdf
2025-09-07 22:50:59,322 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6283915264_resume_31.pdf
2025-09-07 22:50:59,322 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_21.pdf
2025-09-07 22:50:59,322 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-John Lee - 72%
2025-09-07 22:50:59,322 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 12/20 completed: resume_91.pdf - success
2025-09-07 22:50:59,322 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:50:59,322 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_21.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,322 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:50:59,322 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_11.pdf
2025-09-07 22:50:59,322 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 13/20 completed: resume_81.pdf - success
2025-09-07 22:50:59,322 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:50:59,323 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:50:59,323 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:50:59,323 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:50:59,323 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_11.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:50:59,323 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 14/20 completed: resume_71.pdf - success
2025-09-07 22:50:59,323 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:50:59,323 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6233436160_resume_21.pdf
2025-09-07 22:50:59,323 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:50:59,323 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:50:59,323 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 15/20 completed: resume_61.pdf - success
2025-09-07 22:50:59,323 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:50:59,323 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6267088896_resume_11.pdf
2025-09-07 22:50:59,323 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:50:59,323 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:50:59,324 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:50:59,324 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:50:59,324 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:50:59,324 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:50:59,324 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:50:59,324 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:50:59,325 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 429 characters
2025-09-07 22:50:59,326 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:50:59,326 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 399 characters
2025-09-07 22:50:59,326 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:50:59,327 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:50:59,328 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 400 characters
2025-09-07 22:50:59,328 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:50:59,328 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:50:59,328 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:50:59,328 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:50:59,328 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,328 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,328 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 38%
2025-09-07 22:50:59,329 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,329 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 26%
2025-09-07 22:50:59,329 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 22:50:59,329 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 87%
2025-09-07 22:50:59,330 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 397 characters
2025-09-07 22:50:59,330 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:50:59,330 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 418 characters
2025-09-07 22:50:59,330 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Isabella Martinez
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-07 22:50:59,331 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:50:59,331 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Daniel Wilson
2025-09-07 22:50:59,331 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6216609792_resume_51.pdf
2025-09-07 22:50:59,331 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Olivia Johnson
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6250262528_resume_41.pdf
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6283915264_resume_31.pdf
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:50:59,331 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_51.pdf
2025-09-07 22:50:59,331 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 27%
2025-09-07 22:50:59,331 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_41.pdf
2025-09-07 22:50:59,331 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 89%
2025-09-07 22:50:59,331 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_31.pdf
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Isabella Martinez - 38%
2025-09-07 22:50:59,331 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-David Smith
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Daniel Wilson - 26%
2025-09-07 22:50:59,331 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Miller
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Olivia Johnson - 87%
2025-09-07 22:50:59,331 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 16/20 completed: resume_51.pdf - success
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6233436160_resume_21.pdf
2025-09-07 22:50:59,331 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225059_6267088896_resume_11.pdf
2025-09-07 22:50:59,332 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 17/20 completed: resume_41.pdf - success
2025-09-07 22:50:59,332 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 18/20 completed: resume_31.pdf - success
2025-09-07 22:50:59,332 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_21.pdf
2025-09-07 22:50:59,332 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_11.pdf
2025-09-07 22:50:59,332 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:50:59,332 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:50:59,332 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-David Smith - 27%
2025-09-07 22:50:59,332 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Miller - 89%
2025-09-07 22:50:59,332 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 19/20 completed: resume_21.pdf - success
2025-09-07 22:50:59,332 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 20/20 completed: resume_11.pdf - success
2025-09-07 22:50:59,332 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 20 results collected
2025-09-07 22:50:59,332 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 20, Failed: 0
2025-09-07 22:50:59,332 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:50:59,332 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Miller with 89% match
2025-09-07 22:50:59,332 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:50:59,332 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 36640 characters
2025-09-07 22:50:59,333 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 39830 bytes
2025-09-07 22:50:59,333 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:50:59] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:51:31,226 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:51:31,227 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:51:31,228 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:51:31,229 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:51:31] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:51:31,249 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:51:31,250 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:51:31,251 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256552.9850469-23733-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:49:12 GMT'}
2025-09-07 22:51:31,250 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256651.600589-54747-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:50:51 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:51:31,253 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23733 bytes
2025-09-07 22:51:31,254 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:51:31] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:51:31,253 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 54682 bytes
2025-09-07 22:51:31,256 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:51:31] "GET /static/script.js HTTP/1.1" 200 -
2025-09-07 22:51:31,263 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:51:31,264 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:51:31,265 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:51:31,265 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:51:31,265 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:51:31] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:51:38,974 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:51:38,975 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:51:38,975 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:51:38,976 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:51:38] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:51:38,982 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:51:38,984 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256552.9850469-23733-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:49:12 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:51:38,985 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:51:38,985 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256686.8591614-54682-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:51:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:51:38,986 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23733 bytes
2025-09-07 22:51:38,986 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 54682 bytes
2025-09-07 22:51:38,986 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:51:38] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:51:38,986 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:51:38] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:51:38,990 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:51:38,990 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:51:38,990 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:51:38,991 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:51:38,991 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:51:38] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:51:43,566 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:51:43,567 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '48833', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryLe8i3IAzASTjLnh0', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:51:43,567 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryLe8i3IAzASTjLnh0
2025-09-07 22:51:43,568 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 48833
2025-09-07 22:51:43,576 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:51:43,576 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[14 chars]'}
2025-09-07 22:51:43,576 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:51:43,576 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 20, Job desc length: 14, Mock: True
2025-09-07 22:51:43,576 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:51:43,577 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 20 files
2025-09-07 22:51:43,577 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:51:43,578 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_10.pdf
2025-09-07 22:51:43,578 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,581 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:51:43,578 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_9.pdf
2025-09-07 22:51:43,578 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_8.pdf
2025-09-07 22:51:43,578 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_7.pdf
2025-09-07 22:51:43,582 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6216609792_resume_10.pdf
2025-09-07 22:51:43,583 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,583 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,583 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_6.pdf
2025-09-07 22:51:43,583 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 20 tasks submitted to thread pool
2025-09-07 22:51:43,583 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,584 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:51:43,584 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:51:43,584 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,584 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:51:43,584 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6233436160_resume_9.pdf
2025-09-07 22:51:43,584 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:51:43,584 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6250262528_resume_8.pdf
2025-09-07 22:51:43,584 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:51:43,584 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6267088896_resume_7.pdf
2025-09-07 22:51:43,584 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:51:43,584 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6283915264_resume_6.pdf
2025-09-07 22:51:43,585 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:51:43,585 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:51:43,585 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:51:43,585 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:51:43,585 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:51:43,585 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:51:43,585 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:51:43,585 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:51:43,586 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:51:43,590 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:51:43,590 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:51:43,598 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 1093 characters
2025-09-07 22:51:43,599 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:51:43,599 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:51:43,599 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:51:43,599 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:51:43,600 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:51:43,600 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:51:43,601 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:51:43,601 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,601 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:51:43,601 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 34%
2025-09-07 22:51:43,609 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 873 characters
2025-09-07 22:51:43,609 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 1125 characters
2025-09-07 22:51:43,610 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1070 characters
2025-09-07 22:51:43,613 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 870 characters
2025-09-07 22:51:43,613 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:51:43,613 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:51:43,613 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:51:43,613 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:51:43,613 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:51:43,613 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Olivia Taylor
2025-09-07 22:51:43,613 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,614 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,614 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,614 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6216609792_resume_10.pdf
2025-09-07 22:51:43,615 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,615 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 36%
2025-09-07 22:51:43,615 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 82%
2025-09-07 22:51:43,615 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 90%
2025-09-07 22:51:43,615 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 33%
2025-09-07 22:51:43,615 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:51:43,615 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:51:43,615 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:51:43,615 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:51:43,615 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_10.pdf
2025-09-07 22:51:43,615 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Olivia Taylor
2025-09-07 22:51:43,615 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Olivia Miller
2025-09-07 22:51:43,615 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Miller
2025-09-07 22:51:43,615 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Daniel Wilson
2025-09-07 22:51:43,615 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:51:43,615 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6283915264_resume_6.pdf
2025-09-07 22:51:43,615 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6250262528_resume_8.pdf
2025-09-07 22:51:43,615 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6267088896_resume_7.pdf
2025-09-07 22:51:43,615 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6233436160_resume_9.pdf
2025-09-07 22:51:43,615 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Olivia Taylor - 34%
2025-09-07 22:51:43,616 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_6.pdf
2025-09-07 22:51:43,616 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_7.pdf
2025-09-07 22:51:43,616 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_5.pdf
2025-09-07 22:51:43,616 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_8.pdf
2025-09-07 22:51:43,616 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/20 completed: resume_10.pdf - success
2025-09-07 22:51:43,616 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_9.pdf
2025-09-07 22:51:43,616 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:51:43,616 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:51:43,616 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,616 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:51:43,616 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:51:43,616 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Olivia Taylor - 36%
2025-09-07 22:51:43,616 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Miller - 90%
2025-09-07 22:51:43,616 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:51:43,616 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Olivia Miller - 82%
2025-09-07 22:51:43,616 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Daniel Wilson - 33%
2025-09-07 22:51:43,616 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_4.pdf
2025-09-07 22:51:43,616 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_3.pdf
2025-09-07 22:51:43,616 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6216609792_resume_5.pdf
2025-09-07 22:51:43,616 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_2.pdf
2025-09-07 22:51:43,616 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_1.pdf
2025-09-07 22:51:43,616 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,616 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/20 completed: resume_9.pdf - success
2025-09-07 22:51:43,616 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,617 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,617 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,617 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:51:43,617 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/20 completed: resume_8.pdf - success
2025-09-07 22:51:43,617 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:51:43,617 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:51:43,617 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:51:43,617 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:51:43,617 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6283915264_resume_4.pdf
2025-09-07 22:51:43,617 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/20 completed: resume_7.pdf - success
2025-09-07 22:51:43,617 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6267088896_resume_3.pdf
2025-09-07 22:51:43,617 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6250262528_resume_2.pdf
2025-09-07 22:51:43,617 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:51:43,617 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6233436160_resume_1.pdf
2025-09-07 22:51:43,617 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/20 completed: resume_6.pdf - success
2025-09-07 22:51:43,617 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:51:43,617 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:51:43,617 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:51:43,617 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:51:43,617 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:51:43,618 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:51:43,618 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:51:43,618 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:51:43,618 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:51:43,618 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:51:43,618 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:51:43,619 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:51:43,619 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:51:43,619 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:51:43,619 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:51:43,619 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:51:43,620 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:51:43,620 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:51:43,623 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 889 characters
2025-09-07 22:51:43,626 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 1088 characters
2025-09-07 22:51:43,626 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 922 characters
2025-09-07 22:51:43,626 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:51:43,626 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:51:43,627 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 902 characters
2025-09-07 22:51:43,627 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:51:43,628 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:51:43,629 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 859 characters
2025-09-07 22:51:43,629 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,630 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,630 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:51:43,630 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,630 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,630 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 35%
2025-09-07 22:51:43,630 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 23%
2025-09-07 22:51:43,630 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 38%
2025-09-07 22:51:43,630 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Michael Brown - 40%
2025-09-07 22:51:43,630 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 22:51:43,630 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,630 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-07 22:51:43,630 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:51:43,630 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 399c9734
2025-09-07 22:51:43,630 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-James Anderson
2025-09-07 22:51:43,630 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 22%
2025-09-07 22:51:43,631 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Sophia Lee
2025-09-07 22:51:43,631 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Olivia Taylor
2025-09-07 22:51:43,631 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Michael Brown
2025-09-07 22:51:43,631 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6283915264_resume_4.pdf
2025-09-07 22:51:43,631 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-07 22:51:43,631 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6250262528_resume_2.pdf
2025-09-07 22:51:43,631 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6216609792_resume_5.pdf
2025-09-07 22:51:43,631 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6267088896_resume_3.pdf
2025-09-07 22:51:43,631 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Sophia Lee
2025-09-07 22:51:43,631 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_4.pdf
2025-09-07 22:51:43,631 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_2.pdf
2025-09-07 22:51:43,631 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6233436160_resume_1.pdf
2025-09-07 22:51:43,631 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_3.pdf
2025-09-07 22:51:43,631 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_5.pdf
2025-09-07 22:51:43,631 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:51:43,631 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:51:43,631 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Sophia Lee - 23%
2025-09-07 22:51:43,631 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_1.pdf
2025-09-07 22:51:43,631 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:51:43,631 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-James Anderson - 35%
2025-09-07 22:51:43,631 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_101.pdf
2025-09-07 22:51:43,631 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:51:43,631 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Olivia Taylor - 38%
2025-09-07 22:51:43,632 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_91.pdf
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_101.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Michael Brown - 40%
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Sophia Lee - 22%
2025-09-07 22:51:43,632 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_81.pdf
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_91.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,632 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/20 completed: resume_5.pdf - success
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:51:43,632 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_71.pdf
2025-09-07 22:51:43,632 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_61.pdf
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_81.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:51:43,632 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/20 completed: resume_4.pdf - success
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6250262528_resume_101.pdf
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_71.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_61.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6283915264_resume_91.pdf
2025-09-07 22:51:43,632 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/20 completed: resume_3.pdf - success
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6216609792_resume_81.pdf
2025-09-07 22:51:43,632 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/20 completed: resume_2.pdf - success
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6267088896_resume_71.pdf
2025-09-07 22:51:43,632 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:51:43,632 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6233436160_resume_61.pdf
2025-09-07 22:51:43,632 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:51:43,632 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/20 completed: resume_1.pdf - success
2025-09-07 22:51:43,633 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:51:43,633 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:51:43,633 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:51:43,633 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:51:43,633 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:51:43,633 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:51:43,633 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:51:43,633 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:51:43,633 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:51:43,633 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:51:43,633 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:51:43,634 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:51:43,634 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:51:43,634 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:51:43,634 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:51:43,634 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:51:43,634 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:51:43,634 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:51:43,636 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 409 characters
2025-09-07 22:51:43,636 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:51:43,637 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 405 characters
2025-09-07 22:51:43,637 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:51:43,638 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 391 characters
2025-09-07 22:51:43,638 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,640 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 390 characters
2025-09-07 22:51:43,640 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:51:43,641 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 380 characters
2025-09-07 22:51:43,641 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,641 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Brown - 74%
2025-09-07 22:51:43,641 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:51:43,641 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:51:43,641 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 70%
2025-09-07 22:51:43,641 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,641 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 563bcf30
2025-09-07 22:51:43,641 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-07 22:51:43,641 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,641 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 87%
2025-09-07 22:51:43,641 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,641 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Alice Brown
2025-09-07 22:51:43,641 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-David Lee
2025-09-07 22:51:43,641 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 81%
2025-09-07 22:51:43,641 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:51:43,641 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 83%
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6283915264_resume_91.pdf
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6250262528_resume_101.pdf
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:51:43,642 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Olivia Miller
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6233436160_resume_61.pdf
2025-09-07 22:51:43,642 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_91.pdf
2025-09-07 22:51:43,642 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Emily Miller
2025-09-07 22:51:43,642 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Emily Miller
2025-09-07 22:51:43,642 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_101.pdf
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6216609792_resume_81.pdf
2025-09-07 22:51:43,642 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_61.pdf
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6267088896_resume_71.pdf
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Alice Brown - 74%
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:51:43,642 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_81.pdf
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-David Lee - 70%
2025-09-07 22:51:43,642 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_71.pdf
2025-09-07 22:51:43,642 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_51.pdf
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Olivia Miller - 81%
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:51:43,642 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_41.pdf
2025-09-07 22:51:43,642 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 11/20 completed: resume_101.pdf - success
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_51.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,642 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_31.pdf
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Emily Miller - 83%
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_41.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,642 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 12/20 completed: resume_91.pdf - success
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Emily Miller - 87%
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:51:43,642 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_31.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,643 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_21.pdf
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:51:43,643 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 13/20 completed: resume_81.pdf - success
2025-09-07 22:51:43,643 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_11.pdf
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6283915264_resume_51.pdf
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_21.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6250262528_resume_41.pdf
2025-09-07 22:51:43,643 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 14/20 completed: resume_71.pdf - success
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_11.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6233436160_resume_31.pdf
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:51:43,643 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 15/20 completed: resume_61.pdf - success
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6216609792_resume_21.pdf
2025-09-07 22:51:43,643 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:51:43,643 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6267088896_resume_11.pdf
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:51:43,643 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:51:43,643 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:51:43,643 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:51:43,643 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:51:43,644 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:51:43,644 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:51:43,644 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:51:43,644 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:51:43,644 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:51:43,644 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:51:43,645 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:51:43,645 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:51:43,645 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:51:43,645 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:51:43,646 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 399 characters
2025-09-07 22:51:43,647 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 429 characters
2025-09-07 22:51:43,647 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:51:43,648 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:51:43,649 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 400 characters
2025-09-07 22:51:43,650 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 397 characters
2025-09-07 22:51:43,650 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 418 characters
2025-09-07 22:51:43,650 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:51:43,650 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,650 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,650 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:51:43,650 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:51:43,650 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 71%
2025-09-07 22:51:43,650 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 89%
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 34%
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Alice Smith
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 70%
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 85%
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Emily Taylor
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6250262528_resume_41.pdf
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-David Smith
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6283915264_resume_51.pdf
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-David Lee
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6233436160_resume_31.pdf
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Emily Miller
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_41.pdf
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6216609792_resume_21.pdf
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225143_6267088896_resume_11.pdf
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_51.pdf
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_31.pdf
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_21.pdf
2025-09-07 22:51:43,651 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:51:43,651 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_11.pdf
2025-09-07 22:51:43,652 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Alice Smith - 71%
2025-09-07 22:51:43,652 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Emily Taylor - 89%
2025-09-07 22:51:43,652 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:51:43,652 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-David Smith - 34%
2025-09-07 22:51:43,652 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:51:43,652 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 16/20 completed: resume_51.pdf - success
2025-09-07 22:51:43,652 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-David Lee - 70%
2025-09-07 22:51:43,652 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Emily Miller - 85%
2025-09-07 22:51:43,652 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 17/20 completed: resume_41.pdf - success
2025-09-07 22:51:43,652 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 18/20 completed: resume_31.pdf - success
2025-09-07 22:51:43,652 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 19/20 completed: resume_21.pdf - success
2025-09-07 22:51:43,652 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 20/20 completed: resume_11.pdf - success
2025-09-07 22:51:43,652 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 20 results collected
2025-09-07 22:51:43,652 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 20, Failed: 0
2025-09-07 22:51:43,652 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:51:43,652 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Miller with 90% match
2025-09-07 22:51:43,652 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:51:43,652 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 37520 characters
2025-09-07 22:51:43,653 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 40728 bytes
2025-09-07 22:51:43,653 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:51:43] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:51:51,834 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:51:51,834 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256552.9850469-23733-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:49:12 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:51:51,834 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23733 bytes
2025-09-07 22:51:51,835 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:51:51] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:51:51,841 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 22:51:51,841 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:51:51,842 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 22:51:51,842 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:51:51] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 22:52:18,523 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:52:18,524 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:52:18,525 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:52:18,526 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:52:18] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:52:18,545 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 22:52:18,546 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:52:18,548 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:52:18,548 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 22:52:18,551 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:52:18,552 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256552.9850469-23733-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:49:12 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:52:18,552 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:52:18] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 22:52:18,553 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256686.8591614-54682-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:51:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:52:18,557 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 54682 bytes
2025-09-07 22:52:18,560 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23706 bytes
2025-09-07 22:52:18,560 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:52:18] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:52:18,560 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:52:18] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 22:52:18,598 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:52:18,598 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:52:18,599 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:52:18,601 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:52:18,602 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:52:18] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:52:27,756 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:52:27,756 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '48836', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary4PlrZBimqnAlwSLu', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:52:27,757 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundary4PlrZBimqnAlwSLu
2025-09-07 22:52:27,757 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 48836
2025-09-07 22:52:27,762 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:52:27,762 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 22:52:27,762 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:52:27,762 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 20, Job desc length: 17, Mock: True
2025-09-07 22:52:27,762 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:52:27,762 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 20 files
2025-09-07 22:52:27,763 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:52:27,763 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_10.pdf
2025-09-07 22:52:27,763 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_9.pdf
2025-09-07 22:52:27,763 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,763 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_8.pdf
2025-09-07 22:52:27,764 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_7.pdf
2025-09-07 22:52:27,764 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_6.pdf
2025-09-07 22:52:27,764 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,764 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 20 tasks submitted to thread pool
2025-09-07 22:52:27,764 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:52:27,764 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,765 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,766 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:52:27,765 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:52:27,765 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6250262528_resume_10.pdf
2025-09-07 22:52:27,765 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,767 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:52:27,767 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:52:27,767 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6267088896_resume_9.pdf
2025-09-07 22:52:27,767 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_13035925504_resume_6.pdf
2025-09-07 22:52:27,767 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6300741632_resume_7.pdf
2025-09-07 22:52:27,767 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6283915264_resume_8.pdf
2025-09-07 22:52:27,768 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:52:27,768 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:52:27,768 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:52:27,768 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:52:27,768 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:52:27,768 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:52:27,770 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:52:27,768 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:52:27,770 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:52:27,768 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:52:27,771 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:52:27,771 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:52:27,772 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:52:27,772 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:52:27,772 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:52:27,772 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:52:27,773 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:52:27,773 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:52:27,778 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 870 characters
2025-09-07 22:52:27,779 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:52:27,779 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:52:27,784 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:52:27,785 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 873 characters
2025-09-07 22:52:27,788 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 1093 characters
2025-09-07 22:52:27,789 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:52:27,793 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,793 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 1070 characters
2025-09-07 22:52:27,794 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:52:27,796 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 1125 characters
2025-09-07 22:52:27,796 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 80%
2025-09-07 22:52:27,797 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:52:27,797 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:52:27,797 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:52:27,797 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,797 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-John Lee
2025-09-07 22:52:27,798 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,798 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,798 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,799 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 82%
2025-09-07 22:52:27,798 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 35%
2025-09-07 22:52:27,799 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 30%
2025-09-07 22:52:27,800 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 22:52:27,798 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6267088896_resume_9.pdf
2025-09-07 22:52:27,800 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-James Anderson
2025-09-07 22:52:27,801 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6283915264_resume_8.pdf
2025-09-07 22:52:27,800 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 22:52:27,801 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Isabella Martinez
2025-09-07 22:52:27,801 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_9.pdf
2025-09-07 22:52:27,799 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 28%
2025-09-07 22:52:27,801 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_13035925504_resume_6.pdf
2025-09-07 22:52:27,801 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_8.pdf
2025-09-07 22:52:27,802 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:52:27,799 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 22:52:27,802 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:52:27,802 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:52:27,802 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-John Lee - 80%
2025-09-07 22:52:27,802 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Alice Lee
2025-09-07 22:52:27,802 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_6.pdf
2025-09-07 22:52:27,802 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Daniel Wilson
2025-09-07 22:52:27,802 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-James Anderson - 30%
2025-09-07 22:52:27,802 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_5.pdf
2025-09-07 22:52:27,802 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6300741632_resume_7.pdf
2025-09-07 22:52:27,802 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:52:27,802 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6250262528_resume_10.pdf
2025-09-07 22:52:27,802 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_4.pdf
2025-09-07 22:52:27,802 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,802 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Isabella Martinez - 35%
2025-09-07 22:52:27,802 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_7.pdf
2025-09-07 22:52:27,802 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,803 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_10.pdf
2025-09-07 22:52:27,803 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:52:27,803 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_3.pdf
2025-09-07 22:52:27,803 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:52:27,803 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:52:27,803 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:52:27,803 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6267088896_resume_5.pdf
2025-09-07 22:52:27,803 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,803 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Alice Lee - 82%
2025-09-07 22:52:27,803 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6283915264_resume_4.pdf
2025-09-07 22:52:27,803 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Daniel Wilson - 28%
2025-09-07 22:52:27,803 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:52:27,803 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_2.pdf
2025-09-07 22:52:27,803 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_1.pdf
2025-09-07 22:52:27,803 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/20 completed: resume_10.pdf - success
2025-09-07 22:52:27,803 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_13035925504_resume_3.pdf
2025-09-07 22:52:27,803 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,804 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:52:27,804 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:52:27,804 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,804 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/20 completed: resume_9.pdf - success
2025-09-07 22:52:27,804 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:52:27,804 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:52:27,804 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:52:27,804 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:52:27,804 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/20 completed: resume_8.pdf - success
2025-09-07 22:52:27,804 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:52:27,804 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6300741632_resume_2.pdf
2025-09-07 22:52:27,804 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6250262528_resume_1.pdf
2025-09-07 22:52:27,804 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/20 completed: resume_7.pdf - success
2025-09-07 22:52:27,804 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:52:27,805 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:52:27,805 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/20 completed: resume_6.pdf - success
2025-09-07 22:52:27,805 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:52:27,805 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:52:27,805 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:52:27,805 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:52:27,806 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:52:27,806 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:52:27,806 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:52:27,806 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:52:27,806 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:52:27,807 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:52:27,807 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:52:27,810 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 922 characters
2025-09-07 22:52:27,810 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:52:27,810 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:52:27,811 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:52:27,812 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 902 characters
2025-09-07 22:52:27,813 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,814 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:52:27,814 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 889 characters
2025-09-07 22:52:27,814 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 77%
2025-09-07 22:52:27,816 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 859 characters
2025-09-07 22:52:27,819 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 1088 characters
2025-09-07 22:52:27,819 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:52:27,819 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 22:52:27,819 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,819 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:52:27,819 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:52:27,819 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Alice Lee
2025-09-07 22:52:27,819 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 86%
2025-09-07 22:52:27,819 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,819 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6267088896_resume_5.pdf
2025-09-07 22:52:27,819 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,819 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:52:27,819 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 75%
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,820 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Emily Miller
2025-09-07 22:52:27,820 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_5.pdf
2025-09-07 22:52:27,820 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 20%
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-07 22:52:27,820 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 37%
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_13035925504_resume_3.pdf
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-07 22:52:27,820 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Alice Smith
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Alice Lee - 77%
2025-09-07 22:52:27,820 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Sophia Lee
2025-09-07 22:52:27,820 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_3.pdf
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6283915264_resume_4.pdf
2025-09-07 22:52:27,820 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Olivia Taylor
2025-09-07 22:52:27,820 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_101.pdf
2025-09-07 22:52:27,820 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/20 completed: resume_5.pdf - success
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6250262528_resume_1.pdf
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:52:27,820 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_4.pdf
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6300741632_resume_2.pdf
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_101.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Emily Miller - 86%
2025-09-07 22:52:27,820 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:52:27,821 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_1.pdf
2025-09-07 22:52:27,821 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:52:27,821 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_2.pdf
2025-09-07 22:52:27,821 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_91.pdf
2025-09-07 22:52:27,821 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Alice Smith - 75%
2025-09-07 22:52:27,821 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:52:27,821 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6267088896_resume_101.pdf
2025-09-07 22:52:27,821 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:52:27,821 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_91.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,821 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_81.pdf
2025-09-07 22:52:27,821 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/20 completed: resume_4.pdf - success
2025-09-07 22:52:27,821 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Sophia Lee - 20%
2025-09-07 22:52:27,821 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Olivia Taylor - 37%
2025-09-07 22:52:27,821 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:52:27,821 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_81.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,821 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/20 completed: resume_3.pdf - success
2025-09-07 22:52:27,821 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_71.pdf
2025-09-07 22:52:27,821 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_61.pdf
2025-09-07 22:52:27,821 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_13035925504_resume_91.pdf
2025-09-07 22:52:27,821 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:52:27,821 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:52:27,821 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/20 completed: resume_2.pdf - success
2025-09-07 22:52:27,821 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_71.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,822 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_61.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,822 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:52:27,822 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6283915264_resume_81.pdf
2025-09-07 22:52:27,822 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/20 completed: resume_1.pdf - success
2025-09-07 22:52:27,822 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:52:27,822 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:52:27,822 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6250262528_resume_71.pdf
2025-09-07 22:52:27,822 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6300741632_resume_61.pdf
2025-09-07 22:52:27,822 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:52:27,822 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:52:27,822 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:52:27,822 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:52:27,822 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:52:27,822 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:52:27,822 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:52:27,822 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:52:27,822 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:52:27,822 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:52:27,823 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:52:27,824 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:52:27,823 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:52:27,824 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:52:27,825 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:52:27,825 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:52:27,826 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 405 characters
2025-09-07 22:52:27,827 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:52:27,827 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 390 characters
2025-09-07 22:52:27,827 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:52:27,827 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:52:27,827 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:52:27,829 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 380 characters
2025-09-07 22:52:27,829 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,829 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:52:27,829 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 72%
2025-09-07 22:52:27,830 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,831 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 409 characters
2025-09-07 22:52:27,832 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 391 characters
2025-09-07 22:52:27,832 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,832 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-07 22:52:27,832 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 21%
2025-09-07 22:52:27,832 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:52:27,832 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:52:27,832 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 33%
2025-09-07 22:52:27,833 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:52:27,833 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Daniel Wilson
2025-09-07 22:52:27,832 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,832 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-07 22:52:27,833 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,833 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6300741632_resume_61.pdf
2025-09-07 22:52:27,832 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-David Lee
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6267088896_resume_101.pdf
2025-09-07 22:52:27,833 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 39%
2025-09-07 22:52:27,833 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 26%
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:52:27,833 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Sophia Lee
2025-09-07 22:52:27,834 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_101.pdf
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:52:27,834 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_61.pdf
2025-09-07 22:52:27,834 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Olivia Taylor
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6283915264_resume_81.pdf
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:52:27,834 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Daniel Wilson
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_13035925504_resume_91.pdf
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-David Lee - 72%
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6250262528_resume_71.pdf
2025-09-07 22:52:27,834 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_81.pdf
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Daniel Wilson - 33%
2025-09-07 22:52:27,834 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_51.pdf
2025-09-07 22:52:27,834 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 11/20 completed: resume_101.pdf - success
2025-09-07 22:52:27,834 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_91.pdf
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:52:27,834 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_71.pdf
2025-09-07 22:52:27,834 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_41.pdf
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_51.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Sophia Lee - 21%
2025-09-07 22:52:27,834 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_41.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Olivia Taylor - 39%
2025-09-07 22:52:27,835 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_31.pdf
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Daniel Wilson - 26%
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6267088896_resume_51.pdf
2025-09-07 22:52:27,835 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_21.pdf
2025-09-07 22:52:27,835 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 12/20 completed: resume_91.pdf - success
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_31.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,835 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_11.pdf
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6300741632_resume_41.pdf
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_21.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,835 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 13/20 completed: resume_81.pdf - success
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_11.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:52:27,835 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 14/20 completed: resume_71.pdf - success
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6283915264_resume_31.pdf
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_13035925504_resume_21.pdf
2025-09-07 22:52:27,835 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:52:27,835 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 15/20 completed: resume_61.pdf - success
2025-09-07 22:52:27,835 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6250262528_resume_11.pdf
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:52:27,835 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:52:27,835 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:52:27,835 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:52:27,836 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:52:27,836 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:52:27,836 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:52:27,836 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:52:27,836 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:52:27,836 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:52:27,836 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:52:27,837 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:52:27,837 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:52:27,837 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:52:27,837 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:52:27,837 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:52:27,837 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:52:27,838 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 429 characters
2025-09-07 22:52:27,840 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:52:27,839 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:52:27,839 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 397 characters
2025-09-07 22:52:27,841 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 400 characters
2025-09-07 22:52:27,841 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,841 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:52:27,841 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:52:27,842 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 399 characters
2025-09-07 22:52:27,842 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 27%
2025-09-07 22:52:27,843 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 418 characters
2025-09-07 22:52:27,843 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,844 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:52:27,844 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:52:27,844 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,844 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:52:27,844 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 36%
2025-09-07 22:52:27,844 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Daniel Wilson
2025-09-07 22:52:27,844 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 86%
2025-09-07 22:52:27,844 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:52:27,844 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:52:27,844 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,844 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6267088896_resume_51.pdf
2025-09-07 22:52:27,844 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:52:27,844 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Emily Miller
2025-09-07 22:52:27,844 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_51.pdf
2025-09-07 22:52:27,844 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 73%
2025-09-07 22:52:27,844 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 85%
2025-09-07 22:52:27,844 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Olivia Taylor
2025-09-07 22:52:27,844 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6283915264_resume_31.pdf
2025-09-07 22:52:27,844 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:52:27,844 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-07 22:52:27,845 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:52:27,845 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_13035925504_resume_21.pdf
2025-09-07 22:52:27,845 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Alice Smith
2025-09-07 22:52:27,845 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_31.pdf
2025-09-07 22:52:27,845 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6300741632_resume_41.pdf
2025-09-07 22:52:27,845 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Daniel Wilson - 27%
2025-09-07 22:52:27,845 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:52:27,845 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Emily Miller
2025-09-07 22:52:27,845 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225227_6250262528_resume_11.pdf
2025-09-07 22:52:27,845 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_21.pdf
2025-09-07 22:52:27,845 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_41.pdf
2025-09-07 22:52:27,845 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:52:27,845 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Emily Miller - 86%
2025-09-07 22:52:27,845 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_11.pdf
2025-09-07 22:52:27,845 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:52:27,845 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Alice Smith - 73%
2025-09-07 22:52:27,845 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 16/20 completed: resume_51.pdf - success
2025-09-07 22:52:27,845 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:52:27,846 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Olivia Taylor - 36%
2025-09-07 22:52:27,846 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 17/20 completed: resume_41.pdf - success
2025-09-07 22:52:27,846 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Emily Miller - 85%
2025-09-07 22:52:27,846 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 18/20 completed: resume_31.pdf - success
2025-09-07 22:52:27,846 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 19/20 completed: resume_21.pdf - success
2025-09-07 22:52:27,846 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 20/20 completed: resume_11.pdf - success
2025-09-07 22:52:27,846 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 20 results collected
2025-09-07 22:52:27,846 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 20, Failed: 0
2025-09-07 22:52:27,846 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:52:27,846 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Emily Miller with 86% match
2025-09-07 22:52:27,846 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:52:27,846 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 35791 characters
2025-09-07 22:52:27,847 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 38951 bytes
2025-09-07 22:52:27,847 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:52:27] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:52:35,605 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:52:35,606 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256737.952553-23706-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:52:17 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:52:35,608 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23706 bytes
2025-09-07 22:52:35,608 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:52:35] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:52:35,611 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 22:52:35,611 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:52:35,611 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 22:52:35,611 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:52:35] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 22:52:51,494 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 22:52:51,495 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:52:51,496 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 22:52:51,496 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:52:51] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 22:53:10,140 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:53:10,140 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:53:10,140 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:53:10,140 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:53:10] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:53:10,158 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 22:53:10,158 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:53:10,159 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 22:53:10,159 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:53:10] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 22:53:10,167 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:53:10,168 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256737.952553-23706-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:52:17 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:53:10,173 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:53:10,173 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256686.8591614-54682-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:51:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:53:10,174 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 54682 bytes
2025-09-07 22:53:10,174 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:53:10] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:53:10,175 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23706 bytes
2025-09-07 22:53:10,175 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:53:10] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 22:53:10,211 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:53:10,211 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:53:10,211 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:53:10,211 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:53:10,213 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:53:10] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:53:14,156 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:53:14,157 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '48836', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary8nWC72Ks4PES0s6F', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:53:14,157 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundary8nWC72Ks4PES0s6F
2025-09-07 22:53:14,157 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 48836
2025-09-07 22:53:14,168 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_5.pdf', 'resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:53:14,169 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 22:53:14,169 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:53:14,169 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 20, Job desc length: 17, Mock: True
2025-09-07 22:53:14,169 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_5.pdf', 'resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:53:14,170 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 20 files
2025-09-07 22:53:14,170 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:53:14,171 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_5.pdf
2025-09-07 22:53:14,171 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_10.pdf
2025-09-07 22:53:14,171 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,172 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_9.pdf
2025-09-07 22:53:14,172 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,172 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_8.pdf
2025-09-07 22:53:14,172 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13052751872] Starting processing file: resume_7.pdf
2025-09-07 22:53:14,172 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:53:14,172 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 20 tasks submitted to thread pool
2025-09-07 22:53:14,172 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,172 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:53:14,172 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,172 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13052751872] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,173 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6267088896_resume_5.pdf
2025-09-07 22:53:14,173 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:53:14,173 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6283915264_resume_10.pdf
2025-09-07 22:53:14,173 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:53:14,173 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13052751872] Validating file type...
2025-09-07 22:53:14,173 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6300741632_resume_9.pdf
2025-09-07 22:53:14,173 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13035925504_resume_8.pdf
2025-09-07 22:53:14,174 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13052751872] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13052751872_resume_7.pdf
2025-09-07 22:53:14,174 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:53:14,174 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:53:14,174 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:53:14,174 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:53:14,174 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:53:14,174 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:53:14,175 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:53:14,175 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13052751872] File saved successfully
2025-09-07 22:53:14,175 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:53:14,175 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13052751872] Validating PDF structure...
2025-09-07 22:53:14,176 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:53:14,177 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:53:14,177 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:53:14,177 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:53:14,180 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:53:14,181 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:53:14,181 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:53:14,181 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:53:14,182 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13052751872] PDF validation passed
2025-09-07 22:53:14,183 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13052751872] Extracting text from PDF...
2025-09-07 22:53:14,189 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 1093 characters
2025-09-07 22:53:14,189 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:53:14,193 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13052751872] Text extracted successfully - 1070 characters
2025-09-07 22:53:14,198 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13052751872] Mock mode - attempting to use cached response
2025-09-07 22:53:14,198 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,200 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 1125 characters
2025-09-07 22:53:14,200 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 922 characters
2025-09-07 22:53:14,202 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 870 characters
2025-09-07 22:53:14,202 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Brown - 78%
2025-09-07 22:53:14,202 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:53:14,203 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,203 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:53:14,204 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:53:14,204 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 563bcf30
2025-09-07 22:53:14,204 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 80%
2025-09-07 22:53:14,205 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,206 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Alice Brown
2025-09-07 22:53:14,206 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-07 22:53:14,206 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,207 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,207 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 76%
2025-09-07 22:53:14,207 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6283915264_resume_10.pdf
2025-09-07 22:53:14,207 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13052751872] Using cached response: Mock-John Lee
2025-09-07 22:53:14,207 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Brown - 76%
2025-09-07 22:53:14,207 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 80%
2025-09-07 22:53:14,207 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-07 22:53:14,207 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13052751872] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13052751872_resume_7.pdf
2025-09-07 22:53:14,207 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 563bcf30
2025-09-07 22:53:14,207 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:53:14,207 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_10.pdf
2025-09-07 22:53:14,207 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-John Lee
2025-09-07 22:53:14,208 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Alice Brown
2025-09-07 22:53:14,208 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Emily Miller
2025-09-07 22:53:14,208 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13052751872] File processing completed successfully for: resume_7.pdf
2025-09-07 22:53:14,208 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:53:14,208 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13035925504_resume_8.pdf
2025-09-07 22:53:14,208 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6300741632_resume_9.pdf
2025-09-07 22:53:14,208 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6267088896_resume_5.pdf
2025-09-07 22:53:14,208 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13052751872] Mock result - not saving to cache
2025-09-07 22:53:14,208 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Alice Brown - 78%
2025-09-07 22:53:14,208 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_9.pdf
2025-09-07 22:53:14,208 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_8.pdf
2025-09-07 22:53:14,208 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13052751872] Returning result: Mock-John Lee - 80%
2025-09-07 22:53:14,208 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_5.pdf
2025-09-07 22:53:14,208 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_6.pdf
2025-09-07 22:53:14,208 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:53:14,208 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:53:14,209 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13052751872] Starting processing file: resume_4.pdf
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Alice Brown - 76%
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-John Lee - 76%
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13052751872] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Emily Miller - 80%
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:53:14,209 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_3.pdf
2025-09-07 22:53:14,209 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_2.pdf
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13052751872] Validating file type...
2025-09-07 22:53:14,209 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_1.pdf
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6283915264_resume_6.pdf
2025-09-07 22:53:14,209 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/20 completed: resume_5.pdf - success
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13052751872] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13052751872_resume_4.pdf
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,209 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/20 completed: resume_10.pdf - success
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:53:14,209 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:53:14,210 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/20 completed: resume_9.pdf - success
2025-09-07 22:53:14,210 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6300741632_resume_3.pdf
2025-09-07 22:53:14,210 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13035925504_resume_2.pdf
2025-09-07 22:53:14,210 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6267088896_resume_1.pdf
2025-09-07 22:53:14,210 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/20 completed: resume_8.pdf - success
2025-09-07 22:53:14,210 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13052751872] File saved successfully
2025-09-07 22:53:14,210 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:53:14,210 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/20 completed: resume_7.pdf - success
2025-09-07 22:53:14,210 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13052751872] Validating PDF structure...
2025-09-07 22:53:14,210 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:53:14,210 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:53:14,211 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:53:14,211 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:53:14,211 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:53:14,211 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:53:14,212 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:53:14,212 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:53:14,212 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:53:14,213 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13052751872] PDF validation passed
2025-09-07 22:53:14,213 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13052751872] Extracting text from PDF...
2025-09-07 22:53:14,213 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:53:14,213 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:53:14,214 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:53:14,214 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:53:14,215 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 873 characters
2025-09-07 22:53:14,216 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:53:14,216 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:53:14,217 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13052751872] Text extracted successfully - 889 characters
2025-09-07 22:53:14,217 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:53:14,220 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 1088 characters
2025-09-07 22:53:14,221 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13052751872] Mock mode - attempting to use cached response
2025-09-07 22:53:14,221 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:53:14,223 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 902 characters
2025-09-07 22:53:14,223 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:53:14,223 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,223 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,223 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,223 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 77%
2025-09-07 22:53:14,223 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,225 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 859 characters
2025-09-07 22:53:14,225 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 86%
2025-09-07 22:53:14,225 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-07 22:53:14,225 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-07 22:53:14,225 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 30%
2025-09-07 22:53:14,225 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:53:14,225 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Olivia Johnson
2025-09-07 22:53:14,225 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 21%
2025-09-07 22:53:14,225 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13052751872] Using cached response: Mock-Alice Smith
2025-09-07 22:53:14,225 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 22:53:14,225 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6283915264_resume_6.pdf
2025-09-07 22:53:14,225 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-07 22:53:14,225 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13052751872] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13052751872_resume_4.pdf
2025-09-07 22:53:14,225 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Isabella Martinez
2025-09-07 22:53:14,225 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,225 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Maria Gonzalez
2025-09-07 22:53:14,225 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_6.pdf
2025-09-07 22:53:14,225 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6300741632_resume_3.pdf
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 81%
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13052751872] File processing completed successfully for: resume_4.pdf
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13035925504_resume_2.pdf
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13052751872] Mock result - not saving to cache
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_3.pdf
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Olivia Johnson - 86%
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_2.pdf
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Alice Lee
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13052751872] Returning result: Mock-Alice Smith - 77%
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_101.pdf
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/20 completed: resume_6.pdf - success
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6267088896_resume_1.pdf
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13052751872] Starting processing file: resume_91.pdf
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Isabella Martinez - 30%
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_101.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/20 completed: resume_4.pdf - success
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Maria Gonzalez - 21%
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13052751872] File details - Name: resume_91.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_1.pdf
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_81.pdf
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/20 completed: resume_3.pdf - success
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_71.pdf
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13052751872] Validating file type...
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_81.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6283915264_resume_101.pdf
2025-09-07 22:53:14,226 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/20 completed: resume_2.pdf - success
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_71.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,227 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:53:14,227 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13035925504_resume_71.pdf
2025-09-07 22:53:14,227 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Alice Lee - 81%
2025-09-07 22:53:14,226 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13052751872] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13052751872_resume_91.pdf
2025-09-07 22:53:14,227 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:53:14,227 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_61.pdf
2025-09-07 22:53:14,227 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:53:14,227 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/20 completed: resume_1.pdf - success
2025-09-07 22:53:14,227 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6300741632_resume_81.pdf
2025-09-07 22:53:14,227 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:53:14,227 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:53:14,227 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_61.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,228 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:53:14,227 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:53:14,228 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:53:14,228 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:53:14,228 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13052751872] File saved successfully
2025-09-07 22:53:14,228 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:53:14,228 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6267088896_resume_61.pdf
2025-09-07 22:53:14,228 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13052751872] Validating PDF structure...
2025-09-07 22:53:14,229 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:53:14,230 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 391 characters
2025-09-07 22:53:14,230 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:53:14,230 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:53:14,230 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:53:14,230 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:53:14,230 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13052751872] PDF validation passed
2025-09-07 22:53:14,231 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:53:14,231 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:53:14,231 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,231 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13052751872] Extracting text from PDF...
2025-09-07 22:53:14,231 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:53:14,231 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 32%
2025-09-07 22:53:14,231 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:53:14,232 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 405 characters
2025-09-07 22:53:14,232 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Daniel Wilson
2025-09-07 22:53:14,232 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:53:14,233 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:53:14,233 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13035925504_resume_71.pdf
2025-09-07 22:53:14,233 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13052751872] Text extracted successfully - 409 characters
2025-09-07 22:53:14,233 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:53:14,233 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13052751872] Mock mode - attempting to use cached response
2025-09-07 22:53:14,234 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_71.pdf
2025-09-07 22:53:14,234 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,235 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 20%
2025-09-07 22:53:14,235 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 22:53:14,235 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Emily Davis
2025-09-07 22:53:14,235 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 390 characters
2025-09-07 22:53:14,235 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,236 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 74%
2025-09-07 22:53:14,235 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:53:14,236 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:53:14,236 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:53:14,236 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13052751872] Using cached response: Mock-John Lee
2025-09-07 22:53:14,236 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13052751872] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13052751872_resume_91.pdf
2025-09-07 22:53:14,235 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6283915264_resume_101.pdf
2025-09-07 22:53:14,236 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Daniel Wilson - 32%
2025-09-07 22:53:14,236 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,238 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13052751872] File processing completed successfully for: resume_91.pdf
2025-09-07 22:53:14,238 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 380 characters
2025-09-07 22:53:14,238 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_51.pdf
2025-09-07 22:53:14,238 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 87%
2025-09-07 22:53:14,238 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13052751872] Mock result - not saving to cache
2025-09-07 22:53:14,238 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_101.pdf
2025-09-07 22:53:14,238 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:53:14,238 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_51.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,238 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:53:14,238 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13052751872] Returning result: Mock-John Lee - 74%
2025-09-07 22:53:14,238 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:53:14,238 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:53:14,238 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Olivia Miller
2025-09-07 22:53:14,238 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13052751872] Starting processing file: resume_41.pdf
2025-09-07 22:53:14,238 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Emily Davis - 20%
2025-09-07 22:53:14,238 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13035925504_resume_51.pdf
2025-09-07 22:53:14,239 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,239 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6300741632_resume_81.pdf
2025-09-07 22:53:14,239 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13052751872] File details - Name: resume_41.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,239 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_31.pdf
2025-09-07 22:53:14,239 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 11/20 completed: resume_101.pdf - success
2025-09-07 22:53:14,239 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 26%
2025-09-07 22:53:14,239 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13052751872] Validating file type...
2025-09-07 22:53:14,239 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_31.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,239 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_81.pdf
2025-09-07 22:53:14,239 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 12/20 completed: resume_91.pdf - success
2025-09-07 22:53:14,239 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 22:53:14,239 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13052751872] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13052751872_resume_41.pdf
2025-09-07 22:53:14,239 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:53:14,239 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:53:14,239 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:53:14,239 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Emily Davis
2025-09-07 22:53:14,239 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:53:14,239 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6283915264_resume_31.pdf
2025-09-07 22:53:14,239 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Olivia Miller - 87%
2025-09-07 22:53:14,239 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6267088896_resume_61.pdf
2025-09-07 22:53:14,239 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_21.pdf
2025-09-07 22:53:14,239 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 13/20 completed: resume_81.pdf - success
2025-09-07 22:53:14,239 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_61.pdf
2025-09-07 22:53:14,240 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_21.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,240 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:53:14,240 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 14/20 completed: resume_71.pdf - success
2025-09-07 22:53:14,240 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:53:14,240 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:53:14,240 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13052751872] File saved successfully
2025-09-07 22:53:14,240 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13052751872] Validating PDF structure...
2025-09-07 22:53:14,240 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:53:14,240 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:53:14,240 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:53:14,241 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6300741632_resume_21.pdf
2025-09-07 22:53:14,241 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 429 characters
2025-09-07 22:53:14,241 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Emily Davis - 26%
2025-09-07 22:53:14,241 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:53:14,241 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13052751872] PDF validation passed
2025-09-07 22:53:14,242 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_11.pdf
2025-09-07 22:53:14,242 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 15/20 completed: resume_61.pdf - success
2025-09-07 22:53:14,242 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:53:14,242 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:53:14,242 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13052751872] Extracting text from PDF...
2025-09-07 22:53:14,242 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_11.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:53:14,242 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,242 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:53:14,242 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:53:14,242 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:53:14,242 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 83%
2025-09-07 22:53:14,242 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6267088896_resume_11.pdf
2025-09-07 22:53:14,242 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 22:53:14,242 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Alice Lee
2025-09-07 22:53:14,242 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13035925504_resume_51.pdf
2025-09-07 22:53:14,244 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13052751872] Text extracted successfully - 399 characters
2025-09-07 22:53:14,245 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 400 characters
2025-09-07 22:53:14,245 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:53:14,245 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_51.pdf
2025-09-07 22:53:14,246 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:53:14,246 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:53:14,246 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:53:14,246 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Alice Lee - 83%
2025-09-07 22:53:14,246 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:53:14,246 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:53:14,246 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13052751872] Mock mode - attempting to use cached response
2025-09-07 22:53:14,246 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 16/20 completed: resume_51.pdf - success
2025-09-07 22:53:14,247 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,247 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,247 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alex Johnson - 64%
2025-09-07 22:53:14,247 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 83%
2025-09-07 22:53:14,247 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: b1f5815d
2025-09-07 22:53:14,247 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:53:14,248 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Alex Johnson
2025-09-07 22:53:14,248 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 397 characters
2025-09-07 22:53:14,248 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13052751872] Using cached response: Mock-Olivia Miller
2025-09-07 22:53:14,248 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:53:14,248 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6283915264_resume_31.pdf
2025-09-07 22:53:14,248 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:53:14,248 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13052751872] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_13052751872_resume_41.pdf
2025-09-07 22:53:14,248 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:53:14,249 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13052751872] File processing completed successfully for: resume_41.pdf
2025-09-07 22:53:14,249 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_31.pdf
2025-09-07 22:53:14,249 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,250 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13052751872] Mock result - not saving to cache
2025-09-07 22:53:14,250 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 418 characters
2025-09-07 22:53:14,250 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:53:14,250 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 37%
2025-09-07 22:53:14,250 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13052751872] Returning result: Mock-Olivia Miller - 83%
2025-09-07 22:53:14,250 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:53:14,250 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Alex Johnson - 64%
2025-09-07 22:53:14,250 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 22:53:14,250 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 17/20 completed: resume_41.pdf - success
2025-09-07 22:53:14,250 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Isabella Martinez
2025-09-07 22:53:14,250 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 18/20 completed: resume_31.pdf - success
2025-09-07 22:53:14,250 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:53:14,250 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6300741632_resume_21.pdf
2025-09-07 22:53:14,250 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 34%
2025-09-07 22:53:14,250 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 22:53:14,250 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-David Smith
2025-09-07 22:53:14,250 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_21.pdf
2025-09-07 22:53:14,250 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225314_6267088896_resume_11.pdf
2025-09-07 22:53:14,250 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:53:14,250 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Isabella Martinez - 37%
2025-09-07 22:53:14,250 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_11.pdf
2025-09-07 22:53:14,250 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 19/20 completed: resume_21.pdf - success
2025-09-07 22:53:14,250 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:53:14,250 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-David Smith - 34%
2025-09-07 22:53:14,250 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 20/20 completed: resume_11.pdf - success
2025-09-07 22:53:14,251 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 20 results collected
2025-09-07 22:53:14,251 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 20, Failed: 0
2025-09-07 22:53:14,251 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:53:14,251 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Miller with 87% match
2025-09-07 22:53:14,251 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:53:14,251 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 37385 characters
2025-09-07 22:53:14,251 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 40628 bytes
2025-09-07 22:53:14,251 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:53:14] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:53:21,525 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:53:21,525 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256789.6428554-23706-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:53:09 GMT'}
2025-09-07 22:53:21,526 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23706 bytes
2025-09-07 22:53:21,526 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:53:21] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:53:21,531 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 22:53:21,531 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:53:21,532 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 22:53:21,532 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:53:21] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 22:54:23,350 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:54:23,351 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:54:23,351 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:54:23,352 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:54:23] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:54:23,365 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 22:54:23,365 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:54:23,366 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 22:54:23,366 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:54:23] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 22:54:23,374 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:54:23,374 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256789.6428554-23706-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:53:09 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:54:23,375 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23712 bytes
2025-09-07 22:54:23,377 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:54:23] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 22:54:23,382 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:54:23,383 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256686.8591614-54682-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:51:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:54:23,384 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 54682 bytes
2025-09-07 22:54:23,384 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:54:23] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:54:23,425 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:54:23,425 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:54:23,425 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:54:23,425 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:54:23,425 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:54:23] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:54:27,284 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:54:27,284 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '48838', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryzi9tKOy5EWx6Hptu', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:54:27,284 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryzi9tKOy5EWx6Hptu
2025-09-07 22:54:27,284 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 48838
2025-09-07 22:54:27,291 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:54:27,292 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[19 chars]'}
2025-09-07 22:54:27,292 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:54:27,292 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 20, Job desc length: 19, Mock: True
2025-09-07 22:54:27,292 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:54:27,292 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 20 files
2025-09-07 22:54:27,292 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:54:27,292 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_10.pdf
2025-09-07 22:54:27,293 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_9.pdf
2025-09-07 22:54:27,293 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_8.pdf
2025-09-07 22:54:27,293 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,293 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_7.pdf
2025-09-07 22:54:27,293 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,294 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:54:27,293 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_6.pdf
2025-09-07 22:54:27,294 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,294 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:54:27,294 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,294 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6267088896_resume_9.pdf
2025-09-07 22:54:27,295 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,295 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:54:27,295 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_13035925504_resume_6.pdf
2025-09-07 22:54:27,294 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 20 tasks submitted to thread pool
2025-09-07 22:54:27,295 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:54:27,295 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6250262528_resume_10.pdf
2025-09-07 22:54:27,295 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:54:27,296 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6300741632_resume_7.pdf
2025-09-07 22:54:27,296 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:54:27,296 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:54:27,296 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:54:27,296 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6283915264_resume_8.pdf
2025-09-07 22:54:27,296 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:54:27,296 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:54:27,298 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:54:27,296 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:54:27,298 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:54:27,299 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:54:27,299 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:54:27,301 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:54:27,301 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:54:27,301 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:54:27,301 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:54:27,302 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:54:27,302 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:54:27,303 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:54:27,306 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 1070 characters
2025-09-07 22:54:27,307 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:54:27,307 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:54:27,310 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 873 characters
2025-09-07 22:54:27,310 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:54:27,313 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 1093 characters
2025-09-07 22:54:27,313 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:54:27,313 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:54:27,314 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,314 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:54:27,314 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,316 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 870 characters
2025-09-07 22:54:27,316 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 78%
2025-09-07 22:54:27,316 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alex Johnson - 70%
2025-09-07 22:54:27,316 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:54:27,316 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,316 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:54:27,316 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: b1f5815d
2025-09-07 22:54:27,318 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 1125 characters
2025-09-07 22:54:27,319 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 73%
2025-09-07 22:54:27,319 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 22:54:27,319 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-John Lee
2025-09-07 22:54:27,319 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,319 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:54:27,319 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Alice Lee
2025-09-07 22:54:27,319 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Alex Johnson
2025-09-07 22:54:27,319 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6300741632_resume_7.pdf
2025-09-07 22:54:27,319 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_13035925504_resume_6.pdf
2025-09-07 22:54:27,319 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 39%
2025-09-07 22:54:27,319 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6250262528_resume_10.pdf
2025-09-07 22:54:27,320 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_10.pdf
2025-09-07 22:54:27,320 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:54:27,320 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Alice Lee - 73%
2025-09-07 22:54:27,320 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:54:27,320 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_5.pdf
2025-09-07 22:54:27,320 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_7.pdf
2025-09-07 22:54:27,320 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Taylor
2025-09-07 22:54:27,320 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/20 completed: resume_10.pdf - success
2025-09-07 22:54:27,319 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,320 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,320 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_6.pdf
2025-09-07 22:54:27,320 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:54:27,320 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6267088896_resume_9.pdf
2025-09-07 22:54:27,320 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:54:27,320 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 80%
2025-09-07 22:54:27,320 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:54:27,321 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-John Lee - 78%
2025-09-07 22:54:27,321 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6250262528_resume_5.pdf
2025-09-07 22:54:27,321 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_9.pdf
2025-09-07 22:54:27,321 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-07 22:54:27,321 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Alex Johnson - 70%
2025-09-07 22:54:27,321 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_4.pdf
2025-09-07 22:54:27,321 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:54:27,321 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-John Lee
2025-09-07 22:54:27,321 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_3.pdf
2025-09-07 22:54:27,321 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,321 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Taylor - 39%
2025-09-07 22:54:27,321 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6283915264_resume_8.pdf
2025-09-07 22:54:27,321 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:54:27,321 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,321 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:54:27,321 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_2.pdf
2025-09-07 22:54:27,321 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/20 completed: resume_9.pdf - success
2025-09-07 22:54:27,321 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:54:27,321 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_8.pdf
2025-09-07 22:54:27,321 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:54:27,321 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6300741632_resume_4.pdf
2025-09-07 22:54:27,322 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,322 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:54:27,322 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_13035925504_resume_3.pdf
2025-09-07 22:54:27,322 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:54:27,322 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-John Lee - 80%
2025-09-07 22:54:27,322 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:54:27,322 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6267088896_resume_2.pdf
2025-09-07 22:54:27,322 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_1.pdf
2025-09-07 22:54:27,322 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/20 completed: resume_8.pdf - success
2025-09-07 22:54:27,322 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:54:27,322 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:54:27,322 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,322 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:54:27,322 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/20 completed: resume_7.pdf - success
2025-09-07 22:54:27,322 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:54:27,323 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:54:27,323 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:54:27,323 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/20 completed: resume_6.pdf - success
2025-09-07 22:54:27,323 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6283915264_resume_1.pdf
2025-09-07 22:54:27,323 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:54:27,325 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 922 characters
2025-09-07 22:54:27,325 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:54:27,326 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:54:27,326 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:54:27,326 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:54:27,326 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:54:27,326 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:54:27,326 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:54:27,326 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:54:27,326 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,326 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 81%
2025-09-07 22:54:27,326 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-07 22:54:27,326 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Emily Taylor
2025-09-07 22:54:27,327 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6250262528_resume_5.pdf
2025-09-07 22:54:27,327 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:54:27,329 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_5.pdf
2025-09-07 22:54:27,329 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:54:27,329 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 902 characters
2025-09-07 22:54:27,330 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:54:27,331 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:54:27,331 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 889 characters
2025-09-07 22:54:27,330 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:54:27,331 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:54:27,331 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:54:27,331 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Emily Taylor - 81%
2025-09-07 22:54:27,332 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_101.pdf
2025-09-07 22:54:27,333 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1088 characters
2025-09-07 22:54:27,333 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,333 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,333 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_101.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,333 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/20 completed: resume_5.pdf - success
2025-09-07 22:54:27,335 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 859 characters
2025-09-07 22:54:27,335 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:54:27,335 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 32%
2025-09-07 22:54:27,335 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 78%
2025-09-07 22:54:27,335 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:54:27,335 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:54:27,335 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 22:54:27,335 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:54:27,335 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,335 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6250262528_resume_101.pdf
2025-09-07 22:54:27,335 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-James Anderson
2025-09-07 22:54:27,335 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-John Lee
2025-09-07 22:54:27,335 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,335 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 30%
2025-09-07 22:54:27,335 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_13035925504_resume_3.pdf
2025-09-07 22:54:27,335 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6300741632_resume_4.pdf
2025-09-07 22:54:27,335 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 31%
2025-09-07 22:54:27,335 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:54:27,336 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_3.pdf
2025-09-07 22:54:27,336 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:54:27,336 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:54:27,336 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:54:27,336 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:54:27,336 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_4.pdf
2025-09-07 22:54:27,337 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:54:27,337 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-John Lee - 78%
2025-09-07 22:54:27,336 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-James Anderson - 32%
2025-09-07 22:54:27,337 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_91.pdf
2025-09-07 22:54:27,337 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_81.pdf
2025-09-07 22:54:27,336 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Taylor
2025-09-07 22:54:27,337 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6267088896_resume_2.pdf
2025-09-07 22:54:27,336 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Daniel Wilson
2025-09-07 22:54:27,338 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6283915264_resume_1.pdf
2025-09-07 22:54:27,337 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/20 completed: resume_4.pdf - success
2025-09-07 22:54:27,337 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:54:27,338 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/20 completed: resume_3.pdf - success
2025-09-07 22:54:27,337 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_91.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,338 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_1.pdf
2025-09-07 22:54:27,338 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_2.pdf
2025-09-07 22:54:27,337 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_81.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,338 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:54:27,338 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:54:27,338 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:54:27,338 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:54:27,338 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:54:27,338 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_13035925504_resume_81.pdf
2025-09-07 22:54:27,338 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Daniel Wilson - 31%
2025-09-07 22:54:27,338 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Taylor - 30%
2025-09-07 22:54:27,339 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6300741632_resume_91.pdf
2025-09-07 22:54:27,339 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 405 characters
2025-09-07 22:54:27,339 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_71.pdf
2025-09-07 22:54:27,339 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_61.pdf
2025-09-07 22:54:27,339 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/20 completed: resume_2.pdf - success
2025-09-07 22:54:27,340 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:54:27,340 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_71.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,340 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_61.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,340 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:54:27,340 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:54:27,340 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:54:27,340 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:54:27,340 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:54:27,340 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,340 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/20 completed: resume_1.pdf - success
2025-09-07 22:54:27,340 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:54:27,340 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6283915264_resume_71.pdf
2025-09-07 22:54:27,341 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:54:27,341 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6267088896_resume_61.pdf
2025-09-07 22:54:27,341 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 27%
2025-09-07 22:54:27,341 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:54:27,341 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:54:27,341 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:54:27,341 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:54:27,341 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:54:27,341 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:54:27,341 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Daniel Wilson
2025-09-07 22:54:27,341 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:54:27,341 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:54:27,341 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6250262528_resume_101.pdf
2025-09-07 22:54:27,342 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 390 characters
2025-09-07 22:54:27,343 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:54:27,343 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_101.pdf
2025-09-07 22:54:27,343 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 409 characters
2025-09-07 22:54:27,344 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:54:27,344 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:54:27,344 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Daniel Wilson - 27%
2025-09-07 22:54:27,344 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:54:27,344 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_51.pdf
2025-09-07 22:54:27,344 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:54:27,344 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 11/20 completed: resume_101.pdf - success
2025-09-07 22:54:27,344 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:54:27,344 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,344 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_51.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,345 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:54:27,344 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,345 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 82%
2025-09-07 22:54:27,345 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:54:27,345 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 78%
2025-09-07 22:54:27,345 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:54:27,348 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 380 characters
2025-09-07 22:54:27,349 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 391 characters
2025-09-07 22:54:27,349 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6250262528_resume_51.pdf
2025-09-07 22:54:27,349 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-07 22:54:27,349 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Olivia Miller
2025-09-07 22:54:27,349 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:54:27,349 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:54:27,350 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-John Lee
2025-09-07 22:54:27,350 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_13035925504_resume_81.pdf
2025-09-07 22:54:27,350 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:54:27,350 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6300741632_resume_91.pdf
2025-09-07 22:54:27,350 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,350 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_81.pdf
2025-09-07 22:54:27,350 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,350 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:54:27,350 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 87%
2025-09-07 22:54:27,350 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_91.pdf
2025-09-07 22:54:27,350 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:54:27,350 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 29%
2025-09-07 22:54:27,350 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:54:27,350 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:54:27,350 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Olivia Miller - 82%
2025-09-07 22:54:27,351 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 22:54:27,351 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Emily Miller
2025-09-07 22:54:27,351 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-John Lee - 78%
2025-09-07 22:54:27,351 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:54:27,351 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_41.pdf
2025-09-07 22:54:27,351 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-David Smith
2025-09-07 22:54:27,351 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6267088896_resume_61.pdf
2025-09-07 22:54:27,351 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_31.pdf
2025-09-07 22:54:27,351 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 12/20 completed: resume_91.pdf - success
2025-09-07 22:54:27,351 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:54:27,351 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_41.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,351 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6283915264_resume_71.pdf
2025-09-07 22:54:27,351 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_31.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,351 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 13/20 completed: resume_81.pdf - success
2025-09-07 22:54:27,351 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_61.pdf
2025-09-07 22:54:27,351 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:54:27,351 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:54:27,351 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_71.pdf
2025-09-07 22:54:27,351 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:54:27,352 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_13035925504_resume_41.pdf
2025-09-07 22:54:27,353 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 429 characters
2025-09-07 22:54:27,353 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:54:27,353 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:54:27,353 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Emily Miller - 87%
2025-09-07 22:54:27,353 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6300741632_resume_31.pdf
2025-09-07 22:54:27,353 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-David Smith - 29%
2025-09-07 22:54:27,354 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_11.pdf
2025-09-07 22:54:27,354 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_11.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,354 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:54:27,354 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 14/20 completed: resume_71.pdf - success
2025-09-07 22:54:27,354 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6283915264_resume_11.pdf
2025-09-07 22:54:27,354 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_21.pdf
2025-09-07 22:54:27,354 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:54:27,354 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:54:27,354 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,354 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 15/20 completed: resume_61.pdf - success
2025-09-07 22:54:27,354 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_21.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:27,354 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:54:27,354 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:54:27,354 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 21%
2025-09-07 22:54:27,354 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:54:27,354 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:54:27,355 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:54:27,355 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-07 22:54:27,355 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6267088896_resume_21.pdf
2025-09-07 22:54:27,355 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:54:27,355 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:54:27,355 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Sophia Lee
2025-09-07 22:54:27,355 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:54:27,355 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6250262528_resume_51.pdf
2025-09-07 22:54:27,355 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:54:27,355 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:54:27,357 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:54:27,356 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 400 characters
2025-09-07 22:54:27,357 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_51.pdf
2025-09-07 22:54:27,357 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:54:27,357 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:54:27,357 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:54:27,357 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:54:27,358 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 399 characters
2025-09-07 22:54:27,358 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Sophia Lee - 21%
2025-09-07 22:54:27,358 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,359 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 418 characters
2025-09-07 22:54:27,359 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:54:27,359 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:54:27,359 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 16/20 completed: resume_51.pdf - success
2025-09-07 22:54:27,359 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 70%
2025-09-07 22:54:27,359 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:54:27,359 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:54:27,359 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,359 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-07 22:54:27,360 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 20%
2025-09-07 22:54:27,360 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,360 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-John Lee
2025-09-07 22:54:27,360 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 22:54:27,360 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 81%
2025-09-07 22:54:27,360 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6300741632_resume_31.pdf
2025-09-07 22:54:27,361 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 397 characters
2025-09-07 22:54:27,361 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:54:27,361 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Emily Davis
2025-09-07 22:54:27,361 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_13035925504_resume_41.pdf
2025-09-07 22:54:27,361 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:54:27,361 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Emily Miller
2025-09-07 22:54:27,361 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_31.pdf
2025-09-07 22:54:27,361 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:54:27,361 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-John Lee - 70%
2025-09-07 22:54:27,361 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_41.pdf
2025-09-07 22:54:27,361 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:27,361 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6283915264_resume_11.pdf
2025-09-07 22:54:27,362 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:54:27,362 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 71%
2025-09-07 22:54:27,362 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Emily Davis - 20%
2025-09-07 22:54:27,362 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:54:27,362 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_11.pdf
2025-09-07 22:54:27,362 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:54:27,362 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Emily Miller - 81%
2025-09-07 22:54:27,362 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 17/20 completed: resume_41.pdf - success
2025-09-07 22:54:27,362 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-John Lee
2025-09-07 22:54:27,362 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 18/20 completed: resume_31.pdf - success
2025-09-07 22:54:27,362 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225427_6267088896_resume_21.pdf
2025-09-07 22:54:27,362 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_21.pdf
2025-09-07 22:54:27,362 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:54:27,362 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-John Lee - 71%
2025-09-07 22:54:27,362 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 19/20 completed: resume_21.pdf - success
2025-09-07 22:54:27,362 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 20/20 completed: resume_11.pdf - success
2025-09-07 22:54:27,362 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 20 results collected
2025-09-07 22:54:27,362 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 20, Failed: 0
2025-09-07 22:54:27,362 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:54:27,362 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Emily Miller with 87% match
2025-09-07 22:54:27,362 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:54:27,363 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 37197 characters
2025-09-07 22:54:27,363 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 40422 bytes
2025-09-07 22:54:27,363 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:54:27] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:54:41,845 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:54:41,845 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:54:41,846 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:54:41,846 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:54:41] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:54:41,869 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 22:54:41,870 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:54:41,870 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:54:41,871 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 22:54:41,872 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256862.801034-23712-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:54:22 GMT'}
2025-09-07 22:54:41,872 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:54:41,873 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:54:41] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 22:54:41,873 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256686.8591614-54682-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:51:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:54:41,875 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23733 bytes
2025-09-07 22:54:41,876 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 54682 bytes
2025-09-07 22:54:41,876 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:54:41] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 22:54:41,876 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:54:41] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:54:41,973 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:54:41,974 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:54:41,974 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:54:41,974 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:54:41,974 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:54:41] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:54:45,669 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:54:45,670 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '48840', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryTfUV6zJBGWVmW84H', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:54:45,670 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryTfUV6zJBGWVmW84H
2025-09-07 22:54:45,670 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 48840
2025-09-07 22:54:45,672 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:54:45,674 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[21 chars]'}
2025-09-07 22:54:45,674 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:54:45,675 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 20, Job desc length: 21, Mock: True
2025-09-07 22:54:45,675 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:54:45,675 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 20 files
2025-09-07 22:54:45,675 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:54:45,676 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_10.pdf
2025-09-07 22:54:45,676 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,676 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:54:45,677 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6233436160_resume_10.pdf
2025-09-07 22:54:45,677 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_9.pdf
2025-09-07 22:54:45,677 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_8.pdf
2025-09-07 22:54:45,678 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,680 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:54:45,678 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:54:45,677 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,684 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6267088896_resume_8.pdf
2025-09-07 22:54:45,678 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_7.pdf
2025-09-07 22:54:45,684 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_6.pdf
2025-09-07 22:54:45,684 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:54:45,685 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 20 tasks submitted to thread pool
2025-09-07 22:54:45,685 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:54:45,685 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,685 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,685 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6250262528_resume_9.pdf
2025-09-07 22:54:45,686 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:54:45,686 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:54:45,686 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:54:45,686 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:54:45,687 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6283915264_resume_7.pdf
2025-09-07 22:54:45,687 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6300741632_resume_6.pdf
2025-09-07 22:54:45,687 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:54:45,687 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:54:45,687 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:54:45,687 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:54:45,687 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:54:45,689 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:54:45,688 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:54:45,691 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:54:45,688 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:54:45,692 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:54:45,695 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:54:45,700 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 1093 characters
2025-09-07 22:54:45,700 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:54:45,700 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:54:45,701 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:54:45,701 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:54:45,702 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:54:45,704 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1125 characters
2025-09-07 22:54:45,705 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,706 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:54:45,711 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:54:45,712 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 870 characters
2025-09-07 22:54:45,713 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 1070 characters
2025-09-07 22:54:45,713 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 32%
2025-09-07 22:54:45,713 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:54:45,713 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:54:45,714 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,714 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:54:45,717 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 873 characters
2025-09-07 22:54:45,717 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 86%
2025-09-07 22:54:45,718 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,718 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Daniel Wilson
2025-09-07 22:54:45,718 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,718 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:54:45,718 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:54:45,718 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 35%
2025-09-07 22:54:45,718 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6233436160_resume_10.pdf
2025-09-07 22:54:45,718 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 35%
2025-09-07 22:54:45,718 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Miller
2025-09-07 22:54:45,718 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 22:54:45,718 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6267088896_resume_8.pdf
2025-09-07 22:54:45,719 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_10.pdf
2025-09-07 22:54:45,719 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-David Smith
2025-09-07 22:54:45,719 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 76%
2025-09-07 22:54:45,719 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-James Anderson
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6250262528_resume_9.pdf
2025-09-07 22:54:45,719 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_8.pdf
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6283915264_resume_7.pdf
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Daniel Wilson - 32%
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:54:45,719 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Alice Lee
2025-09-07 22:54:45,719 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_5.pdf
2025-09-07 22:54:45,719 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_7.pdf
2025-09-07 22:54:45,719 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_9.pdf
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Miller - 86%
2025-09-07 22:54:45,719 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/20 completed: resume_10.pdf - success
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6300741632_resume_6.pdf
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:54:45,719 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_4.pdf
2025-09-07 22:54:45,719 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-James Anderson - 35%
2025-09-07 22:54:45,720 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_6.pdf
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-David Smith - 35%
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6233436160_resume_5.pdf
2025-09-07 22:54:45,720 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_3.pdf
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:54:45,720 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_2.pdf
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:54:45,720 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/20 completed: resume_9.pdf - success
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Alice Lee - 76%
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6267088896_resume_4.pdf
2025-09-07 22:54:45,720 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/20 completed: resume_8.pdf - success
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:54:45,720 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_1.pdf
2025-09-07 22:54:45,720 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:54:45,720 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/20 completed: resume_7.pdf - success
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6283915264_resume_3.pdf
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:54:45,720 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:54:45,720 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6250262528_resume_2.pdf
2025-09-07 22:54:45,721 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/20 completed: resume_6.pdf - success
2025-09-07 22:54:45,721 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:54:45,721 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:54:45,721 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:54:45,721 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6300741632_resume_1.pdf
2025-09-07 22:54:45,721 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:54:45,721 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:54:45,721 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:54:45,721 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:54:45,721 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:54:45,722 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:54:45,722 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:54:45,722 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:54:45,722 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:54:45,723 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:54:45,726 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 922 characters
2025-09-07 22:54:45,726 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:54:45,726 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:54:45,726 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:54:45,728 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:54:45,728 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 889 characters
2025-09-07 22:54:45,728 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,729 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:54:45,729 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:54:45,729 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 78%
2025-09-07 22:54:45,730 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 902 characters
2025-09-07 22:54:45,730 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:54:45,730 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,730 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-07 22:54:45,731 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:54:45,733 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 1088 characters
2025-09-07 22:54:45,734 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 90%
2025-09-07 22:54:45,734 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-John Lee
2025-09-07 22:54:45,735 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 859 characters
2025-09-07 22:54:45,736 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:54:45,736 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-07 22:54:45,736 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6233436160_resume_5.pdf
2025-09-07 22:54:45,736 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:54:45,736 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,736 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Johnson
2025-09-07 22:54:45,736 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,736 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,736 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Brown - 78%
2025-09-07 22:54:45,736 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6267088896_resume_4.pdf
2025-09-07 22:54:45,736 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_5.pdf
2025-09-07 22:54:45,736 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 26%
2025-09-07 22:54:45,736 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 563bcf30
2025-09-07 22:54:45,736 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 90%
2025-09-07 22:54:45,736 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:54:45,736 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 22:54:45,736 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_4.pdf
2025-09-07 22:54:45,736 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Alice Brown
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-John Lee - 78%
2025-09-07 22:54:45,737 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-David Smith
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6283915264_resume_3.pdf
2025-09-07 22:54:45,737 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Emily Miller
2025-09-07 22:54:45,737 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_101.pdf
2025-09-07 22:54:45,737 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/20 completed: resume_5.pdf - success
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6300741632_resume_1.pdf
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Johnson - 90%
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6250262528_resume_2.pdf
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_101.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,737 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_3.pdf
2025-09-07 22:54:45,737 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_91.pdf
2025-09-07 22:54:45,737 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_1.pdf
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:54:45,737 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/20 completed: resume_4.pdf - success
2025-09-07 22:54:45,737 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_2.pdf
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_91.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6233436160_resume_101.pdf
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Alice Brown - 78%
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-David Smith - 26%
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Emily Miller - 90%
2025-09-07 22:54:45,737 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_81.pdf
2025-09-07 22:54:45,737 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/20 completed: resume_3.pdf - success
2025-09-07 22:54:45,737 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6267088896_resume_91.pdf
2025-09-07 22:54:45,737 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_71.pdf
2025-09-07 22:54:45,737 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_61.pdf
2025-09-07 22:54:45,738 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_81.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,738 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:54:45,738 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/20 completed: resume_2.pdf - success
2025-09-07 22:54:45,738 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_71.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,738 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_61.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,738 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:54:45,738 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:54:45,738 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/20 completed: resume_1.pdf - success
2025-09-07 22:54:45,738 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:54:45,738 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:54:45,738 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:54:45,738 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6283915264_resume_81.pdf
2025-09-07 22:54:45,738 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6300741632_resume_71.pdf
2025-09-07 22:54:45,738 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:54:45,738 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6250262528_resume_61.pdf
2025-09-07 22:54:45,738 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:54:45,738 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:54:45,738 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:54:45,739 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:54:45,739 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:54:45,739 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:54:45,739 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:54:45,739 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:54:45,739 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:54:45,739 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:54:45,739 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:54:45,740 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:54:45,740 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:54:45,742 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:54:45,742 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 405 characters
2025-09-07 22:54:45,743 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:54:45,743 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 409 characters
2025-09-07 22:54:45,743 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:54:45,743 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:54:45,743 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:54:45,743 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,744 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 76%
2025-09-07 22:54:45,744 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,745 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 391 characters
2025-09-07 22:54:45,746 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 380 characters
2025-09-07 22:54:45,747 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 390 characters
2025-09-07 22:54:45,747 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 22:54:45,747 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:54:45,747 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 21%
2025-09-07 22:54:45,747 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:54:45,747 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:54:45,747 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Alice Lee
2025-09-07 22:54:45,747 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-07 22:54:45,747 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,748 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Sophia Lee
2025-09-07 22:54:45,748 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6267088896_resume_91.pdf
2025-09-07 22:54:45,748 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6233436160_resume_101.pdf
2025-09-07 22:54:45,748 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,749 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 31%
2025-09-07 22:54:45,749 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 22:54:45,748 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,748 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 30%
2025-09-07 22:54:45,749 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_91.pdf
2025-09-07 22:54:45,749 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-James Anderson
2025-09-07 22:54:45,749 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_101.pdf
2025-09-07 22:54:45,749 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 25%
2025-09-07 22:54:45,749 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:54:45,749 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:54:45,749 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6250262528_resume_61.pdf
2025-09-07 22:54:45,749 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:54:45,749 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Alice Lee - 76%
2025-09-07 22:54:45,749 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Daniel Wilson
2025-09-07 22:54:45,749 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Sophia Lee - 21%
2025-09-07 22:54:45,750 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_51.pdf
2025-09-07 22:54:45,749 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:54:45,750 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 11/20 completed: resume_101.pdf - success
2025-09-07 22:54:45,750 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_61.pdf
2025-09-07 22:54:45,750 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6300741632_resume_71.pdf
2025-09-07 22:54:45,750 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_41.pdf
2025-09-07 22:54:45,750 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_41.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,750 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_51.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,750 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 12/20 completed: resume_91.pdf - success
2025-09-07 22:54:45,750 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:54:45,750 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:54:45,750 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Daniel Wilson
2025-09-07 22:54:45,750 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:54:45,750 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-James Anderson - 31%
2025-09-07 22:54:45,750 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6267088896_resume_41.pdf
2025-09-07 22:54:45,750 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6283915264_resume_81.pdf
2025-09-07 22:54:45,750 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_71.pdf
2025-09-07 22:54:45,750 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:54:45,750 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_31.pdf
2025-09-07 22:54:45,750 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6233436160_resume_51.pdf
2025-09-07 22:54:45,750 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Daniel Wilson - 30%
2025-09-07 22:54:45,750 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_81.pdf
2025-09-07 22:54:45,750 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_31.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,751 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_21.pdf
2025-09-07 22:54:45,751 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:54:45,751 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:54:45,751 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:54:45,751 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_21.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,751 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Daniel Wilson - 25%
2025-09-07 22:54:45,751 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6250262528_resume_31.pdf
2025-09-07 22:54:45,751 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:54:45,751 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:54:45,751 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:54:45,751 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_11.pdf
2025-09-07 22:54:45,751 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 13/20 completed: resume_81.pdf - success
2025-09-07 22:54:45,751 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:54:45,751 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6300741632_resume_21.pdf
2025-09-07 22:54:45,751 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_11.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:54:45,751 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 14/20 completed: resume_71.pdf - success
2025-09-07 22:54:45,751 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:54:45,751 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:54:45,751 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:54:45,751 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 15/20 completed: resume_61.pdf - success
2025-09-07 22:54:45,752 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:54:45,752 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:54:45,752 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6283915264_resume_11.pdf
2025-09-07 22:54:45,752 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:54:45,752 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:54:45,752 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:54:45,752 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:54:45,752 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:54:45,752 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:54:45,754 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 400 characters
2025-09-07 22:54:45,754 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:54:45,755 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 399 characters
2025-09-07 22:54:45,755 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:54:45,755 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:54:45,755 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:54:45,755 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:54:45,758 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 429 characters
2025-09-07 22:54:45,758 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:54:45,758 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,758 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,759 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:54:45,759 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:54:45,759 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 78%
2025-09-07 22:54:45,759 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Michael Brown - 35%
2025-09-07 22:54:45,759 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:54:45,760 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 397 characters
2025-09-07 22:54:45,760 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:54:45,760 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,760 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 399c9734
2025-09-07 22:54:45,760 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:54:45,760 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-John Lee
2025-09-07 22:54:45,760 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 81%
2025-09-07 22:54:45,760 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Michael Brown
2025-09-07 22:54:45,761 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 418 characters
2025-09-07 22:54:45,761 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6267088896_resume_41.pdf
2025-09-07 22:54:45,761 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-07 22:54:45,761 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,761 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6250262528_resume_31.pdf
2025-09-07 22:54:45,761 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:54:45,761 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Emily Taylor
2025-09-07 22:54:45,761 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 40%
2025-09-07 22:54:45,761 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_41.pdf
2025-09-07 22:54:45,762 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_31.pdf
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6233436160_resume_51.pdf
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:54:45,762 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 80%
2025-09-07 22:54:45,762 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Olivia Taylor
2025-09-07 22:54:45,762 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_51.pdf
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-John Lee - 78%
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Michael Brown - 35%
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6300741632_resume_21.pdf
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:54:45,762 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Emily Taylor
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Emily Taylor - 81%
2025-09-07 22:54:45,762 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_21.pdf
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225445_6283915264_resume_11.pdf
2025-09-07 22:54:45,762 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 16/20 completed: resume_51.pdf - success
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:54:45,762 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 17/20 completed: resume_41.pdf - success
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Olivia Taylor - 40%
2025-09-07 22:54:45,762 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_11.pdf
2025-09-07 22:54:45,762 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 18/20 completed: resume_31.pdf - success
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:54:45,762 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 19/20 completed: resume_21.pdf - success
2025-09-07 22:54:45,762 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Emily Taylor - 80%
2025-09-07 22:54:45,762 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 20/20 completed: resume_11.pdf - success
2025-09-07 22:54:45,762 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 20 results collected
2025-09-07 22:54:45,763 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 20, Failed: 0
2025-09-07 22:54:45,763 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:54:45,763 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Johnson with 90% match
2025-09-07 22:54:45,763 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:54:45,763 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 36037 characters
2025-09-07 22:54:45,763 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 39206 bytes
2025-09-07 22:54:45,763 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:54:45] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:55:01,057 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:55:01,057 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:55:01,058 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:55:01,058 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:01] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:55:01,073 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:55:01,074 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256881.3617587-23733-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:54:41 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:01,074 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:55:01,074 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256686.8591614-54682-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:51:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:01,075 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23733 bytes
2025-09-07 22:55:01,075 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 54682 bytes
2025-09-07 22:55:01,075 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:01] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:55:01,075 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:01] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:55:01,115 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:55:01,115 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:01,115 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:55:01,116 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:55:01,116 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:01] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:55:04,471 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:55:04,472 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2745', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarylUOWfOGYOV7eBNIc', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:04,473 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarylUOWfOGYOV7eBNIc
2025-09-07 22:55:04,473 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2745
2025-09-07 22:55:04,474 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf']
2025-09-07 22:55:04,474 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[15 chars]'}
2025-09-07 22:55:04,474 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:55:04,474 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 15, Mock: True
2025-09-07 22:55:04,474 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf']
2025-09-07 22:55:04,474 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 22:55:04,474 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:55:04,475 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_10.pdf
2025-09-07 22:55:04,475 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 22:55:04,475 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:04,475 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:55:04,475 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225504_6216609792_resume_10.pdf
2025-09-07 22:55:04,476 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:55:04,476 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:55:04,476 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:55:04,477 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:55:04,483 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 1093 characters
2025-09-07 22:55:04,484 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:55:04,484 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:04,484 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 80%
2025-09-07 22:55:04,485 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-07 22:55:04,485 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Emily Taylor
2025-09-07 22:55:04,485 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225504_6216609792_resume_10.pdf
2025-09-07 22:55:04,485 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_10.pdf
2025-09-07 22:55:04,485 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:55:04,485 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Emily Taylor - 80%
2025-09-07 22:55:04,485 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: resume_10.pdf - success
2025-09-07 22:55:04,486 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 22:55:04,486 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 22:55:04,486 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:55:04,487 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Emily Taylor with 80% match
2025-09-07 22:55:04,488 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 22:55:04,488 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:55:04,488 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 3992 characters
2025-09-07 22:55:04,488 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4233 bytes
2025-09-07 22:55:04,489 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:04] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:55:09,385 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:55:09,385 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2660', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryiOn4mz2169zMj98u', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:09,385 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryiOn4mz2169zMj98u
2025-09-07 22:55:09,385 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2660
2025-09-07 22:55:09,386 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_9.pdf']
2025-09-07 22:55:09,387 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[15 chars]'}
2025-09-07 22:55:09,387 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:55:09,387 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 15, Mock: True
2025-09-07 22:55:09,388 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_9.pdf']
2025-09-07 22:55:09,388 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 22:55:09,388 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:55:09,389 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_9.pdf
2025-09-07 22:55:09,389 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 22:55:09,389 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:09,389 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:55:09,389 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225509_6216609792_resume_9.pdf
2025-09-07 22:55:09,390 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:55:09,390 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:55:09,398 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:55:09,398 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:55:09,406 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 870 characters
2025-09-07 22:55:09,406 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:55:09,406 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:09,406 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 74%
2025-09-07 22:55:09,406 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:55:09,407 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-John Lee
2025-09-07 22:55:09,407 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225509_6216609792_resume_9.pdf
2025-09-07 22:55:09,407 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_9.pdf
2025-09-07 22:55:09,407 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:55:09,407 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-John Lee - 74%
2025-09-07 22:55:09,407 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: resume_9.pdf - success
2025-09-07 22:55:09,407 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 22:55:09,407 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 22:55:09,407 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:55:09,407 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-John Lee with 74% match
2025-09-07 22:55:09,407 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 22:55:09,407 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:55:09,407 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 4504 characters
2025-09-07 22:55:09,408 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4757 bytes
2025-09-07 22:55:09,408 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:09] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:55:12,775 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:55:12,776 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:55:12,776 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:55:12,777 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:12] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:55:12,790 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:55:12,790 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256881.3617587-23733-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:54:41 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:12,792 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:55:12,792 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256686.8591614-54682-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:51:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:12,793 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23733 bytes
2025-09-07 22:55:12,793 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:12] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:55:12,793 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 54682 bytes
2025-09-07 22:55:12,796 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:12] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:55:12,805 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:55:12,806 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:12,806 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:55:12,806 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:55:12,806 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:12] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:55:16,480 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:55:16,480 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2741', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryyUeOaK4OUsC3NbAm', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:16,480 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryyUeOaK4OUsC3NbAm
2025-09-07 22:55:16,481 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2741
2025-09-07 22:55:16,482 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf']
2025-09-07 22:55:16,482 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[11 chars]'}
2025-09-07 22:55:16,482 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:55:16,482 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 11, Mock: True
2025-09-07 22:55:16,482 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf']
2025-09-07 22:55:16,482 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 22:55:16,482 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:55:16,482 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_10.pdf
2025-09-07 22:55:16,483 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 22:55:16,483 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:16,483 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 22:55:16,483 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225516_6216609792_resume_10.pdf
2025-09-07 22:55:16,484 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 22:55:16,484 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 22:55:16,484 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 22:55:16,484 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 22:55:16,491 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 1093 characters
2025-09-07 22:55:16,491 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 22:55:16,492 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:16,492 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 32%
2025-09-07 22:55:16,492 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:55:16,492 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Olivia Taylor
2025-09-07 22:55:16,492 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225516_6216609792_resume_10.pdf
2025-09-07 22:55:16,492 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_10.pdf
2025-09-07 22:55:16,492 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 22:55:16,492 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Olivia Taylor - 32%
2025-09-07 22:55:16,492 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: resume_10.pdf - success
2025-09-07 22:55:16,493 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 22:55:16,493 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 22:55:16,493 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:55:16,493 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Taylor with 32% match
2025-09-07 22:55:16,493 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 22:55:16,493 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:55:16,493 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 3624 characters
2025-09-07 22:55:16,497 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 3853 bytes
2025-09-07 22:55:16,497 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:16] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:55:18,356 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:55:18,356 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256881.3617587-23733-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:54:41 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:18,357 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23733 bytes
2025-09-07 22:55:18,357 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:18] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:55:18,362 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 22:55:18,363 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:18,363 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 22:55:18,363 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:18] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 22:55:32,542 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:55:32,542 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2727', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary79rcII4UXAQGB4vv', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:32,542 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundary79rcII4UXAQGB4vv
2025-09-07 22:55:32,542 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2727
2025-09-07 22:55:32,544 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_7.pdf']
2025-09-07 22:55:32,544 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[11 chars]'}
2025-09-07 22:55:32,545 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:55:32,545 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 11, Mock: True
2025-09-07 22:55:32,545 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_7.pdf']
2025-09-07 22:55:32,545 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 22:55:32,545 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:55:32,545 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_7.pdf
2025-09-07 22:55:32,545 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 22:55:32,545 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:32,546 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 22:55:32,546 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225532_6233436160_resume_7.pdf
2025-09-07 22:55:32,546 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 22:55:32,546 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 22:55:32,547 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 22:55:32,547 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 22:55:32,552 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 1070 characters
2025-09-07 22:55:32,554 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 22:55:32,556 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:32,556 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 21%
2025-09-07 22:55:32,556 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 22:55:32,556 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Emily Davis
2025-09-07 22:55:32,556 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225532_6233436160_resume_7.pdf
2025-09-07 22:55:32,556 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_7.pdf
2025-09-07 22:55:32,557 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 22:55:32,557 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Emily Davis - 21%
2025-09-07 22:55:32,557 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: resume_7.pdf - success
2025-09-07 22:55:32,557 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 22:55:32,557 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 22:55:32,557 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:55:32,557 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Emily Davis with 21% match
2025-09-07 22:55:32,557 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 22:55:32,557 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:55:32,558 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 3636 characters
2025-09-07 22:55:32,558 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 3877 bytes
2025-09-07 22:55:32,558 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:32] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:55:39,694 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:55:39,695 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:55:39,696 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:55:39,696 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:39] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:55:39,714 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 22:55:39,714 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:39,715 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 22:55:39,717 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:55:39,718 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:39] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 22:55:39,719 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:55:39,720 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256881.3617587-23733-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:54:41 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:39,721 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256686.8591614-54682-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:51:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:39,723 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 54682 bytes
2025-09-07 22:55:39,723 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:39] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:55:39,724 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23717 bytes
2025-09-07 22:55:39,724 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:39] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 22:55:39,818 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:55:39,818 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:39,818 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:55:39,818 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:55:39,818 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:39] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:55:43,932 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:55:43,932 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2666', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryGuVOIbTwoltOGyVq', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:43,932 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryGuVOIbTwoltOGyVq
2025-09-07 22:55:43,933 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2666
2025-09-07 22:55:43,933 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_9.pdf']
2025-09-07 22:55:43,933 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[21 chars]'}
2025-09-07 22:55:43,934 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:55:43,934 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 21, Mock: True
2025-09-07 22:55:43,934 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_9.pdf']
2025-09-07 22:55:43,934 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 22:55:43,934 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:55:43,934 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_9.pdf
2025-09-07 22:55:43,934 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 22:55:43,934 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:43,934 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:55:43,934 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225543_6250262528_resume_9.pdf
2025-09-07 22:55:43,935 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:55:43,935 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:55:43,936 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:55:43,936 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:55:43,943 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 870 characters
2025-09-07 22:55:43,947 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:55:43,948 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:43,949 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 81%
2025-09-07 22:55:43,949 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-07 22:55:43,949 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Emily Taylor
2025-09-07 22:55:43,950 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225543_6250262528_resume_9.pdf
2025-09-07 22:55:43,950 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_9.pdf
2025-09-07 22:55:43,950 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:55:43,950 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Emily Taylor - 81%
2025-09-07 22:55:43,950 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: resume_9.pdf - success
2025-09-07 22:55:43,950 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 22:55:43,950 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 22:55:43,951 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:55:43,951 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Emily Taylor with 81% match
2025-09-07 22:55:43,951 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 22:55:43,951 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:55:43,951 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 3996 characters
2025-09-07 22:55:43,951 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4237 bytes
2025-09-07 22:55:43,951 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:43] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:55:49,385 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:55:49,385 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '46341', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryK2UyKGd40a9D9nIp', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:49,386 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryK2UyKGd40a9D9nIp
2025-09-07 22:55:49,386 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 46341
2025-09-07 22:55:49,388 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:55:49,388 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[21 chars]'}
2025-09-07 22:55:49,388 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:55:49,388 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 19, Job desc length: 21, Mock: True
2025-09-07 22:55:49,388 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:55:49,388 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 19 files
2025-09-07 22:55:49,388 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:55:49,391 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_10.pdf
2025-09-07 22:55:49,392 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,392 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_8.pdf
2025-09-07 22:55:49,392 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:55:49,392 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_7.pdf
2025-09-07 22:55:49,394 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,393 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,394 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:55:49,393 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_5.pdf
2025-09-07 22:55:49,394 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6250262528_resume_10.pdf
2025-09-07 22:55:49,394 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:55:49,395 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6283915264_resume_7.pdf
2025-09-07 22:55:49,393 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_6.pdf
2025-09-07 22:55:49,393 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 19 tasks submitted to thread pool
2025-09-07 22:55:49,395 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,395 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6267088896_resume_8.pdf
2025-09-07 22:55:49,395 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,396 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:55:49,396 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:55:49,396 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:55:49,396 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:55:49,396 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_13035925504_resume_5.pdf
2025-09-07 22:55:49,396 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:55:49,396 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:55:49,396 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6300741632_resume_6.pdf
2025-09-07 22:55:49,401 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:55:49,402 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:55:49,402 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:55:49,402 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:55:49,402 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:55:49,403 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:55:49,403 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:55:49,404 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:55:49,405 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:55:49,403 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:55:49,405 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:55:49,410 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 1093 characters
2025-09-07 22:55:49,411 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:55:49,411 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:55:49,411 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:55:49,411 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:55:49,411 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:55:49,412 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:55:49,415 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 873 characters
2025-09-07 22:55:49,416 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,416 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:55:49,418 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 1070 characters
2025-09-07 22:55:49,418 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Brown - 75%
2025-09-07 22:55:49,419 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:55:49,419 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 563bcf30
2025-09-07 22:55:49,421 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 922 characters
2025-09-07 22:55:49,424 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:55:49,421 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,422 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Alice Brown
2025-09-07 22:55:49,424 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1125 characters
2025-09-07 22:55:49,421 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,424 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 23%
2025-09-07 22:55:49,424 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6250262528_resume_10.pdf
2025-09-07 22:55:49,424 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:55:49,425 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-07 22:55:49,425 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 32%
2025-09-07 22:55:49,425 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,425 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_10.pdf
2025-09-07 22:55:49,425 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Maria Gonzalez
2025-09-07 22:55:49,425 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 22:55:49,425 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 36%
2025-09-07 22:55:49,425 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:55:49,425 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,425 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6283915264_resume_7.pdf
2025-09-07 22:55:49,425 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Isabella Martinez
2025-09-07 22:55:49,425 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:55:49,426 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Alice Brown - 75%
2025-09-07 22:55:49,426 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 90%
2025-09-07 22:55:49,426 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6300741632_resume_6.pdf
2025-09-07 22:55:49,426 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Olivia Taylor
2025-09-07 22:55:49,426 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_7.pdf
2025-09-07 22:55:49,426 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_4.pdf
2025-09-07 22:55:49,426 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:55:49,426 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/19 completed: resume_10.pdf - success
2025-09-07 22:55:49,426 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_13035925504_resume_5.pdf
2025-09-07 22:55:49,426 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:55:49,426 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Maria Gonzalez - 23%
2025-09-07 22:55:49,426 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_3.pdf
2025-09-07 22:55:49,426 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Miller
2025-09-07 22:55:49,426 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_5.pdf
2025-09-07 22:55:49,426 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,426 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,426 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_6.pdf
2025-09-07 22:55:49,426 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6267088896_resume_8.pdf
2025-09-07 22:55:49,426 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:55:49,426 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:55:49,426 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:55:49,427 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:55:49,427 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Olivia Taylor - 36%
2025-09-07 22:55:49,427 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_8.pdf
2025-09-07 22:55:49,427 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6283915264_resume_3.pdf
2025-09-07 22:55:49,427 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6250262528_resume_4.pdf
2025-09-07 22:55:49,427 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Isabella Martinez - 32%
2025-09-07 22:55:49,427 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_2.pdf
2025-09-07 22:55:49,427 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:55:49,427 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_1.pdf
2025-09-07 22:55:49,427 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,427 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Miller - 90%
2025-09-07 22:55:49,427 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,427 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:55:49,428 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:55:49,428 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_101.pdf
2025-09-07 22:55:49,428 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:55:49,428 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:55:49,428 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/19 completed: resume_8.pdf - success
2025-09-07 22:55:49,428 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_13035925504_resume_2.pdf
2025-09-07 22:55:49,428 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:55:49,428 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_101.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,428 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:55:49,428 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6300741632_resume_1.pdf
2025-09-07 22:55:49,428 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/19 completed: resume_7.pdf - success
2025-09-07 22:55:49,428 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:55:49,428 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/19 completed: resume_6.pdf - success
2025-09-07 22:55:49,428 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6267088896_resume_101.pdf
2025-09-07 22:55:49,428 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:55:49,428 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/19 completed: resume_5.pdf - success
2025-09-07 22:55:49,428 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:55:49,429 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:55:49,429 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:55:49,429 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:55:49,429 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:55:49,429 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:55:49,429 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:55:49,429 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:55:49,429 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:55:49,430 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:55:49,430 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:55:49,430 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:55:49,430 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:55:49,433 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 902 characters
2025-09-07 22:55:49,434 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:55:49,434 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:55:49,435 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 889 characters
2025-09-07 22:55:49,435 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:55:49,435 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:55:49,436 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,437 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 859 characters
2025-09-07 22:55:49,438 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 37%
2025-09-07 22:55:49,438 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:55:49,438 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,440 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 1088 characters
2025-09-07 22:55:49,441 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 22:55:49,442 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 405 characters
2025-09-07 22:55:49,442 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Michael Brown - 40%
2025-09-07 22:55:49,442 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:55:49,442 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,442 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-James Anderson
2025-09-07 22:55:49,442 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:55:49,442 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 399c9734
2025-09-07 22:55:49,442 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 30%
2025-09-07 22:55:49,442 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6283915264_resume_3.pdf
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,443 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Michael Brown
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,443 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 34%
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6250262528_resume_4.pdf
2025-09-07 22:55:49,443 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Olivia Taylor
2025-09-07 22:55:49,443 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 21%
2025-09-07 22:55:49,443 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_3.pdf
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6300741632_resume_1.pdf
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-07 22:55:49,443 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_4.pdf
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:55:49,443 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Olivia Taylor
2025-09-07 22:55:49,443 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Maria Gonzalez
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:55:49,443 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_1.pdf
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-James Anderson - 37%
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_13035925504_resume_2.pdf
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6267088896_resume_101.pdf
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Michael Brown - 40%
2025-09-07 22:55:49,443 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:55:49,443 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_91.pdf
2025-09-07 22:55:49,444 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_81.pdf
2025-09-07 22:55:49,444 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_2.pdf
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Olivia Taylor - 30%
2025-09-07 22:55:49,444 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/19 completed: resume_4.pdf - success
2025-09-07 22:55:49,444 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_101.pdf
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_91.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_81.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:55:49,444 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_71.pdf
2025-09-07 22:55:49,444 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/19 completed: resume_3.pdf - success
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Olivia Taylor - 34%
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_71.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Maria Gonzalez - 21%
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6283915264_resume_91.pdf
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6250262528_resume_81.pdf
2025-09-07 22:55:49,444 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_61.pdf
2025-09-07 22:55:49,444 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/19 completed: resume_2.pdf - success
2025-09-07 22:55:49,444 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/19 completed: resume_1.pdf - success
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_61.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,444 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_51.pdf
2025-09-07 22:55:49,444 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/19 completed: resume_101.pdf - success
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6300741632_resume_71.pdf
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:55:49,444 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:55:49,444 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_51.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,444 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:55:49,445 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_13035925504_resume_61.pdf
2025-09-07 22:55:49,445 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:55:49,445 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:55:49,445 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:55:49,445 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:55:49,445 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6267088896_resume_51.pdf
2025-09-07 22:55:49,445 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:55:49,445 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:55:49,445 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:55:49,445 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:55:49,445 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:55:49,445 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:55:49,446 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:55:49,446 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:55:49,446 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:55:49,446 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:55:49,446 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:55:49,446 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:55:49,446 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:55:49,447 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 390 characters
2025-09-07 22:55:49,448 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:55:49,449 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 380 characters
2025-09-07 22:55:49,449 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:55:49,449 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,449 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 23%
2025-09-07 22:55:49,449 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-07 22:55:49,449 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:55:49,450 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,450 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Maria Gonzalez
2025-09-07 22:55:49,450 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:55:49,450 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 83%
2025-09-07 22:55:49,452 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 409 characters
2025-09-07 22:55:49,452 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_13035925504_resume_61.pdf
2025-09-07 22:55:49,452 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 391 characters
2025-09-07 22:55:49,452 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:55:49,452 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:55:49,453 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 429 characters
2025-09-07 22:55:49,453 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:55:49,453 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Olivia Miller
2025-09-07 22:55:49,453 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_61.pdf
2025-09-07 22:55:49,453 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6250262528_resume_81.pdf
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,454 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 77%
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,454 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_81.pdf
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Maria Gonzalez - 23%
2025-09-07 22:55:49,454 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 85%
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:55:49,454 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 29%
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:55:49,454 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_41.pdf
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 22:55:49,454 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-John Lee
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Olivia Miller - 83%
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_41.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,454 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Emily Miller
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6283915264_resume_91.pdf
2025-09-07 22:55:49,454 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Maria Gonzalez
2025-09-07 22:55:49,454 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_31.pdf
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:55:49,454 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6300741632_resume_71.pdf
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6267088896_resume_51.pdf
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_31.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_13035925504_resume_41.pdf
2025-09-07 22:55:49,455 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_91.pdf
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:55:49,455 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_71.pdf
2025-09-07 22:55:49,455 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_51.pdf
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6250262528_resume_31.pdf
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Emily Miller - 85%
2025-09-07 22:55:49,455 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_21.pdf
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_21.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,455 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Maria Gonzalez - 29%
2025-09-07 22:55:49,455 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_11.pdf
2025-09-07 22:55:49,455 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_11.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-John Lee - 77%
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6300741632_resume_21.pdf
2025-09-07 22:55:49,455 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:55:49,456 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:55:49,456 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:55:49,456 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 11/19 completed: resume_91.pdf - success
2025-09-07 22:55:49,456 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:55:49,456 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:55:49,456 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6267088896_resume_11.pdf
2025-09-07 22:55:49,456 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 12/19 completed: resume_81.pdf - success
2025-09-07 22:55:49,456 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:55:49,456 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:55:49,456 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 13/19 completed: resume_71.pdf - success
2025-09-07 22:55:49,456 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:55:49,457 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 399 characters
2025-09-07 22:55:49,458 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 400 characters
2025-09-07 22:55:49,458 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:55:49,458 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 14/19 completed: resume_61.pdf - success
2025-09-07 22:55:49,458 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:55:49,458 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:55:49,459 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:55:49,459 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 15/19 completed: resume_51.pdf - success
2025-09-07 22:55:49,459 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,459 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 30%
2025-09-07 22:55:49,459 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 22:55:49,459 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,459 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-David Smith
2025-09-07 22:55:49,459 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 72%
2025-09-07 22:55:49,459 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:55:49,459 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:55:49,459 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_13035925504_resume_41.pdf
2025-09-07 22:55:49,460 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-07 22:55:49,460 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:55:49,460 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:55:49,460 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-David Lee
2025-09-07 22:55:49,460 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6250262528_resume_31.pdf
2025-09-07 22:55:49,460 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_41.pdf
2025-09-07 22:55:49,460 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_31.pdf
2025-09-07 22:55:49,460 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:55:49,461 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 418 characters
2025-09-07 22:55:49,461 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:55:49,462 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 397 characters
2025-09-07 22:55:49,462 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-David Smith - 30%
2025-09-07 22:55:49,462 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:55:49,462 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-David Lee - 72%
2025-09-07 22:55:49,462 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:55:49,462 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 16/19 completed: resume_41.pdf - success
2025-09-07 22:55:49,462 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,462 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 17/19 completed: resume_31.pdf - success
2025-09-07 22:55:49,462 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:55:49,462 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 83%
2025-09-07 22:55:49,462 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 78%
2025-09-07 22:55:49,462 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:55:49,462 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 22:55:49,462 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Miller
2025-09-07 22:55:49,462 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Alice Lee
2025-09-07 22:55:49,462 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6267088896_resume_11.pdf
2025-09-07 22:55:49,462 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225549_6300741632_resume_21.pdf
2025-09-07 22:55:49,462 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_11.pdf
2025-09-07 22:55:49,462 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:55:49,463 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_21.pdf
2025-09-07 22:55:49,463 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Miller - 83%
2025-09-07 22:55:49,463 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:55:49,463 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Alice Lee - 78%
2025-09-07 22:55:49,463 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 18/19 completed: resume_21.pdf - success
2025-09-07 22:55:49,463 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 19/19 completed: resume_11.pdf - success
2025-09-07 22:55:49,463 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 19 results collected
2025-09-07 22:55:49,463 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 19, Failed: 0
2025-09-07 22:55:49,463 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:55:49,463 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Miller with 90% match
2025-09-07 22:55:49,463 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:55:49,463 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 34573 characters
2025-09-07 22:55:49,463 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 37598 bytes
2025-09-07 22:55:49,463 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:49] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:55:57,086 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:55:57,086 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256939.2455077-23717-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:55:39 GMT'}
2025-09-07 22:55:57,087 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23717 bytes
2025-09-07 22:55:57,087 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:57] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:55:57,093 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 22:55:57,094 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:55:57,095 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 22:55:57,096 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:55:57] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 22:56:14,272 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:56:14,272 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:56:14,273 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:56:14,274 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:56:14] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:56:14,296 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 22:56:14,298 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:56:14,298 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:56:14,300 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256939.2455077-23717-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:55:39 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:56:14,301 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:56:14,304 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 22:56:14,304 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256686.8591614-54682-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:51:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:56:14,305 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:56:14] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 22:56:14,305 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23717 bytes
2025-09-07 22:56:14,306 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 54682 bytes
2025-09-07 22:56:14,307 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:56:14] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 22:56:14,307 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:56:14] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:56:14,356 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:56:14,356 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:56:14,356 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:56:14,357 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:56:14,357 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:56:14] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:56:17,670 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 22:56:17,671 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '48832', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryt3pS6swwBN60BNF1', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:56:17,671 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryt3pS6swwBN60BNF1
2025-09-07 22:56:17,671 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 48832
2025-09-07 22:56:17,673 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:56:17,673 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[13 chars]'}
2025-09-07 22:56:17,673 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 22:56:17,673 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 20, Job desc length: 13, Mock: True
2025-09-07 22:56:17,673 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 22:56:17,674 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 20 files
2025-09-07 22:56:17,674 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 22:56:17,674 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_10.pdf
2025-09-07 22:56:17,674 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_9.pdf
2025-09-07 22:56:17,674 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,675 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_8.pdf
2025-09-07 22:56:17,675 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,675 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_7.pdf
2025-09-07 22:56:17,675 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_6.pdf
2025-09-07 22:56:17,675 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 20 tasks submitted to thread pool
2025-09-07 22:56:17,675 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:56:17,675 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,675 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:56:17,675 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,675 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,675 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6250262528_resume_10.pdf
2025-09-07 22:56:17,676 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:56:17,676 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6283915264_resume_8.pdf
2025-09-07 22:56:17,676 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:56:17,676 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6300741632_resume_7.pdf
2025-09-07 22:56:17,676 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:56:17,676 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6267088896_resume_9.pdf
2025-09-07 22:56:17,676 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_13035925504_resume_6.pdf
2025-09-07 22:56:17,677 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:56:17,677 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:56:17,677 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:56:17,677 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:56:17,677 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:56:17,677 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:56:17,677 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:56:17,677 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:56:17,677 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:56:17,677 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:56:17,678 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:56:17,679 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:56:17,679 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:56:17,679 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:56:17,679 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:56:17,682 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:56:17,682 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:56:17,683 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:56:17,686 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 1070 characters
2025-09-07 22:56:17,686 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:56:17,686 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:56:17,686 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:56:17,691 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 1125 characters
2025-09-07 22:56:17,691 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:56:17,695 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,695 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,695 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 1093 characters
2025-09-07 22:56:17,695 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 36%
2025-09-07 22:56:17,698 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 74%
2025-09-07 22:56:17,698 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 870 characters
2025-09-07 22:56:17,699 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:56:17,698 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:56:17,701 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,699 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-07 22:56:17,700 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 873 characters
2025-09-07 22:56:17,698 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:56:17,701 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 30%
2025-09-07 22:56:17,701 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-John Lee
2025-09-07 22:56:17,701 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,701 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:56:17,701 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Olivia Taylor
2025-09-07 22:56:17,701 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 22:56:17,701 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6283915264_resume_8.pdf
2025-09-07 22:56:17,701 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Brown - 70%
2025-09-07 22:56:17,701 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 563bcf30
2025-09-07 22:56:17,701 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Alice Brown
2025-09-07 22:56:17,701 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6300741632_resume_7.pdf
2025-09-07 22:56:17,701 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6250262528_resume_10.pdf
2025-09-07 22:56:17,701 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-David Smith
2025-09-07 22:56:17,701 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,702 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_8.pdf
2025-09-07 22:56:17,702 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6267088896_resume_9.pdf
2025-09-07 22:56:17,702 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_10.pdf
2025-09-07 22:56:17,702 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_7.pdf
2025-09-07 22:56:17,702 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:56:17,702 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 28%
2025-09-07 22:56:17,702 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_9.pdf
2025-09-07 22:56:17,702 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:56:17,702 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Olivia Taylor - 36%
2025-09-07 22:56:17,702 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:56:17,702 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 22:56:17,702 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:56:17,702 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Alice Brown - 70%
2025-09-07 22:56:17,702 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_5.pdf
2025-09-07 22:56:17,703 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,703 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:56:17,703 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Daniel Wilson
2025-09-07 22:56:17,703 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_13035925504_resume_6.pdf
2025-09-07 22:56:17,703 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/20 completed: resume_10.pdf - success
2025-09-07 22:56:17,702 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-John Lee - 74%
2025-09-07 22:56:17,703 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-David Smith - 30%
2025-09-07 22:56:17,703 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6300741632_resume_5.pdf
2025-09-07 22:56:17,703 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_4.pdf
2025-09-07 22:56:17,703 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_3.pdf
2025-09-07 22:56:17,704 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_6.pdf
2025-09-07 22:56:17,704 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_2.pdf
2025-09-07 22:56:17,704 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,704 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:56:17,704 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,704 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:56:17,704 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/20 completed: resume_9.pdf - success
2025-09-07 22:56:17,704 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6267088896_resume_2.pdf
2025-09-07 22:56:17,704 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,704 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:56:17,704 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Daniel Wilson - 28%
2025-09-07 22:56:17,704 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:56:17,705 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/20 completed: resume_8.pdf - success
2025-09-07 22:56:17,705 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:56:17,705 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:56:17,705 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6250262528_resume_4.pdf
2025-09-07 22:56:17,705 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_1.pdf
2025-09-07 22:56:17,705 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:56:17,705 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/20 completed: resume_7.pdf - success
2025-09-07 22:56:17,705 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6283915264_resume_3.pdf
2025-09-07 22:56:17,705 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:56:17,705 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,705 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/20 completed: resume_6.pdf - success
2025-09-07 22:56:17,705 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:56:17,706 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:56:17,706 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:56:17,706 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:56:17,707 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:56:17,707 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_13035925504_resume_1.pdf
2025-09-07 22:56:17,707 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:56:17,707 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:56:17,707 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:56:17,707 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:56:17,708 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:56:17,708 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:56:17,708 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:56:17,708 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:56:17,709 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:56:17,709 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:56:17,711 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 922 characters
2025-09-07 22:56:17,712 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:56:17,713 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1088 characters
2025-09-07 22:56:17,714 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:56:17,714 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,714 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:56:17,715 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:56:17,716 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 902 characters
2025-09-07 22:56:17,718 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 889 characters
2025-09-07 22:56:17,718 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 80%
2025-09-07 22:56:17,718 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,718 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:56:17,718 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:56:17,718 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:56:17,718 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 75%
2025-09-07 22:56:17,720 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 859 characters
2025-09-07 22:56:17,720 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Olivia Miller
2025-09-07 22:56:17,720 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 22:56:17,720 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,721 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,721 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:56:17,721 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6300741632_resume_5.pdf
2025-09-07 22:56:17,721 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-John Lee
2025-09-07 22:56:17,721 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 38%
2025-09-07 22:56:17,721 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 31%
2025-09-07 22:56:17,721 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,721 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6267088896_resume_2.pdf
2025-09-07 22:56:17,721 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 22:56:17,722 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 22:56:17,722 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Michael Brown - 30%
2025-09-07 22:56:17,722 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 399c9734
2025-09-07 22:56:17,722 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_5.pdf
2025-09-07 22:56:17,722 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-James Anderson
2025-09-07 22:56:17,722 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-James Anderson
2025-09-07 22:56:17,722 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Michael Brown
2025-09-07 22:56:17,722 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_2.pdf
2025-09-07 22:56:17,722 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:56:17,722 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6283915264_resume_3.pdf
2025-09-07 22:56:17,722 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6250262528_resume_4.pdf
2025-09-07 22:56:17,722 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_13035925504_resume_1.pdf
2025-09-07 22:56:17,722 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:56:17,723 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-John Lee - 75%
2025-09-07 22:56:17,722 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Olivia Miller - 80%
2025-09-07 22:56:17,723 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_3.pdf
2025-09-07 22:56:17,723 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_101.pdf
2025-09-07 22:56:17,723 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_1.pdf
2025-09-07 22:56:17,723 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_91.pdf
2025-09-07 22:56:17,723 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/20 completed: resume_5.pdf - success
2025-09-07 22:56:17,723 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:56:17,723 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_4.pdf
2025-09-07 22:56:17,723 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:56:17,723 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-James Anderson - 31%
2025-09-07 22:56:17,723 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_81.pdf
2025-09-07 22:56:17,723 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-James Anderson - 38%
2025-09-07 22:56:17,723 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_81.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,723 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:56:17,723 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/20 completed: resume_4.pdf - success
2025-09-07 22:56:17,723 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_91.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,723 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_101.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,724 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_71.pdf
2025-09-07 22:56:17,724 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:56:17,724 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Michael Brown - 30%
2025-09-07 22:56:17,724 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/20 completed: resume_3.pdf - success
2025-09-07 22:56:17,724 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:56:17,724 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:56:17,724 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_71.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,724 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6250262528_resume_81.pdf
2025-09-07 22:56:17,724 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_61.pdf
2025-09-07 22:56:17,724 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/20 completed: resume_2.pdf - success
2025-09-07 22:56:17,724 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6300741632_resume_91.pdf
2025-09-07 22:56:17,724 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:56:17,724 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:56:17,724 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_61.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,724 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/20 completed: resume_1.pdf - success
2025-09-07 22:56:17,724 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6267088896_resume_101.pdf
2025-09-07 22:56:17,724 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:56:17,724 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6283915264_resume_71.pdf
2025-09-07 22:56:17,724 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:56:17,725 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:56:17,725 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_13035925504_resume_61.pdf
2025-09-07 22:56:17,725 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:56:17,725 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:56:17,725 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:56:17,725 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:56:17,725 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:56:17,725 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:56:17,725 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:56:17,725 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:56:17,726 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:56:17,726 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:56:17,726 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:56:17,726 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:56:17,727 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:56:17,728 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 390 characters
2025-09-07 22:56:17,728 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:56:17,728 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:56:17,728 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:56:17,728 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:56:17,729 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 409 characters
2025-09-07 22:56:17,729 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:56:17,729 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:56:17,730 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,730 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 30%
2025-09-07 22:56:17,730 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 22:56:17,730 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,731 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 405 characters
2025-09-07 22:56:17,731 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Isabella Martinez
2025-09-07 22:56:17,733 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 391 characters
2025-09-07 22:56:17,733 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 21%
2025-09-07 22:56:17,734 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 380 characters
2025-09-07 22:56:17,734 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:56:17,734 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6250262528_resume_81.pdf
2025-09-07 22:56:17,734 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:56:17,734 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 22:56:17,734 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:56:17,734 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,734 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_81.pdf
2025-09-07 22:56:17,734 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Emily Davis
2025-09-07 22:56:17,734 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,734 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 89%
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6300741632_resume_91.pdf
2025-09-07 22:56:17,735 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 79%
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:56:17,735 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 30%
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Isabella Martinez - 30%
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-07 22:56:17,735 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Miller
2025-09-07 22:56:17,735 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_91.pdf
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 22:56:17,735 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_51.pdf
2025-09-07 22:56:17,735 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Alice Smith
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6267088896_resume_101.pdf
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:56:17,735 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Olivia Taylor
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_51.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6283915264_resume_71.pdf
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Emily Davis - 21%
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_13035925504_resume_61.pdf
2025-09-07 22:56:17,735 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_101.pdf
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 22:56:17,735 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6300741632] Starting processing file: resume_41.pdf
2025-09-07 22:56:17,735 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_71.pdf
2025-09-07 22:56:17,735 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:56:17,736 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_61.pdf
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6250262528_resume_51.pdf
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6300741632] File details - Name: resume_41.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Miller - 89%
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6300741632] Validating file type...
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Alice Smith - 79%
2025-09-07 22:56:17,736 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_31.pdf
2025-09-07 22:56:17,736 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 11/20 completed: resume_101.pdf - success
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Olivia Taylor - 30%
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6300741632] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6300741632_resume_41.pdf
2025-09-07 22:56:17,736 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 22:56:17,736 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_21.pdf
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_31.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,736 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 12/20 completed: resume_91.pdf - success
2025-09-07 22:56:17,736 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-13035925504] Starting processing file: resume_11.pdf
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_21.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 22:56:17,736 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6300741632] File saved successfully
2025-09-07 22:56:17,736 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 13/20 completed: resume_81.pdf - success
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-13035925504] File details - Name: resume_11.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6267088896_resume_31.pdf
2025-09-07 22:56:17,736 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6300741632] Validating PDF structure...
2025-09-07 22:56:17,737 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 14/20 completed: resume_71.pdf - success
2025-09-07 22:56:17,737 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 22:56:17,737 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-13035925504] Validating file type...
2025-09-07 22:56:17,737 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6283915264_resume_21.pdf
2025-09-07 22:56:17,737 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 15/20 completed: resume_61.pdf - success
2025-09-07 22:56:17,737 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 22:56:17,737 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 22:56:17,737 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-13035925504] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_13035925504_resume_11.pdf
2025-09-07 22:56:17,737 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 22:56:17,737 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 22:56:17,737 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6300741632] PDF validation passed
2025-09-07 22:56:17,737 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 22:56:17,738 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6300741632] Extracting text from PDF...
2025-09-07 22:56:17,738 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-13035925504] File saved successfully
2025-09-07 22:56:17,738 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-13035925504] Validating PDF structure...
2025-09-07 22:56:17,738 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 22:56:17,738 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 22:56:17,738 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 22:56:17,738 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 22:56:17,739 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 429 characters
2025-09-07 22:56:17,741 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6300741632] Text extracted successfully - 399 characters
2025-09-07 22:56:17,741 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 22:56:17,741 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6300741632] Mock mode - attempting to use cached response
2025-09-07 22:56:17,741 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,741 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,741 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-13035925504] PDF validation passed
2025-09-07 22:56:17,743 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 400 characters
2025-09-07 22:56:17,743 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 397 characters
2025-09-07 22:56:17,743 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 82%
2025-09-07 22:56:17,743 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 23%
2025-09-07 22:56:17,743 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-13035925504] Extracting text from PDF...
2025-09-07 22:56:17,743 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 22:56:17,743 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 22:56:17,743 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 22:56:17,743 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-07 22:56:17,744 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6300741632] Using cached response: Mock-Alice Lee
2025-09-07 22:56:17,744 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Sophia Lee
2025-09-07 22:56:17,744 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6300741632] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6300741632_resume_41.pdf
2025-09-07 22:56:17,744 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,744 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,744 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6250262528_resume_51.pdf
2025-09-07 22:56:17,744 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 81%
2025-09-07 22:56:17,744 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6300741632] File processing completed successfully for: resume_41.pdf
2025-09-07 22:56:17,745 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-13035925504] Text extracted successfully - 418 characters
2025-09-07 22:56:17,745 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 88%
2025-09-07 22:56:17,745 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-07 22:56:17,745 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_51.pdf
2025-09-07 22:56:17,745 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6300741632] Mock result - not saving to cache
2025-09-07 22:56:17,745 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-13035925504] Mock mode - attempting to use cached response
2025-09-07 22:56:17,745 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 22:56:17,745 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Emily Taylor
2025-09-07 22:56:17,745 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 22:56:17,745 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6300741632] Returning result: Mock-Alice Lee - 82%
2025-09-07 22:56:17,745 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Miller
2025-09-07 22:56:17,745 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6283915264_resume_21.pdf
2025-09-07 22:56:17,746 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 22:56:17,746 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Sophia Lee - 23%
2025-09-07 22:56:17,746 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_6267088896_resume_31.pdf
2025-09-07 22:56:17,746 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Sophia Lee - 24%
2025-09-07 22:56:17,746 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_21.pdf
2025-09-07 22:56:17,746 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 16/20 completed: resume_51.pdf - success
2025-09-07 22:56:17,746 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0496d425
2025-09-07 22:56:17,746 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_31.pdf
2025-09-07 22:56:17,746 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 22:56:17,746 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 17/20 completed: resume_41.pdf - success
2025-09-07 22:56:17,746 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-13035925504] Using cached response: Mock-Sophia Lee
2025-09-07 22:56:17,746 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 22:56:17,746 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Emily Taylor - 81%
2025-09-07 22:56:17,746 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-13035925504] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_225617_13035925504_resume_11.pdf
2025-09-07 22:56:17,746 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Miller - 88%
2025-09-07 22:56:17,746 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 18/20 completed: resume_31.pdf - success
2025-09-07 22:56:17,746 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 19/20 completed: resume_21.pdf - success
2025-09-07 22:56:17,746 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-13035925504] File processing completed successfully for: resume_11.pdf
2025-09-07 22:56:17,746 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-13035925504] Mock result - not saving to cache
2025-09-07 22:56:17,746 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-13035925504] Returning result: Mock-Sophia Lee - 24%
2025-09-07 22:56:17,746 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 20/20 completed: resume_11.pdf - success
2025-09-07 22:56:17,747 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 20 results collected
2025-09-07 22:56:17,747 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 20, Failed: 0
2025-09-07 22:56:17,747 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 22:56:17,747 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Miller with 89% match
2025-09-07 22:56:17,747 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 22:56:17,747 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 36919 characters
2025-09-07 22:56:17,747 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 40104 bytes
2025-09-07 22:56:17,747 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:56:17] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 22:57:10,305 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:57:10,306 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:57:10,307 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:57:10,307 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:57:10] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:57:10,322 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:57:10,322 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256973.5046587-23717-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:56:13 GMT'}
2025-09-07 22:57:10,323 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:57:10,324 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757256686.8591614-54682-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:51:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:57:10,324 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 23716 bytes
2025-09-07 22:57:10,325 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 54682 bytes
2025-09-07 22:57:10,325 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:57:10] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 22:57:10,325 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:57:10] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 22:57:10,365 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 22:57:10,365 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:57:10,365 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 22:57:10,365 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 22:57:10,366 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:57:10] "GET /api/health HTTP/1.1" 200 -
2025-09-07 22:59:39,074 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:59:39,075 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:59:39,076 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:59:39,077 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:59:39] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:59:39,093 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:59:39,094 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:59:39,094 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757257008.3326683-23716-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:56:48 GMT'}
2025-09-07 22:59:39,095 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256686.8591614-54682-1898780101"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:51:26 GMT'}
2025-09-07 22:59:39,096 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23716 bytes
2025-09-07 22:59:39,098 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 55395 bytes
2025-09-07 22:59:39,098 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:59:39] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:59:39,098 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:59:39] "GET /static/script.js HTTP/1.1" 200 -
2025-09-07 22:59:40,377 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 22:59:40,377 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 22:59:40,378 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 22:59:40,378 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:59:40] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 22:59:40,393 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 22:59:40,393 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257008.3326683-23716-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:56:48 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:59:40,394 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 22:59:40,394 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257175.6437125-55395-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:59:35 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 22:59:40,395 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23716 bytes
2025-09-07 22:59:40,395 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 55395 bytes
2025-09-07 22:59:40,395 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:59:40] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 22:59:40,395 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 22:59:40] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 23:00:07,820 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:00:07,821 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:00:07,822 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:00:07,822 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:00:07] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:00:07,836 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:00:07,836 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257175.6437125-55395-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:59:35 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:00:07,838 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 54682 bytes
2025-09-07 23:00:07,840 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:00:07] "GET /static/script.js HTTP/1.1" 200 -
2025-09-07 23:00:07,839 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:00:07,841 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257008.3326683-23716-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:56:48 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:00:07,842 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23716 bytes
2025-09-07 23:00:07,842 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:00:07] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:00:07,847 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:00:07,847 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:00:07,847 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:00:07,847 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:00:07,848 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:00:07] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:01:03,920 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:01:03,921 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:01:03,921 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:01:03,921 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:01:03] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:01:03,939 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:01:03,939 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757257008.3326683-23716-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:56:48 GMT'}
2025-09-07 23:01:03,940 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23716 bytes
2025-09-07 23:01:03,940 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:01:03] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:01:03,947 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:01:03,948 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757257188.517995-54682-1898780101"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:59:48 GMT'}
2025-09-07 23:01:03,949 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 54682 bytes
2025-09-07 23:01:03,949 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:01:03] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 23:01:03,954 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:01:03,954 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:01:03,954 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:01:03,955 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:01:03,955 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:01:03] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:01:26,556 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:01:26,556 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:01:26,557 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:01:26,557 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:01:26] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:01:26,567 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:01:26,567 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257188.517995-54682-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:59:48 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:01:26,572 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 54682 bytes
2025-09-07 23:01:26,572 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:01:26] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 23:01:26,574 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:01:26,575 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257008.3326683-23716-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:56:48 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:01:26,576 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23716 bytes
2025-09-07 23:01:26,578 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:01:26] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:01:26,583 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:01:26,584 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:01:26,584 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:01:26,584 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:01:26,584 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:01:26] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:01:27,452 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:01:27,453 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:01:27,453 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:01:27,454 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:01:27] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:01:27,463 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:01:27,464 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:01:27,465 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257008.3326683-23716-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:56:48 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:01:27,465 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257188.517995-54682-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:59:48 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:01:27,466 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 54888 bytes
2025-09-07 23:01:27,466 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 23716 bytes
2025-09-07 23:01:27,466 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:01:27] "GET /static/script.js HTTP/1.1" 200 -
2025-09-07 23:01:27,466 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:01:27] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:01:27,474 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:01:27,474 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:01:27,474 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:01:27,474 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:01:27,474 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:01:27] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:01:35,505 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:01:35,506 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '48841', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryFpu5pWsvCmdQHkpR', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:01:35,506 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryFpu5pWsvCmdQHkpR
2025-09-07 23:01:35,507 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 48841
2025-09-07 23:01:35,514 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 23:01:35,514 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[22 chars]'}
2025-09-07 23:01:35,514 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:01:35,514 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 20, Job desc length: 22, Mock: True
2025-09-07 23:01:35,514 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 23:01:35,514 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 20 files
2025-09-07 23:01:35,514 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:01:35,514 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_10.pdf
2025-09-07 23:01:35,514 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_9.pdf
2025-09-07 23:01:35,514 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_8.pdf
2025-09-07 23:01:35,515 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,515 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_7.pdf
2025-09-07 23:01:35,516 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_6.pdf
2025-09-07 23:01:35,516 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,516 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 20 tasks submitted to thread pool
2025-09-07 23:01:35,516 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,516 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 23:01:35,516 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,516 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,516 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 23:01:35,516 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 23:01:35,516 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6216609792_resume_10.pdf
2025-09-07 23:01:35,516 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 23:01:35,516 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 23:01:35,517 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6233436160_resume_9.pdf
2025-09-07 23:01:35,517 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6250262528_resume_8.pdf
2025-09-07 23:01:35,517 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6267088896_resume_7.pdf
2025-09-07 23:01:35,517 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6283915264_resume_6.pdf
2025-09-07 23:01:35,517 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 23:01:35,517 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 23:01:35,517 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 23:01:35,518 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 23:01:35,518 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 23:01:35,518 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 23:01:35,518 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 23:01:35,519 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 23:01:35,518 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 23:01:35,518 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 23:01:35,518 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 23:01:35,519 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 23:01:35,519 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 23:01:35,520 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 23:01:35,521 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 23:01:35,521 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 23:01:35,522 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 23:01:35,523 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 23:01:35,525 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 23:01:35,526 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 23:01:35,526 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 1093 characters
2025-09-07 23:01:35,529 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 873 characters
2025-09-07 23:01:35,530 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 870 characters
2025-09-07 23:01:35,531 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 23:01:35,531 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 23:01:35,531 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 23:01:35,533 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 1125 characters
2025-09-07 23:01:35,536 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1070 characters
2025-09-07 23:01:35,536 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 23:01:35,536 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 23:01:35,537 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,537 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,537 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 86%
2025-09-07 23:01:35,537 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,537 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,537 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 31%
2025-09-07 23:01:35,537 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,537 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 23:01:35,537 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 85%
2025-09-07 23:01:35,538 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 75%
2025-09-07 23:01:35,538 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 23:01:35,538 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 74%
2025-09-07 23:01:35,538 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Olivia Miller
2025-09-07 23:01:35,538 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 23:01:35,538 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-07 23:01:35,538 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-James Anderson
2025-09-07 23:01:35,538 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 23:01:35,538 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6216609792_resume_10.pdf
2025-09-07 23:01:35,538 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Emily Miller
2025-09-07 23:01:35,538 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6250262528_resume_8.pdf
2025-09-07 23:01:35,538 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6233436160_resume_9.pdf
2025-09-07 23:01:35,538 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Alice Lee
2025-09-07 23:01:35,538 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_10.pdf
2025-09-07 23:01:35,538 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-David Lee
2025-09-07 23:01:35,539 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6283915264_resume_6.pdf
2025-09-07 23:01:35,538 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6267088896_resume_7.pdf
2025-09-07 23:01:35,538 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_9.pdf
2025-09-07 23:01:35,539 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 23:01:35,539 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-James Anderson - 31%
2025-09-07 23:01:35,538 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 23:01:35,539 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_5.pdf
2025-09-07 23:01:35,538 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_8.pdf
2025-09-07 23:01:35,539 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_7.pdf
2025-09-07 23:01:35,539 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_6.pdf
2025-09-07 23:01:35,539 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Olivia Miller - 86%
2025-09-07 23:01:35,539 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,539 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 23:01:35,539 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 23:01:35,539 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 23:01:35,540 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_4.pdf
2025-09-07 23:01:35,540 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/20 completed: resume_10.pdf - success
2025-09-07 23:01:35,540 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 23:01:35,540 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Emily Miller - 85%
2025-09-07 23:01:35,540 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Alice Lee - 74%
2025-09-07 23:01:35,540 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-David Lee - 75%
2025-09-07 23:01:35,540 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,540 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/20 completed: resume_9.pdf - success
2025-09-07 23:01:35,540 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6233436160_resume_5.pdf
2025-09-07 23:01:35,540 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_3.pdf
2025-09-07 23:01:35,540 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_2.pdf
2025-09-07 23:01:35,540 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_1.pdf
2025-09-07 23:01:35,541 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 23:01:35,541 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/20 completed: resume_8.pdf - success
2025-09-07 23:01:35,541 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,541 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,541 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,541 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6216609792_resume_4.pdf
2025-09-07 23:01:35,542 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/20 completed: resume_7.pdf - success
2025-09-07 23:01:35,542 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 23:01:35,542 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 23:01:35,542 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 23:01:35,542 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 23:01:35,542 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/20 completed: resume_6.pdf - success
2025-09-07 23:01:35,542 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6250262528_resume_3.pdf
2025-09-07 23:01:35,542 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 23:01:35,542 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6283915264_resume_1.pdf
2025-09-07 23:01:35,543 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 23:01:35,543 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6267088896_resume_2.pdf
2025-09-07 23:01:35,543 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 23:01:35,543 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 23:01:35,543 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 23:01:35,543 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 23:01:35,543 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 23:01:35,543 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 23:01:35,543 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 23:01:35,543 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 23:01:35,545 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 922 characters
2025-09-07 23:01:35,546 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 23:01:35,546 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 23:01:35,547 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 23:01:35,547 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 23:01:35,547 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 23:01:35,547 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 23:01:35,548 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,548 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 75%
2025-09-07 23:01:35,548 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-07 23:01:35,548 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 23:01:35,548 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-John Lee
2025-09-07 23:01:35,550 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 859 characters
2025-09-07 23:01:35,552 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 23:01:35,550 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 23:01:35,550 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 23:01:35,552 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 902 characters
2025-09-07 23:01:35,552 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 23:01:35,550 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6233436160_resume_5.pdf
2025-09-07 23:01:35,552 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 23:01:35,552 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,554 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 889 characters
2025-09-07 23:01:35,555 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_5.pdf
2025-09-07 23:01:35,555 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 33%
2025-09-07 23:01:35,555 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,555 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 23:01:35,555 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 23:01:35,555 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 23:01:35,557 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1088 characters
2025-09-07 23:01:35,557 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Maria Gonzalez - 24%
2025-09-07 23:01:35,557 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-John Lee - 75%
2025-09-07 23:01:35,557 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Isabella Martinez
2025-09-07 23:01:35,557 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 23:01:35,557 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,557 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 2d6a583f
2025-09-07 23:01:35,557 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_101.pdf
2025-09-07 23:01:35,557 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/20 completed: resume_5.pdf - success
2025-09-07 23:01:35,557 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6283915264_resume_1.pdf
2025-09-07 23:01:35,557 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 70%
2025-09-07 23:01:35,557 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Maria Gonzalez
2025-09-07 23:01:35,557 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,557 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_101.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6250262528_resume_3.pdf
2025-09-07 23:01:35,558 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_1.pdf
2025-09-07 23:01:35,558 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 82%
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 23:01:35,558 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-John Lee
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6233436160_resume_101.pdf
2025-09-07 23:01:35,558 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_3.pdf
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6216609792_resume_4.pdf
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Isabella Martinez - 33%
2025-09-07 23:01:35,558 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Johnson
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 23:01:35,558 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_91.pdf
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6267088896_resume_2.pdf
2025-09-07 23:01:35,558 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_4.pdf
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Maria Gonzalez - 24%
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_91.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,558 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 23:01:35,558 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_81.pdf
2025-09-07 23:01:35,558 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_2.pdf
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-John Lee - 70%
2025-09-07 23:01:35,558 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_81.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,559 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 23:01:35,559 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6283915264_resume_91.pdf
2025-09-07 23:01:35,559 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_71.pdf
2025-09-07 23:01:35,559 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/20 completed: resume_4.pdf - success
2025-09-07 23:01:35,559 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 23:01:35,559 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 23:01:35,559 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Johnson - 82%
2025-09-07 23:01:35,559 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_71.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,559 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/20 completed: resume_3.pdf - success
2025-09-07 23:01:35,559 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_61.pdf
2025-09-07 23:01:35,559 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 23:01:35,559 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 23:01:35,559 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 23:01:35,559 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/20 completed: resume_2.pdf - success
2025-09-07 23:01:35,559 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_61.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,559 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6250262528_resume_81.pdf
2025-09-07 23:01:35,561 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 23:01:35,561 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 405 characters
2025-09-07 23:01:35,561 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6216609792_resume_71.pdf
2025-09-07 23:01:35,561 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/20 completed: resume_1.pdf - success
2025-09-07 23:01:35,561 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 23:01:35,561 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 23:01:35,561 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 23:01:35,561 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 23:01:35,561 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 23:01:35,561 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6267088896_resume_61.pdf
2025-09-07 23:01:35,562 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 23:01:35,562 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,562 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 23:01:35,562 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 34%
2025-09-07 23:01:35,562 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 23:01:35,562 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 23:01:35,562 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 23:01:35,564 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 409 characters
2025-09-07 23:01:35,565 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 23:01:35,565 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 23:01:35,565 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Olivia Taylor
2025-09-07 23:01:35,565 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 23:01:35,565 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6233436160_resume_101.pdf
2025-09-07 23:01:35,565 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 23:01:35,565 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,565 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_101.pdf
2025-09-07 23:01:35,565 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 88%
2025-09-07 23:01:35,565 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 23:01:35,565 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 23:01:35,565 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-07 23:01:35,565 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 23:01:35,566 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Olivia Taylor - 34%
2025-09-07 23:01:35,566 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 23:01:35,567 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 390 characters
2025-09-07 23:01:35,568 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 23:01:35,567 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_51.pdf
2025-09-07 23:01:35,568 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_51.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,567 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 11/20 completed: resume_101.pdf - success
2025-09-07 23:01:35,568 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 391 characters
2025-09-07 23:01:35,567 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 23:01:35,567 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Olivia Johnson
2025-09-07 23:01:35,568 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 23:01:35,569 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6233436160_resume_51.pdf
2025-09-07 23:01:35,568 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,569 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 37%
2025-09-07 23:01:35,569 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 23:01:35,568 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6283915264_resume_91.pdf
2025-09-07 23:01:35,568 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 23:01:35,569 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Isabella Martinez
2025-09-07 23:01:35,569 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 23:01:35,569 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6250262528_resume_81.pdf
2025-09-07 23:01:35,570 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 23:01:35,570 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_91.pdf
2025-09-07 23:01:35,570 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,570 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 380 characters
2025-09-07 23:01:35,570 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_81.pdf
2025-09-07 23:01:35,570 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 23:01:35,570 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 75%
2025-09-07 23:01:35,570 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 23:01:35,570 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 23:01:35,570 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 23:01:35,570 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Olivia Johnson - 88%
2025-09-07 23:01:35,570 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-07 23:01:35,571 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Isabella Martinez - 37%
2025-09-07 23:01:35,571 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 23:01:35,571 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,571 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_41.pdf
2025-09-07 23:01:35,571 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 12/20 completed: resume_91.pdf - success
2025-09-07 23:01:35,571 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Alice Smith
2025-09-07 23:01:35,571 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_31.pdf
2025-09-07 23:01:35,571 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Isabella Martinez - 32%
2025-09-07 23:01:35,571 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_41.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,571 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 13/20 completed: resume_81.pdf - success
2025-09-07 23:01:35,571 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6216609792_resume_71.pdf
2025-09-07 23:01:35,572 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 429 characters
2025-09-07 23:01:35,572 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_31.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,572 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 54583dae
2025-09-07 23:01:35,572 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 23:01:35,572 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 23:01:35,572 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 23:01:35,572 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_71.pdf
2025-09-07 23:01:35,572 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Isabella Martinez
2025-09-07 23:01:35,572 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6283915264_resume_41.pdf
2025-09-07 23:01:35,572 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6250262528_resume_31.pdf
2025-09-07 23:01:35,572 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,572 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 23:01:35,572 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6267088896_resume_61.pdf
2025-09-07 23:01:35,572 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Smith - 70%
2025-09-07 23:01:35,572 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Alice Smith - 75%
2025-09-07 23:01:35,572 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_61.pdf
2025-09-07 23:01:35,572 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 758fa9c3
2025-09-07 23:01:35,572 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 23:01:35,572 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 23:01:35,573 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_21.pdf
2025-09-07 23:01:35,573 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 14/20 completed: resume_71.pdf - success
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 23:01:35,573 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Alice Smith
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_21.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Isabella Martinez - 32%
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6233436160_resume_51.pdf
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 23:01:35,573 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_11.pdf
2025-09-07 23:01:35,573 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 15/20 completed: resume_61.pdf - success
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6216609792_resume_21.pdf
2025-09-07 23:01:35,573 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_51.pdf
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_11.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:01:35,573 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 23:01:35,573 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 23:01:35,573 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Alice Smith - 70%
2025-09-07 23:01:35,573 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 23:01:35,574 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6267088896_resume_11.pdf
2025-09-07 23:01:35,574 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 23:01:35,574 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 16/20 completed: resume_51.pdf - success
2025-09-07 23:01:35,575 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 400 characters
2025-09-07 23:01:35,575 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 23:01:35,575 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 23:01:35,575 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 23:01:35,576 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 399 characters
2025-09-07 23:01:35,576 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 23:01:35,576 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 23:01:35,576 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 23:01:35,576 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,576 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Taylor - 90%
2025-09-07 23:01:35,576 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 591f4c0b
2025-09-07 23:01:35,576 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Emily Taylor
2025-09-07 23:01:35,576 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6250262528_resume_31.pdf
2025-09-07 23:01:35,577 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,577 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_31.pdf
2025-09-07 23:01:35,579 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 397 characters
2025-09-07 23:01:35,579 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Michael Brown - 33%
2025-09-07 23:01:35,579 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 23:01:35,579 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 23:01:35,579 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 23:01:35,579 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 399c9734
2025-09-07 23:01:35,579 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 23:01:35,579 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Emily Taylor - 90%
2025-09-07 23:01:35,579 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Michael Brown
2025-09-07 23:01:35,579 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6283915264_resume_41.pdf
2025-09-07 23:01:35,579 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,579 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_41.pdf
2025-09-07 23:01:35,580 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Miller - 80%
2025-09-07 23:01:35,580 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 418 characters
2025-09-07 23:01:35,580 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 23:01:35,580 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 9fbd8ba4
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Emily Miller
2025-09-07 23:01:35,581 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6216609792_resume_21.pdf
2025-09-07 23:01:35,581 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Michael Brown - 33%
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 17/20 completed: resume_41.pdf - success
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 18/20 completed: resume_31.pdf - success
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_21.pdf
2025-09-07 23:01:35,581 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 23:01:35,581 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Emily Miller - 80%
2025-09-07 23:01:35,581 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 19/20 completed: resume_21.pdf - success
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 38%
2025-09-07 23:01:35,581 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-James Anderson
2025-09-07 23:01:35,581 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230135_6267088896_resume_11.pdf
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_11.pdf
2025-09-07 23:01:35,581 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 23:01:35,581 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-James Anderson - 38%
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 20/20 completed: resume_11.pdf - success
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 20 results collected
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 20, Failed: 0
2025-09-07 23:01:35,581 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Emily Taylor with 90% match
2025-09-07 23:01:35,581 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:01:35,582 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 37044 characters
2025-09-07 23:01:35,582 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 40239 bytes
2025-09-07 23:01:35,582 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:01:35] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:02:33,854 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:02:33,855 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:02:33,857 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:02:33,857 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:02:33] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:02:33,874 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:02:33,874 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257008.3326683-23716-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:56:48 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:02:33,875 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:02:33,876 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257286.8611624-54888-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:01:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:02:33,876 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 24961 bytes
2025-09-07 23:02:33,877 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 56948 bytes
2025-09-07 23:02:33,877 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:02:33] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 23:02:33,877 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:02:33] "GET /static/script.js HTTP/1.1" 200 -
2025-09-07 23:02:33,891 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:02:33,891 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:02:33,891 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:02:33,891 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:02:33,891 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:02:33] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:02:42,764 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:02:42,765 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '48836', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryFFPUXjsJEsBuYoBl', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:02:42,766 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryFFPUXjsJEsBuYoBl
2025-09-07 23:02:42,767 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 48836
2025-09-07 23:02:42,773 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 23:02:42,775 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:02:42,776 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:02:42,776 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 20, Job desc length: 17, Mock: True
2025-09-07 23:02:42,776 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 23:02:42,776 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 20 files
2025-09-07 23:02:42,776 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:02:42,776 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_10.pdf
2025-09-07 23:02:42,777 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_9.pdf
2025-09-07 23:02:42,777 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_8.pdf
2025-09-07 23:02:42,777 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,777 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_7.pdf
2025-09-07 23:02:42,778 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,778 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_6.pdf
2025-09-07 23:02:42,778 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 20 tasks submitted to thread pool
2025-09-07 23:02:42,778 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,778 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 23:02:42,778 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,778 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 23:02:42,778 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,778 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 23:02:42,778 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6216609792_resume_10.pdf
2025-09-07 23:02:42,778 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 23:02:42,779 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6267088896_resume_7.pdf
2025-09-07 23:02:42,779 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 23:02:42,779 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6283915264_resume_6.pdf
2025-09-07 23:02:42,779 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6250262528_resume_8.pdf
2025-09-07 23:02:42,779 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6233436160_resume_9.pdf
2025-09-07 23:02:42,784 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 23:02:42,784 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 23:02:42,785 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 23:02:42,785 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 23:02:42,785 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 23:02:42,785 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 23:02:42,785 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 23:02:42,785 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 23:02:42,786 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 23:02:42,786 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 23:02:42,787 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 23:02:42,788 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 23:02:42,788 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 23:02:42,789 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 23:02:42,789 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 23:02:42,789 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 23:02:42,789 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 23:02:42,790 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 23:02:42,791 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 23:02:42,794 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 873 characters
2025-09-07 23:02:42,798 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 1125 characters
2025-09-07 23:02:42,800 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 23:02:42,800 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 23:02:42,800 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 23:02:42,802 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 1093 characters
2025-09-07 23:02:42,805 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 1070 characters
2025-09-07 23:02:42,805 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,805 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,805 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 23:02:42,807 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 23:02:42,807 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 870 characters
2025-09-07 23:02:42,808 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 30%
2025-09-07 23:02:42,808 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 72%
2025-09-07 23:02:42,808 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 23:02:42,808 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 23:02:42,808 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,808 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,808 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 23:02:42,808 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Emily Davis
2025-09-07 23:02:42,808 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,808 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Johnson - 87%
2025-09-07 23:02:42,808 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 32%
2025-09-07 23:02:42,808 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-John Lee
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6250262528_resume_8.pdf
2025-09-07 23:02:42,809 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 74%
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 1049887b
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6283915264_resume_6.pdf
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 23:02:42,809 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Olivia Johnson
2025-09-07 23:02:42,809 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-James Anderson
2025-09-07 23:02:42,809 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_8.pdf
2025-09-07 23:02:42,809 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-John Lee
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6267088896_resume_7.pdf
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6216609792_resume_10.pdf
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 23:02:42,809 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_6.pdf
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6233436160_resume_9.pdf
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Emily Davis - 30%
2025-09-07 23:02:42,809 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_7.pdf
2025-09-07 23:02:42,809 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_10.pdf
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 23:02:42,809 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_5.pdf
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 23:02:42,809 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_9.pdf
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 23:02:42,809 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-John Lee - 72%
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Olivia Johnson - 87%
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-James Anderson - 32%
2025-09-07 23:02:42,810 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_4.pdf
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 23:02:42,810 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_3.pdf
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-John Lee - 74%
2025-09-07 23:02:42,810 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_2.pdf
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6250262528_resume_5.pdf
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,810 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_1.pdf
2025-09-07 23:02:42,810 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/20 completed: resume_10.pdf - success
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,810 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/20 completed: resume_9.pdf - success
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6216609792_resume_2.pdf
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6283915264_resume_4.pdf
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6267088896_resume_3.pdf
2025-09-07 23:02:42,810 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 23:02:42,811 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 23:02:42,810 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/20 completed: resume_8.pdf - success
2025-09-07 23:02:42,810 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 23:02:42,811 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/20 completed: resume_7.pdf - success
2025-09-07 23:02:42,811 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 23:02:42,811 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6233436160_resume_1.pdf
2025-09-07 23:02:42,811 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 23:02:42,811 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 23:02:42,811 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/20 completed: resume_6.pdf - success
2025-09-07 23:02:42,811 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 23:02:42,811 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 23:02:42,811 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 23:02:42,811 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 23:02:42,811 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 23:02:42,812 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 23:02:42,812 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 23:02:42,812 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 23:02:42,812 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 23:02:42,812 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 23:02:42,813 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 23:02:42,813 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 23:02:42,813 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 23:02:42,815 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 922 characters
2025-09-07 23:02:42,815 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 23:02:42,815 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 23:02:42,815 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 23:02:42,817 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 889 characters
2025-09-07 23:02:42,817 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 23:02:42,820 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 1088 characters
2025-09-07 23:02:42,821 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 902 characters
2025-09-07 23:02:42,821 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,821 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 23:02:42,821 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,821 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 23:02:42,823 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 22%
2025-09-07 23:02:42,823 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 859 characters
2025-09-07 23:02:42,823 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Smith - 25%
2025-09-07 23:02:42,823 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 23:02:42,823 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 23:02:42,823 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,823 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,823 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 0938a916
2025-09-07 23:02:42,823 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-Emily Davis
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Miller - 86%
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 24%
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-David Smith
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6250262528_resume_5.pdf
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: bdb222d9
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Brown - 72%
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6283915264_resume_4.pdf
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Olivia Miller
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 563bcf30
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Emily Davis
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_5.pdf
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6216609792_resume_2.pdf
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Alice Brown
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_4.pdf
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6267088896_resume_3.pdf
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6233436160_resume_1.pdf
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_2.pdf
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-Emily Davis - 22%
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-David Smith - 25%
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_3.pdf
2025-09-07 23:02:42,824 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_1.pdf
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_101.pdf
2025-09-07 23:02:42,824 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/20 completed: resume_5.pdf - success
2025-09-07 23:02:42,825 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_91.pdf
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Olivia Miller - 86%
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_101.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,825 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/20 completed: resume_4.pdf - success
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_91.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Emily Davis - 24%
2025-09-07 23:02:42,825 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_81.pdf
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Alice Brown - 72%
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 23:02:42,825 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_71.pdf
2025-09-07 23:02:42,825 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/20 completed: resume_3.pdf - success
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_81.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,825 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_61.pdf
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6250262528_resume_101.pdf
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6283915264_resume_91.pdf
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_71.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,825 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/20 completed: resume_2.pdf - success
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_61.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 23:02:42,825 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/20 completed: resume_1.pdf - success
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6216609792_resume_81.pdf
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6267088896_resume_71.pdf
2025-09-07 23:02:42,825 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 23:02:42,825 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6233436160_resume_61.pdf
2025-09-07 23:02:42,825 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 23:02:42,826 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 23:02:42,826 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 23:02:42,826 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 23:02:42,826 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 23:02:42,826 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 23:02:42,826 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 23:02:42,826 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 23:02:42,826 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 23:02:42,826 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 23:02:42,826 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 23:02:42,827 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 23:02:42,827 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 23:02:42,827 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 23:02:42,827 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 23:02:42,827 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 23:02:42,828 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 409 characters
2025-09-07 23:02:42,828 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 23:02:42,828 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 23:02:42,829 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 23:02:42,830 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 390 characters
2025-09-07 23:02:42,831 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 23:02:42,831 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 391 characters
2025-09-07 23:02:42,832 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 405 characters
2025-09-07 23:02:42,832 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,832 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 23:02:42,832 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,832 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 23:02:42,833 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 380 characters
2025-09-07 23:02:42,833 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 77%
2025-09-07 23:02:42,833 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 79%
2025-09-07 23:02:42,833 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,833 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: f3cc6c20
2025-09-07 23:02:42,834 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Emily Davis - 28%
2025-09-07 23:02:42,834 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-David Lee
2025-09-07 23:02:42,834 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-James Anderson - 35%
2025-09-07 23:02:42,834 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-John Lee
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3f971075
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6216609792_resume_81.pdf
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 5dc01f99
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6283915264_resume_91.pdf
2025-09-07 23:02:42,834 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alex Johnson - 70%
2025-09-07 23:02:42,834 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Emily Davis
2025-09-07 23:02:42,834 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-James Anderson
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: b1f5815d
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6267088896_resume_71.pdf
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6250262528_resume_101.pdf
2025-09-07 23:02:42,834 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_81.pdf
2025-09-07 23:02:42,834 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_91.pdf
2025-09-07 23:02:42,834 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-Alex Johnson
2025-09-07 23:02:42,834 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_71.pdf
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 23:02:42,834 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_101.pdf
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6233436160_resume_61.pdf
2025-09-07 23:02:42,834 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-David Lee - 77%
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-John Lee - 79%
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Emily Davis - 28%
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6216609792] Starting processing file: resume_51.pdf
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_61.pdf
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-James Anderson - 35%
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6283915264] Starting processing file: resume_41.pdf
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6267088896] Starting processing file: resume_31.pdf
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6216609792] File details - Name: resume_51.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6250262528] Starting processing file: resume_21.pdf
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 11/20 completed: resume_101.pdf - success
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6283915264] File details - Name: resume_41.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6267088896] File details - Name: resume_31.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6216609792] Validating file type...
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-Alex Johnson - 70%
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6250262528] File details - Name: resume_21.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 12/20 completed: resume_91.pdf - success
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6283915264] Validating file type...
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6267088896] Validating file type...
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6216609792] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6216609792_resume_51.pdf
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233436160] Starting processing file: resume_11.pdf
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6250262528] Validating file type...
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 13/20 completed: resume_81.pdf - success
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6283915264] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6283915264_resume_41.pdf
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6267088896] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6267088896_resume_31.pdf
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233436160] File details - Name: resume_11.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6250262528] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6250262528_resume_21.pdf
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 14/20 completed: resume_71.pdf - success
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233436160] Validating file type...
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6216609792] File saved successfully
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 15/20 completed: resume_61.pdf - success
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6267088896] File saved successfully
2025-09-07 23:02:42,835 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233436160] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6233436160_resume_11.pdf
2025-09-07 23:02:42,835 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6283915264] File saved successfully
2025-09-07 23:02:42,836 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6216609792] Validating PDF structure...
2025-09-07 23:02:42,836 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6250262528] File saved successfully
2025-09-07 23:02:42,836 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6267088896] Validating PDF structure...
2025-09-07 23:02:42,836 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6283915264] Validating PDF structure...
2025-09-07 23:02:42,836 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6250262528] Validating PDF structure...
2025-09-07 23:02:42,836 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233436160] File saved successfully
2025-09-07 23:02:42,836 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6216609792] PDF validation passed
2025-09-07 23:02:42,836 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233436160] Validating PDF structure...
2025-09-07 23:02:42,836 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6216609792] Extracting text from PDF...
2025-09-07 23:02:42,836 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6250262528] PDF validation passed
2025-09-07 23:02:42,837 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6283915264] PDF validation passed
2025-09-07 23:02:42,837 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6250262528] Extracting text from PDF...
2025-09-07 23:02:42,837 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6267088896] PDF validation passed
2025-09-07 23:02:42,837 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6283915264] Extracting text from PDF...
2025-09-07 23:02:42,837 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233436160] PDF validation passed
2025-09-07 23:02:42,837 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6267088896] Extracting text from PDF...
2025-09-07 23:02:42,839 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6216609792] Text extracted successfully - 429 characters
2025-09-07 23:02:42,839 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233436160] Extracting text from PDF...
2025-09-07 23:02:42,840 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6250262528] Text extracted successfully - 397 characters
2025-09-07 23:02:42,840 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6216609792] Mock mode - attempting to use cached response
2025-09-07 23:02:42,841 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6283915264] Text extracted successfully - 399 characters
2025-09-07 23:02:42,841 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6250262528] Mock mode - attempting to use cached response
2025-09-07 23:02:42,841 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6283915264] Mock mode - attempting to use cached response
2025-09-07 23:02:42,842 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6267088896] Text extracted successfully - 400 characters
2025-09-07 23:02:42,842 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6267088896] Mock mode - attempting to use cached response
2025-09-07 23:02:42,842 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,842 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,843 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Olivia Taylor - 30%
2025-09-07 23:02:42,843 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233436160] Text extracted successfully - 418 characters
2025-09-07 23:02:42,843 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,843 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Alice Lee - 83%
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 48266a73
2025-09-07 23:02:42,844 - app.main - INFO - [main.py:257] - process_single_file() - 🎭 [Thread-6233436160] Mock mode - attempting to use cached response
2025-09-07 23:02:42,844 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-John Lee - 73%
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 3ba9c56c
2025-09-07 23:02:42,844 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-Daniel Wilson - 35%
2025-09-07 23:02:42,844 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6216609792] Using cached response: Mock-Olivia Taylor
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: cef33018
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:02:42,844 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6283915264] Using cached response: Mock-Alice Lee
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 27e94eab
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6216609792] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6216609792_resume_51.pdf
2025-09-07 23:02:42,844 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6250262528] Using cached response: Mock-John Lee
2025-09-07 23:02:42,844 - app.main - INFO - [main.py:169] - get_random_cached_response() - 🎭 Using cached response for mock mode: Mock-David Lee - 76%
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6283915264] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6283915264_resume_41.pdf
2025-09-07 23:02:42,844 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6267088896] Using cached response: Mock-Daniel Wilson
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6250262528] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6250262528_resume_21.pdf
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:170] - get_random_cached_response() - 🎭 Original response ID: 59232593
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6267088896] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6267088896_resume_31.pdf
2025-09-07 23:02:42,844 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6216609792] File processing completed successfully for: resume_51.pdf
2025-09-07 23:02:42,844 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6283915264] File processing completed successfully for: resume_41.pdf
2025-09-07 23:02:42,844 - app.main - INFO - [main.py:263] - process_single_file() - ✅ [Thread-6233436160] Using cached response: Mock-David Lee
2025-09-07 23:02:42,844 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6250262528] File processing completed successfully for: resume_21.pdf
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6216609792] Mock result - not saving to cache
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6283915264] Mock result - not saving to cache
2025-09-07 23:02:42,844 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6267088896] File processing completed successfully for: resume_31.pdf
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233436160] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230242_6233436160_resume_11.pdf
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6250262528] Mock result - not saving to cache
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6216609792] Returning result: Mock-Olivia Taylor - 30%
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6283915264] Returning result: Mock-Alice Lee - 83%
2025-09-07 23:02:42,844 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6267088896] Mock result - not saving to cache
2025-09-07 23:02:42,845 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6250262528] Returning result: Mock-John Lee - 73%
2025-09-07 23:02:42,845 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 16/20 completed: resume_51.pdf - success
2025-09-07 23:02:42,845 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233436160] File processing completed successfully for: resume_11.pdf
2025-09-07 23:02:42,845 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6267088896] Returning result: Mock-Daniel Wilson - 35%
2025-09-07 23:02:42,845 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 17/20 completed: resume_41.pdf - success
2025-09-07 23:02:42,845 - app.main - DEBUG - [main.py:323] - process_single_file() - 🎭 [Thread-6233436160] Mock result - not saving to cache
2025-09-07 23:02:42,845 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 18/20 completed: resume_31.pdf - success
2025-09-07 23:02:42,845 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233436160] Returning result: Mock-David Lee - 76%
2025-09-07 23:02:42,845 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 19/20 completed: resume_21.pdf - success
2025-09-07 23:02:42,845 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 20/20 completed: resume_11.pdf - success
2025-09-07 23:02:42,845 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 20 results collected
2025-09-07 23:02:42,845 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 20, Failed: 0
2025-09-07 23:02:42,845 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:02:42,845 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Mock-Olivia Johnson with 87% match
2025-09-07 23:02:42,845 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:02:42,845 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 38179 characters
2025-09-07 23:02:42,845 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 41423 bytes
2025-09-07 23:02:42,846 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:02:42] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:03:06,983 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/main.py', reloading
2025-09-07 23:03:07,038 - werkzeug - INFO - [_internal.py:97] - _log() -  * Restarting with stat
2025-09-07 23:03:07,448 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-07 23:03:07,454 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 580-702-148
2025-09-07 23:03:07,745 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:03:07,746 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:03:07,752 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:03:07,753 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:03:07] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:03:07,769 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:03:07,769 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757257341.0743744-24961-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:02:21 GMT'}
2025-09-07 23:03:07,773 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:03:07,774 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257341.0744169-56948-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:02:21 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:03:07,776 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 56948 bytes
2025-09-07 23:03:07,776 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 24961 bytes
2025-09-07 23:03:07,777 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:03:07] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 23:03:07,777 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:03:07] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:03:07,784 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:03:07,784 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:03:07,784 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:03:07,784 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:03:07,784 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:03:07] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:03:31,957 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:03:31,957 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '53749', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryq8vZJcdByEkai215', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:03:31,957 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryq8vZJcdByEkai215
2025-09-07 23:03:31,957 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 53749
2025-09-07 23:03:31,965 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['Baisheng_Song_Resume_副本.pdf', 'resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 23:03:31,965 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[50 chars]'}
2025-09-07 23:03:31,965 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:03:31,965 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 21, Job desc length: 50, Mock: False
2025-09-07 23:03:31,965 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['Baisheng_Song_Resume_副本.pdf', 'resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf', 'resume_7.pdf', 'resume_6.pdf', 'resume_5.pdf', 'resume_4.pdf', 'resume_3.pdf', 'resume_2.pdf', 'resume_1.pdf', 'resume_101.pdf', 'resume_91.pdf', 'resume_81.pdf', 'resume_71.pdf', 'resume_61.pdf', 'resume_51.pdf', 'resume_41.pdf', 'resume_31.pdf', 'resume_21.pdf', 'resume_11.pdf']
2025-09-07 23:03:31,965 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 5 workers for 21 files
2025-09-07 23:03:31,966 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:03:31,966 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6148386816] Starting processing file: Baisheng_Song_Resume_副本.pdf
2025-09-07 23:03:31,966 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6148386816] File details - Name: Baisheng_Song_Resume_副本.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:31,971 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6148386816] Validating file type...
2025-09-07 23:03:31,970 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6165213184] Starting processing file: resume_10.pdf
2025-09-07 23:03:31,972 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6148386816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230331_6148386816_Baisheng_Song_Resume_.pdf
2025-09-07 23:03:31,972 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6165213184] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:31,973 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6165213184] Validating file type...
2025-09-07 23:03:31,973 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6165213184] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230331_6165213184_resume_10.pdf
2025-09-07 23:03:31,973 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6182039552] Starting processing file: resume_9.pdf
2025-09-07 23:03:31,973 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6182039552] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:31,973 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6182039552] Validating file type...
2025-09-07 23:03:31,973 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6182039552] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230331_6182039552_resume_9.pdf
2025-09-07 23:03:31,974 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6198865920] Starting processing file: resume_8.pdf
2025-09-07 23:03:31,975 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6182039552] File saved successfully
2025-09-07 23:03:31,975 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6198865920] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:31,975 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6215692288] Starting processing file: resume_7.pdf
2025-09-07 23:03:31,976 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6215692288] File details - Name: resume_7.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:31,976 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6215692288] Validating file type...
2025-09-07 23:03:31,976 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6198865920] Validating file type...
2025-09-07 23:03:31,975 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6182039552] Validating PDF structure...
2025-09-07 23:03:31,975 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 21 tasks submitted to thread pool
2025-09-07 23:03:31,976 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6148386816] File saved successfully
2025-09-07 23:03:31,979 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6215692288] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230331_6215692288_resume_7.pdf
2025-09-07 23:03:31,976 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6165213184] File saved successfully
2025-09-07 23:03:31,988 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6165213184] Validating PDF structure...
2025-09-07 23:03:31,979 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6198865920] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230331_6198865920_resume_8.pdf
2025-09-07 23:03:31,988 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6182039552] PDF validation passed
2025-09-07 23:03:31,987 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6148386816] Validating PDF structure...
2025-09-07 23:03:31,988 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6182039552] Extracting text from PDF...
2025-09-07 23:03:31,988 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6198865920] File saved successfully
2025-09-07 23:03:31,988 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6215692288] File saved successfully
2025-09-07 23:03:31,989 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6165213184] PDF validation passed
2025-09-07 23:03:31,989 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6198865920] Validating PDF structure...
2025-09-07 23:03:31,989 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6215692288] Validating PDF structure...
2025-09-07 23:03:31,989 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6165213184] Extracting text from PDF...
2025-09-07 23:03:31,992 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6182039552] Text extracted successfully - 870 characters
2025-09-07 23:03:31,992 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6182039552] Starting AI analysis with Qwen...
2025-09-07 23:03:31,992 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6182039552] Job description length: 50 chars
2025-09-07 23:03:31,993 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6182039552] Resume text length: 870 chars
2025-09-07 23:03:31,993 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6215692288] PDF validation passed
2025-09-07 23:03:31,993 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6198865920] PDF validation passed
2025-09-07 23:03:31,994 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:31,996 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6165213184] Text extracted successfully - 1093 characters
2025-09-07 23:03:31,996 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6215692288] Extracting text from PDF...
2025-09-07 23:03:31,997 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6148386816] PDF validation passed
2025-09-07 23:03:31,997 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6198865920] Extracting text from PDF...
2025-09-07 23:03:31,997 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 870 chars
2025-09-07 23:03:31,997 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6165213184] Starting AI analysis with Qwen...
2025-09-07 23:03:31,997 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6148386816] Extracting text from PDF...
2025-09-07 23:03:32,000 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6215692288] Text extracted successfully - 1070 characters
2025-09-07 23:03:32,000 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6165213184] Job description length: 50 chars
2025-09-07 23:03:32,001 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6215692288] Starting AI analysis with Qwen...
2025-09-07 23:03:32,003 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6198865920] Text extracted successfully - 1125 characters
2025-09-07 23:03:32,004 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6165213184] Resume text length: 1093 chars
2025-09-07 23:03:32,004 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6215692288] Job description length: 50 chars
2025-09-07 23:03:32,004 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6198865920] Starting AI analysis with Qwen...
2025-09-07 23:03:32,004 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:32,004 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6215692288] Resume text length: 1070 chars
2025-09-07 23:03:32,004 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6198865920] Job description length: 50 chars
2025-09-07 23:03:32,008 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 1093 chars
2025-09-07 23:03:32,008 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6148386816] Text extracted successfully - 3471 characters
2025-09-07 23:03:32,008 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:32,008 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6198865920] Resume text length: 1125 chars
2025-09-07 23:03:32,009 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6148386816] Starting AI analysis with Qwen...
2025-09-07 23:03:32,009 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 1070 chars
2025-09-07 23:03:32,009 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:32,009 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6148386816] Job description length: 50 chars
2025-09-07 23:03:32,009 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 1125 chars
2025-09-07 23:03:32,009 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6148386816] Resume text length: 3471 chars
2025-09-07 23:03:32,010 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:32,010 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 3471 chars
2025-09-07 23:03:35,335 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f7f1aada-574f-4ef5-b458-f4a364f6cab3', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nJohn Lee\n Email: john.lee@gmail.com | Phone: +1-869-955-1818\nAddress: 416 Main Street, London, UK\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Apple (2016 - 2018)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Google (2018 - 2019)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Stanford University (2010 - 2015)\nSkills\nMachine Learning, REST APIs, JavaScript, AWS, Go, Node.js, Python, GraphQL\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:35,335 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e9f9281f-05fd-4aa9-8050-0e4f2fbb54b2', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Brown\n Email: alice.brown@gmail.com | Phone: +1-396-365-3977\nAddress: 185 Main Street, New York, NY\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Apple (2018 - 2019)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSoftware Engineer, Google (2020 - 2021)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nData Engineer, Airbnb (2022 - 2023)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Imperial College London (2013 - 2015)\nSkills\nKubernetes, REST APIs, GraphQL, Microservices, JavaScript, Java, AWS, Node.js\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:35,335 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ff6befea-8108-47c1-a6a3-43ef7e35fa14', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nEmily Taylor\n Email: emily.taylor@gmail.com | Phone: +1-751-470-4245\nAddress: 848 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Airbnb (2016 - 2018)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Apple (2018 - 2020)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nBackend Engineer, Stripe (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, MIT (2010 - 2016)\nSkills\nGraphQL, Machine Learning, AWS, JavaScript, TypeScript, C++, Go, React\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:35,335 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1b39d63b-0c07-4dbc-a867-42a1a2e67d4b', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nBaisheng Song\n London, UK \x7f [email] \x7f [phone] \x7f [LinkedIn] \x7f [GitHub]\nProfessional Summary\nSenior Software Engineer with 9+ years of experience designing and building high-performance trading systems,\ndata platforms, and risk modeling frameworks across hedge funds, investment management, and financial\ntechnology. Proven ability to lead development of scalable, low-latency infrastructure and collaborate closely with\nquantitative researchers, traders, and risk teams. Strong expertise in Python, algorithms, and time series data,\nwith additional experience in C++ and distributed systems. Adept at translating complex financial strategies into\nrobust, production-grade code with rigorous risk and compliance standards.\nProfessional Experience\nOakNorth, London — Senior Software Engineer    Jan 2020 – Present\n- Led development of an impact model framework to forecast climate and credit risk, incorporating stress testing\nand scenario analysis.\n- Built data integration workflows and APIs enabling real-time ingestion of external and client-provided datasets;\noptimized pipelines for performance and reliability.\n- Designed and developed a federated API platform to unify access to distributed financial and market data\nsources.\n- Partnered with quantitative analysts and product managers to deliver scalable Python-based data processing\nsystems, ensuring quality, compliance, and resilience.\n- Championed code quality, CI/CD pipelines, and testing frameworks to ensure maintainability and robustness.\nBloomberg, London — Senior Software Engineer    Aug 2016 – Dec 2019\n- Designed and implemented FX and IRS order book systems with a distributed matching algorithm, enabling\nhigh-throughput, low-latency primary market trading.\n- Led cross-business-unit initiative to deliver a multi-asset auction platform (government bonds, repo, FX).\n- Developed a trade reporting platform handling large-scale financial transactions with strict latency and\ncompliance requirements.\n- Acted as a technical representative for the fixed-income trading group, building DevX tools and interfacing with\nresearch, operations, and product stakeholders.\n- Optimized C++ and Python codebases for performance and reliability, focusing on algorithms, memory\nefficiency, and concurrency.\nBlackRock, London — Software Engineer    Apr 2015 – Aug 2016\n- Built quantitative algorithms and frameworks to enable passive fixed-income portfolio management at scale.\n- Designed software to process time series financial data for strategy backtesting and risk analysis.\n- Partnered with portfolio managers to translate financial models into production-grade code.\nEducation\nBSc Computer Science, First Class Honours — [University Name], [Year]\nTechnical Skills\nProgramming: Python (advanced), C++ (strong), Java, Rust (familiar)\nLibraries: pandas, numpy, scipy, SQL/NoSQL\nSystems: Linux, distributed systems, APIs, CI/CD, testing frameworks\nDomains: Systematic trading, risk modeling, financial data, time series analysis\nOther: Cloud computing (AWS/GCP), version control (Git), performance optimization\nSelected Achievements\n- Designed real-time trading infrastructure at Bloomberg supporting sub-millisecond order execution.\n\n\n--- Page 2 ---\n- Built risk and scenario analysis frameworks at OakNorth, enabling regulatory-grade climate and credit risk\nforecasting.\n- Delivered multi-asset trading platforms used by institutional clients, integrating compliance and operational\nsafeguards.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:35,335 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-7ccc1d66-52a1-4f41-ab3b-77851d5778e1', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Lee\n Email: alice.lee@gmail.com | Phone: +1-345-265-4958\nAddress: 188 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSenior Software Engineer, Bloomberg (2016 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nSoftware Engineer, Apple (2018 - 2019)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Airbnb (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Stanford University (2011 - 2016)\nSkills\nMachine Learning, GraphQL, AWS, React, Microservices, Kubernetes, SQL, TypeScript\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:35,364 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:35,364 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:35,364 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:35,368 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:35,369 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:35,369 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:35,369 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:35,369 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:35,370 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:35,370 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11794e3c0>
2025-09-07 23:03:35,370 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:35,370 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117902d50>
2025-09-07 23:03:35,370 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117902e90>
2025-09-07 23:03:35,370 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117995cd0>
2025-09-07 23:03:35,370 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,370 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,370 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,370 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,370 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117996190>
2025-09-07 23:03:35,382 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,376 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:35,383 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,383 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:35,383 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,379 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:35,384 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,384 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:35,384 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,386 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:35,383 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:35,387 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c84290> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:35,384 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:35,388 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c843b0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:35,372 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:35,381 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:35,403 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,403 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:35,403 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,403 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:35,403 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c87e30> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:35,391 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,403 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,405 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:35,405 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,404 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:35,406 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:35,406 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:35,408 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c845f0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:35,412 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:35,412 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c844d0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:35,879 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179983b0>
2025-09-07 23:03:35,879 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:35,880 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:35,880 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:35,880 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:35,880 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:35,888 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117952140>
2025-09-07 23:03:35,888 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:35,889 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:35,889 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:35,889 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:35,889 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:35,892 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179518c0>
2025-09-07 23:03:35,895 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:35,896 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:35,896 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:35,896 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:35,897 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:36,090 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11793e450>
2025-09-07 23:03:36,090 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:36,090 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:36,090 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:36,091 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:36,091 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:36,546 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11793eb50>
2025-09-07 23:03:36,546 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:36,547 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:36,547 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:36,547 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:36,547 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:39,773 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'f569edc8-b39d-4f71-b45f-a8d8ddccdb7e'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3683'), (b'req-arrive-time', b'1757257416072'), (b'resp-start-time', b'1757257419755'), (b'x-envoy-upstream-service-time', b'3678'), (b'set-cookie', b'acw_tc=f569edc8-b39d-4f71-b45f-a8d8ddccdb7e7f0fba38e644f4c490107e80e46d1571;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:39 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:39,774 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:39,774 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:39,774 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:39,775 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:39,775 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:39,775 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'f569edc8-b39d-4f71-b45f-a8d8ddccdb7e', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3683', 'req-arrive-time': '1757257416072', 'resp-start-time': '1757257419755', 'x-envoy-upstream-service-time': '3678', 'set-cookie': 'acw_tc=f569edc8-b39d-4f71-b45f-a8d8ddccdb7e7f0fba38e644f4c490107e80e46d1571;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:39 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:39,775 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: f569edc8-b39d-4f71-b45f-a8d8ddccdb7e
2025-09-07 23:03:39,796 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:39,796 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Brown, Score: 75
2025-09-07 23:03:39,796 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6165213184] AI analysis completed successfully
2025-09-07 23:03:39,796 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6165213184] Analysis result - Candidate: Alice Brown, Score: 75
2025-09-07 23:03:39,796 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6165213184] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230331_6165213184_resume_10.pdf
2025-09-07 23:03:39,796 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6165213184] File processing completed successfully for: resume_10.pdf
2025-09-07 23:03:39,797 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6165213184] Saving successful result to cache
2025-09-07 23:03:39,797 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 20 cached responses
2025-09-07 23:03:39,799 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 21
2025-09-07 23:03:39,799 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Brown - 75%
2025-09-07 23:03:39,799 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6165213184] Returning result: Alice Brown - 75%
2025-09-07 23:03:39,799 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6165213184] Starting processing file: resume_6.pdf
2025-09-07 23:03:39,799 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6165213184] File details - Name: resume_6.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:39,799 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6165213184] Validating file type...
2025-09-07 23:03:39,799 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6165213184] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230339_6165213184_resume_6.pdf
2025-09-07 23:03:39,800 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6165213184] File saved successfully
2025-09-07 23:03:39,800 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6165213184] Validating PDF structure...
2025-09-07 23:03:39,801 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6165213184] PDF validation passed
2025-09-07 23:03:39,801 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6165213184] Extracting text from PDF...
2025-09-07 23:03:39,804 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6165213184] Text extracted successfully - 873 characters
2025-09-07 23:03:39,804 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6165213184] Starting AI analysis with Qwen...
2025-09-07 23:03:39,804 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6165213184] Job description length: 50 chars
2025-09-07 23:03:39,804 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6165213184] Resume text length: 873 chars
2025-09-07 23:03:39,804 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:39,804 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 873 chars
2025-09-07 23:03:39,825 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f339037e-9a9c-4a15-a213-39d59f786ccd', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nDavid Lee\n Email: david.lee@gmail.com | Phone: +1-788-771-2191\nAddress: 684 Main Street, New York, NY\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Airbnb (2016 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nData Engineer, Amazon (2018 - 2020)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Carnegie Mellon (2010 - 2016)\nSkills\nGraphQL, Node.js, Python, C++, Kubernetes, SQL, REST APIs, Docker\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:39,825 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:39,825 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:39,826 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117863e30>
2025-09-07 23:03:39,826 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:39,826 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:39,826 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:39,826 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:39,826 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:39,826 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:39,826 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107dfc3b0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:40,046 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'de2d8632-b218-4328-b086-e92235ddd907'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3766'), (b'req-arrive-time', b'1757257416265'), (b'resp-start-time', b'1757257420032'), (b'x-envoy-upstream-service-time', b'3764'), (b'set-cookie', b'acw_tc=de2d8632-b218-4328-b086-e92235ddd907eab682856bec6d366d9419107340ff22;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:39 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:40,047 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:40,047 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:40,047 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:40,047 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:40,047 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:40,047 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'de2d8632-b218-4328-b086-e92235ddd907', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3766', 'req-arrive-time': '1757257416265', 'resp-start-time': '1757257420032', 'x-envoy-upstream-service-time': '3764', 'set-cookie': 'acw_tc=de2d8632-b218-4328-b086-e92235ddd907eab682856bec6d366d9419107340ff22;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:39 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:40,047 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: de2d8632-b218-4328-b086-e92235ddd907
2025-09-07 23:03:40,048 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:40,048 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: John Lee, Score: 75
2025-09-07 23:03:40,048 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6182039552] AI analysis completed successfully
2025-09-07 23:03:40,048 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6182039552] Analysis result - Candidate: John Lee, Score: 75
2025-09-07 23:03:40,048 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6182039552] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230331_6182039552_resume_9.pdf
2025-09-07 23:03:40,049 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6182039552] File processing completed successfully for: resume_9.pdf
2025-09-07 23:03:40,049 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6182039552] Saving successful result to cache
2025-09-07 23:03:40,049 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 21 cached responses
2025-09-07 23:03:40,050 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 22
2025-09-07 23:03:40,050 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: John Lee - 75%
2025-09-07 23:03:40,050 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6182039552] Returning result: John Lee - 75%
2025-09-07 23:03:40,050 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6182039552] Starting processing file: resume_5.pdf
2025-09-07 23:03:40,050 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6182039552] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:40,050 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6182039552] Validating file type...
2025-09-07 23:03:40,050 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6182039552] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230340_6182039552_resume_5.pdf
2025-09-07 23:03:40,051 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6182039552] File saved successfully
2025-09-07 23:03:40,051 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6182039552] Validating PDF structure...
2025-09-07 23:03:40,054 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6182039552] PDF validation passed
2025-09-07 23:03:40,054 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6182039552] Extracting text from PDF...
2025-09-07 23:03:40,058 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6182039552] Text extracted successfully - 922 characters
2025-09-07 23:03:40,058 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6182039552] Starting AI analysis with Qwen...
2025-09-07 23:03:40,059 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6182039552] Job description length: 50 chars
2025-09-07 23:03:40,059 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6182039552] Resume text length: 922 chars
2025-09-07 23:03:40,062 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:40,062 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 922 chars
2025-09-07 23:03:40,087 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-25435251-a7b3-4409-9785-ca5161f38c15', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nOlivia Johnson\n Email: olivia.johnson@gmail.com | Phone: +1-745-334-3029\nAddress: 544 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSoftware Engineer, Bloomberg (2017 - 2018)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nFull Stack Developer, Bloomberg (2019 - 2021)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Carnegie Mellon (2012 - 2016)\nSkills\nC++, Machine Learning, REST APIs, Node.js, Docker, Kubernetes, React, Java\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:40,087 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:40,087 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:40,088 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a145f0>
2025-09-07 23:03:40,088 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:40,088 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:40,088 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:40,088 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:40,088 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:40,088 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:40,088 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107dfdd90> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:40,223 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'0e0b3ec3-3440-4953-b0f4-137ad6d33bd2'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3482'), (b'req-arrive-time', b'1757257416704'), (b'resp-start-time', b'1757257420187'), (b'x-envoy-upstream-service-time', b'3481'), (b'set-cookie', b'acw_tc=0e0b3ec3-3440-4953-b0f4-137ad6d33bd2b938d6acf1b3ce51c1e112ea7be15074;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:39 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:40,223 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:40,223 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:40,223 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:40,224 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:40,224 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:40,224 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '0e0b3ec3-3440-4953-b0f4-137ad6d33bd2', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3482', 'req-arrive-time': '1757257416704', 'resp-start-time': '1757257420187', 'x-envoy-upstream-service-time': '3481', 'set-cookie': 'acw_tc=0e0b3ec3-3440-4953-b0f4-137ad6d33bd2b938d6acf1b3ce51c1e112ea7be15074;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:39 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:40,224 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 0e0b3ec3-3440-4953-b0f4-137ad6d33bd2
2025-09-07 23:03:40,224 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:40,224 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Lee, Score: 75
2025-09-07 23:03:40,225 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6198865920] AI analysis completed successfully
2025-09-07 23:03:40,225 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6198865920] Analysis result - Candidate: Alice Lee, Score: 75
2025-09-07 23:03:40,225 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6198865920] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230331_6198865920_resume_8.pdf
2025-09-07 23:03:40,225 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6198865920] File processing completed successfully for: resume_8.pdf
2025-09-07 23:03:40,225 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6198865920] Saving successful result to cache
2025-09-07 23:03:40,225 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 22 cached responses
2025-09-07 23:03:40,227 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 23
2025-09-07 23:03:40,227 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Lee - 75%
2025-09-07 23:03:40,227 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6198865920] Returning result: Alice Lee - 75%
2025-09-07 23:03:40,228 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6198865920] Starting processing file: resume_4.pdf
2025-09-07 23:03:40,228 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6198865920] File details - Name: resume_4.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:40,228 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6198865920] Validating file type...
2025-09-07 23:03:40,228 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6198865920] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230340_6198865920_resume_4.pdf
2025-09-07 23:03:40,228 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6198865920] File saved successfully
2025-09-07 23:03:40,228 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6198865920] Validating PDF structure...
2025-09-07 23:03:40,229 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6198865920] PDF validation passed
2025-09-07 23:03:40,229 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6198865920] Extracting text from PDF...
2025-09-07 23:03:40,234 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6198865920] Text extracted successfully - 889 characters
2025-09-07 23:03:40,234 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6198865920] Starting AI analysis with Qwen...
2025-09-07 23:03:40,240 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6198865920] Job description length: 50 chars
2025-09-07 23:03:40,240 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6198865920] Resume text length: 889 chars
2025-09-07 23:03:40,241 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:40,241 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 889 chars
2025-09-07 23:03:40,265 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-46dffba7-d337-4cc8-b89a-5276104932cf', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nEmily Miller\n Email: emily.miller@gmail.com | Phone: +1-258-807-8181\nAddress: 518 Main Street, Seattle, WA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Apple (2015 - 2017)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Bloomberg (2017 - 2019)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Oxford University (2010 - 2014)\nSkills\nSQL, Java, Python, Docker, AWS, Microservices, Kubernetes, TypeScript\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:40,266 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:40,266 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:40,266 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179418d0>
2025-09-07 23:03:40,266 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:40,267 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:40,267 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:40,267 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:40,267 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:40,267 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:40,267 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107dfc560> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:40,284 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179ce350>
2025-09-07 23:03:40,284 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:40,284 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:40,284 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:40,284 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:40,284 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:40,320 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'81a3e4b3-4cd5-4838-a4cb-44b145d5317c'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4235'), (b'req-arrive-time', b'1757257416054'), (b'resp-start-time', b'1757257420290'), (b'x-envoy-upstream-service-time', b'4233'), (b'set-cookie', b'acw_tc=81a3e4b3-4cd5-4838-a4cb-44b145d5317c7b9210eb265cde0e5cb3d3bed6c79d96;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:39 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:40,320 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:40,320 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:40,320 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:40,321 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:40,321 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:40,321 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '81a3e4b3-4cd5-4838-a4cb-44b145d5317c', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4235', 'req-arrive-time': '1757257416054', 'resp-start-time': '1757257420290', 'x-envoy-upstream-service-time': '4233', 'set-cookie': 'acw_tc=81a3e4b3-4cd5-4838-a4cb-44b145d5317c7b9210eb265cde0e5cb3d3bed6c79d96;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:39 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:40,321 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 81a3e4b3-4cd5-4838-a4cb-44b145d5317c
2025-09-07 23:03:40,321 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:40,321 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Baisheng Song, Score: 92
2025-09-07 23:03:40,321 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6148386816] AI analysis completed successfully
2025-09-07 23:03:40,321 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6148386816] Analysis result - Candidate: Baisheng Song, Score: 92
2025-09-07 23:03:40,321 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6148386816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230331_6148386816_Baisheng_Song_Resume_.pdf
2025-09-07 23:03:40,321 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6148386816] File processing completed successfully for: Baisheng_Song_Resume_.pdf
2025-09-07 23:03:40,321 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6148386816] Saving successful result to cache
2025-09-07 23:03:40,322 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 23 cached responses
2025-09-07 23:03:40,322 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 24
2025-09-07 23:03:40,322 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Baisheng Song - 92%
2025-09-07 23:03:40,322 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6148386816] Returning result: Baisheng Song - 92%
2025-09-07 23:03:40,323 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6148386816] Starting processing file: resume_3.pdf
2025-09-07 23:03:40,323 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/21 completed: Baisheng_Song_Resume_.pdf - success
2025-09-07 23:03:40,323 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6148386816] File details - Name: resume_3.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:40,323 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/21 completed: resume_10.pdf - success
2025-09-07 23:03:40,323 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6148386816] Validating file type...
2025-09-07 23:03:40,323 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/21 completed: resume_9.pdf - success
2025-09-07 23:03:40,323 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6148386816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230340_6148386816_resume_3.pdf
2025-09-07 23:03:40,323 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/21 completed: resume_8.pdf - success
2025-09-07 23:03:40,323 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6148386816] File saved successfully
2025-09-07 23:03:40,323 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6148386816] Validating PDF structure...
2025-09-07 23:03:40,324 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6148386816] PDF validation passed
2025-09-07 23:03:40,324 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6148386816] Extracting text from PDF...
2025-09-07 23:03:40,325 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6148386816] Text extracted successfully - 902 characters
2025-09-07 23:03:40,325 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6148386816] Starting AI analysis with Qwen...
2025-09-07 23:03:40,326 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6148386816] Job description length: 50 chars
2025-09-07 23:03:40,326 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6148386816] Resume text length: 902 chars
2025-09-07 23:03:40,326 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:40,326 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 902 chars
2025-09-07 23:03:40,344 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-72a32cac-fe8b-4b1b-8bb9-6ce0cc2fb1a9', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nOlivia Miller\n Email: olivia.miller@gmail.com | Phone: +1-964-901-9879\nAddress: 568 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nFull Stack Developer, Google (2015 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nData Engineer, Apple (2017 - 2019)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, MIT (2011 - 2016)\nSkills\nGraphQL, Go, REST APIs, Docker, TypeScript, React, Kubernetes, Machine Learning\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:40,345 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:40,345 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:40,345 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179629c0>
2025-09-07 23:03:40,345 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:40,346 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:40,346 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:40,346 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:40,346 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:40,346 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:40,346 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1123312e0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:40,589 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'1472ed3e-a888-4e65-a946-2ea3c35e7bb1'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3614'), (b'req-arrive-time', b'1757257416068'), (b'resp-start-time', b'1757257419682'), (b'x-envoy-upstream-service-time', b'3612'), (b'set-cookie', b'acw_tc=1472ed3e-a888-4e65-a946-2ea3c35e7bb10e293e310fa0bbcb7bf38f638fdaf3d0;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:39 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:40,590 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:40,590 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:40,590 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:40,590 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:40,590 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:40,590 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '1472ed3e-a888-4e65-a946-2ea3c35e7bb1', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3614', 'req-arrive-time': '1757257416068', 'resp-start-time': '1757257419682', 'x-envoy-upstream-service-time': '3612', 'set-cookie': 'acw_tc=1472ed3e-a888-4e65-a946-2ea3c35e7bb10e293e310fa0bbcb7bf38f638fdaf3d0;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:39 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:40,590 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 1472ed3e-a888-4e65-a946-2ea3c35e7bb1
2025-09-07 23:03:40,591 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:40,591 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Emily Taylor, Score: 75
2025-09-07 23:03:40,591 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6215692288] AI analysis completed successfully
2025-09-07 23:03:40,591 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6215692288] Analysis result - Candidate: Emily Taylor, Score: 75
2025-09-07 23:03:40,591 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6215692288] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230331_6215692288_resume_7.pdf
2025-09-07 23:03:40,591 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6215692288] File processing completed successfully for: resume_7.pdf
2025-09-07 23:03:40,592 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6215692288] Saving successful result to cache
2025-09-07 23:03:40,592 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 24 cached responses
2025-09-07 23:03:40,596 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 25
2025-09-07 23:03:40,596 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Emily Taylor - 75%
2025-09-07 23:03:40,597 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6215692288] Returning result: Emily Taylor - 75%
2025-09-07 23:03:40,597 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6215692288] Starting processing file: resume_2.pdf
2025-09-07 23:03:40,597 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 5/21 completed: resume_7.pdf - success
2025-09-07 23:03:40,597 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6215692288] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:40,597 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6215692288] Validating file type...
2025-09-07 23:03:40,597 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6215692288] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230340_6215692288_resume_2.pdf
2025-09-07 23:03:40,597 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6215692288] File saved successfully
2025-09-07 23:03:40,598 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6215692288] Validating PDF structure...
2025-09-07 23:03:40,598 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6215692288] PDF validation passed
2025-09-07 23:03:40,598 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6215692288] Extracting text from PDF...
2025-09-07 23:03:40,606 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6215692288] Text extracted successfully - 1088 characters
2025-09-07 23:03:40,606 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6215692288] Starting AI analysis with Qwen...
2025-09-07 23:03:40,606 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6215692288] Job description length: 50 chars
2025-09-07 23:03:40,606 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6215692288] Resume text length: 1088 chars
2025-09-07 23:03:40,606 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:40,606 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 1088 chars
2025-09-07 23:03:40,634 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-16bb174b-a367-4d77-88dd-47712f30ee89', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Smith\n Email: alice.smith@gmail.com | Phone: +1-915-210-5038\nAddress: 104 Main Street, Seattle, WA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSenior Software Engineer, Stripe (2016 - 2018)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSoftware Engineer, Airbnb (2018 - 2019)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nBackend Engineer, Apple (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Imperial College London (2010 - 2014)\nSkills\nSQL, C++, React, REST APIs, Docker, AWS, Node.js, Java\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:40,635 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:40,635 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:40,635 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1125d7f50>
2025-09-07 23:03:40,635 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:40,635 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:40,635 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:40,635 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:40,635 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:40,636 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:40,636 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1079839b0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:40,647 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x11797c950>
2025-09-07 23:03:40,647 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:40,647 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:40,647 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:40,647 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:40,647 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:40,735 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117956e60>
2025-09-07 23:03:40,736 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:40,736 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:40,736 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:40,736 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:40,736 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:40,774 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117955b20>
2025-09-07 23:03:40,775 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:40,775 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:40,775 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:40,775 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:40,775 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:41,068 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a0ba70>
2025-09-07 23:03:41,069 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:41,070 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:41,070 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:41,070 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:41,070 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:44,694 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'a5312fff-8bec-45fa-87e2-2ef76718ac89'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3722'), (b'req-arrive-time', b'1757257420940'), (b'resp-start-time', b'1757257424662'), (b'x-envoy-upstream-service-time', b'3716'), (b'set-cookie', b'acw_tc=a5312fff-8bec-45fa-87e2-2ef76718ac89dea73b5ad8b1335b4e7947fa0c33fcf9;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:44 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:44,695 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:44,696 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:44,696 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:44,696 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:44,696 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:44,696 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'a5312fff-8bec-45fa-87e2-2ef76718ac89', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3722', 'req-arrive-time': '1757257420940', 'resp-start-time': '1757257424662', 'x-envoy-upstream-service-time': '3716', 'set-cookie': 'acw_tc=a5312fff-8bec-45fa-87e2-2ef76718ac89dea73b5ad8b1335b4e7947fa0c33fcf9;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:44 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:44,697 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: a5312fff-8bec-45fa-87e2-2ef76718ac89
2025-09-07 23:03:44,697 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:44,697 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Olivia Miller, Score: 78
2025-09-07 23:03:44,698 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6148386816] AI analysis completed successfully
2025-09-07 23:03:44,698 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6148386816] Analysis result - Candidate: Olivia Miller, Score: 78
2025-09-07 23:03:44,698 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6148386816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230340_6148386816_resume_3.pdf
2025-09-07 23:03:44,698 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6148386816] File processing completed successfully for: resume_3.pdf
2025-09-07 23:03:44,698 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6148386816] Saving successful result to cache
2025-09-07 23:03:44,699 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 25 cached responses
2025-09-07 23:03:44,700 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 26
2025-09-07 23:03:44,700 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Olivia Miller - 78%
2025-09-07 23:03:44,700 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6148386816] Returning result: Olivia Miller - 78%
2025-09-07 23:03:44,700 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6148386816] Starting processing file: resume_1.pdf
2025-09-07 23:03:44,700 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6148386816] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:44,700 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6148386816] Validating file type...
2025-09-07 23:03:44,700 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6148386816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230344_6148386816_resume_1.pdf
2025-09-07 23:03:44,701 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6148386816] File saved successfully
2025-09-07 23:03:44,702 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6148386816] Validating PDF structure...
2025-09-07 23:03:44,703 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6148386816] PDF validation passed
2025-09-07 23:03:44,703 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6148386816] Extracting text from PDF...
2025-09-07 23:03:44,708 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6148386816] Text extracted successfully - 859 characters
2025-09-07 23:03:44,708 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6148386816] Starting AI analysis with Qwen...
2025-09-07 23:03:44,708 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6148386816] Job description length: 50 chars
2025-09-07 23:03:44,712 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6148386816] Resume text length: 859 chars
2025-09-07 23:03:44,712 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:44,713 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 859 chars
2025-09-07 23:03:44,738 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b0352248-d29e-4081-bf05-6c6194a88468', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nJohn Lee\n Email: john.lee@gmail.com | Phone: +1-409-397-2292\nAddress: 580 Main Street, London, UK\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Stripe (2018 - 2020)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Netflix (2020 - 2021)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, UC Berkeley (2010 - 2016)\nSkills\nKubernetes, Node.js, Docker, Microservices, Java, AWS, C++, Go\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:44,739 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:44,739 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:44,739 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a09630>
2025-09-07 23:03:44,739 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:44,739 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:44,739 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:44,740 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:44,740 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:44,740 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:44,740 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1123310a0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:44,740 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'9d38bf29-d4d9-4ee0-bf5f-12d563cdda49'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4230'), (b'req-arrive-time', b'1757257420467'), (b'resp-start-time', b'1757257424698'), (b'x-envoy-upstream-service-time', b'4229'), (b'set-cookie', b'acw_tc=9d38bf29-d4d9-4ee0-bf5f-12d563cdda49cc67e622ebd521703d573fbc162b0be3;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:44 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:44,741 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:44,741 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:44,741 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:44,741 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:44,741 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:44,741 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '9d38bf29-d4d9-4ee0-bf5f-12d563cdda49', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4230', 'req-arrive-time': '1757257420467', 'resp-start-time': '1757257424698', 'x-envoy-upstream-service-time': '4229', 'set-cookie': 'acw_tc=9d38bf29-d4d9-4ee0-bf5f-12d563cdda49cc67e622ebd521703d573fbc162b0be3;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:44 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:44,741 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 9d38bf29-d4d9-4ee0-bf5f-12d563cdda49
2025-09-07 23:03:44,741 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:44,741 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: David Lee, Score: 75
2025-09-07 23:03:44,741 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6165213184] AI analysis completed successfully
2025-09-07 23:03:44,741 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6165213184] Analysis result - Candidate: David Lee, Score: 75
2025-09-07 23:03:44,741 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6165213184] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230339_6165213184_resume_6.pdf
2025-09-07 23:03:44,741 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6165213184] File processing completed successfully for: resume_6.pdf
2025-09-07 23:03:44,742 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6165213184] Saving successful result to cache
2025-09-07 23:03:44,742 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 26 cached responses
2025-09-07 23:03:44,742 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 27
2025-09-07 23:03:44,742 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: David Lee - 75%
2025-09-07 23:03:44,742 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6165213184] Returning result: David Lee - 75%
2025-09-07 23:03:44,743 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6165213184] Starting processing file: resume_101.pdf
2025-09-07 23:03:44,743 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 6/21 completed: resume_6.pdf - success
2025-09-07 23:03:44,743 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6165213184] File details - Name: resume_101.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:44,743 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6165213184] Validating file type...
2025-09-07 23:03:44,743 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6165213184] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230344_6165213184_resume_101.pdf
2025-09-07 23:03:44,743 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6165213184] File saved successfully
2025-09-07 23:03:44,743 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6165213184] Validating PDF structure...
2025-09-07 23:03:44,743 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6165213184] PDF validation passed
2025-09-07 23:03:44,743 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6165213184] Extracting text from PDF...
2025-09-07 23:03:44,745 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6165213184] Text extracted successfully - 405 characters
2025-09-07 23:03:44,745 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6165213184] Starting AI analysis with Qwen...
2025-09-07 23:03:44,745 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6165213184] Job description length: 50 chars
2025-09-07 23:03:44,745 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6165213184] Resume text length: 405 chars
2025-09-07 23:03:44,745 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:44,745 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 405 chars
2025-09-07 23:03:44,761 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-394b4494-90a8-4189-87db-b7fb26419965', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nIsabella Martinez\n Event Coordinator - Hospitality\nEducation\nBachelor\'s degree from University of Toronto\nExperience\nWorked as Event Coordinator at JPMorgan (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:44,761 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:44,761 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:44,762 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x112331d90>
2025-09-07 23:03:44,762 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:44,762 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:44,762 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:44,762 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:44,762 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:44,762 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:44,762 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112331a30> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:44,989 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'14a5f668-ea16-4c9d-ba1f-1a562f093a9e'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4131'), (b'req-arrive-time', b'1757257420820'), (b'resp-start-time', b'1757257424951'), (b'x-envoy-upstream-service-time', b'4130'), (b'set-cookie', b'acw_tc=14a5f668-ea16-4c9d-ba1f-1a562f093a9ede645af720362892944d71c0367cd3aa;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:44 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:44,990 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:44,990 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:44,991 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:44,991 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:44,991 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:44,991 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '14a5f668-ea16-4c9d-ba1f-1a562f093a9e', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4131', 'req-arrive-time': '1757257420820', 'resp-start-time': '1757257424951', 'x-envoy-upstream-service-time': '4130', 'set-cookie': 'acw_tc=14a5f668-ea16-4c9d-ba1f-1a562f093a9ede645af720362892944d71c0367cd3aa;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:44 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:44,991 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 14a5f668-ea16-4c9d-ba1f-1a562f093a9e
2025-09-07 23:03:44,992 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:44,992 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Olivia Johnson, Score: 85
2025-09-07 23:03:44,992 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6182039552] AI analysis completed successfully
2025-09-07 23:03:44,992 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6182039552] Analysis result - Candidate: Olivia Johnson, Score: 85
2025-09-07 23:03:44,992 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6182039552] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230340_6182039552_resume_5.pdf
2025-09-07 23:03:44,992 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6182039552] File processing completed successfully for: resume_5.pdf
2025-09-07 23:03:44,993 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6182039552] Saving successful result to cache
2025-09-07 23:03:44,994 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 27 cached responses
2025-09-07 23:03:44,997 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 28
2025-09-07 23:03:44,997 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Olivia Johnson - 85%
2025-09-07 23:03:44,997 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6182039552] Returning result: Olivia Johnson - 85%
2025-09-07 23:03:44,998 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6182039552] Starting processing file: resume_91.pdf
2025-09-07 23:03:44,998 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 7/21 completed: resume_5.pdf - success
2025-09-07 23:03:44,998 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6182039552] File details - Name: resume_91.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:44,998 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6182039552] Validating file type...
2025-09-07 23:03:44,998 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6182039552] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230344_6182039552_resume_91.pdf
2025-09-07 23:03:44,999 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6182039552] File saved successfully
2025-09-07 23:03:44,999 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6182039552] Validating PDF structure...
2025-09-07 23:03:45,000 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6182039552] PDF validation passed
2025-09-07 23:03:45,000 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6182039552] Extracting text from PDF...
2025-09-07 23:03:45,003 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6182039552] Text extracted successfully - 409 characters
2025-09-07 23:03:45,004 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6182039552] Starting AI analysis with Qwen...
2025-09-07 23:03:45,005 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6182039552] Job description length: 50 chars
2025-09-07 23:03:45,005 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6182039552] Resume text length: 409 chars
2025-09-07 23:03:45,005 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:45,005 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 409 chars
2025-09-07 23:03:45,030 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d39c3ac7-b5c1-40de-8060-819a4b9eb444', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nJames Anderson\n Project Manager - Construction\nEducation\nBachelor\'s degree from National University of Singapore\nExperience\nWorked as Project Manager at Siemens (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:45,031 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:45,031 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:45,031 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179e5b50>
2025-09-07 23:03:45,031 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:45,031 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:45,031 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:45,032 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:45,032 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:45,032 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:45,032 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112330b90> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:45,132 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'd60a2649-7743-45a9-8080-dee4fe9e0d82'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3831'), (b'req-arrive-time', b'1757257421273'), (b'resp-start-time', b'1757257425105'), (b'x-envoy-upstream-service-time', b'3830'), (b'set-cookie', b'acw_tc=d60a2649-7743-45a9-8080-dee4fe9e0d8282562eab93fd1a6af270bad543125b39;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:44 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:45,132 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:45,133 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:45,133 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:45,133 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:45,133 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:45,133 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'd60a2649-7743-45a9-8080-dee4fe9e0d82', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3831', 'req-arrive-time': '1757257421273', 'resp-start-time': '1757257425105', 'x-envoy-upstream-service-time': '3830', 'set-cookie': 'acw_tc=d60a2649-7743-45a9-8080-dee4fe9e0d8282562eab93fd1a6af270bad543125b39;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:44 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:45,133 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: d60a2649-7743-45a9-8080-dee4fe9e0d82
2025-09-07 23:03:45,134 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:45,134 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Smith, Score: 75
2025-09-07 23:03:45,134 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6215692288] AI analysis completed successfully
2025-09-07 23:03:45,134 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6215692288] Analysis result - Candidate: Alice Smith, Score: 75
2025-09-07 23:03:45,134 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6215692288] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230340_6215692288_resume_2.pdf
2025-09-07 23:03:45,134 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6215692288] File processing completed successfully for: resume_2.pdf
2025-09-07 23:03:45,134 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6215692288] Saving successful result to cache
2025-09-07 23:03:45,135 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 28 cached responses
2025-09-07 23:03:45,137 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 29
2025-09-07 23:03:45,137 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Smith - 75%
2025-09-07 23:03:45,137 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6215692288] Returning result: Alice Smith - 75%
2025-09-07 23:03:45,137 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6215692288] Starting processing file: resume_81.pdf
2025-09-07 23:03:45,137 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6215692288] File details - Name: resume_81.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:45,137 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6215692288] Validating file type...
2025-09-07 23:03:45,137 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6215692288] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230345_6215692288_resume_81.pdf
2025-09-07 23:03:45,137 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6215692288] File saved successfully
2025-09-07 23:03:45,137 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6215692288] Validating PDF structure...
2025-09-07 23:03:45,138 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6215692288] PDF validation passed
2025-09-07 23:03:45,138 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6215692288] Extracting text from PDF...
2025-09-07 23:03:45,141 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6215692288] Text extracted successfully - 390 characters
2025-09-07 23:03:45,141 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6215692288] Starting AI analysis with Qwen...
2025-09-07 23:03:45,141 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6215692288] Job description length: 50 chars
2025-09-07 23:03:45,142 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6215692288] Resume text length: 390 chars
2025-09-07 23:03:45,142 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:45,142 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 390 chars
2025-09-07 23:03:45,166 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f2793c29-8491-479d-b42b-fe0c5d407098', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nOlivia Taylor\n Paralegal - Legal\nEducation\nBachelor\'s degree from National University of Singapore\nExperience\nWorked as Paralegal at Unilever (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:45,166 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:45,166 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:45,167 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179e5c50>
2025-09-07 23:03:45,167 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:45,167 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:45,167 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:45,167 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:45,167 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:45,167 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:45,167 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1123305f0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:45,257 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179779a0>
2025-09-07 23:03:45,258 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:45,258 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:45,258 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:45,258 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:45,258 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:45,640 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a447c0>
2025-09-07 23:03:45,640 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:45,641 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:45,641 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:45,641 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:45,641 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:45,642 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a4e630>
2025-09-07 23:03:45,642 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:45,642 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:45,642 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:45,642 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:45,642 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:45,721 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'309e8706-41bb-4c7f-9d56-dfcd45fd0871'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4655'), (b'req-arrive-time', b'1757257420928'), (b'resp-start-time', b'1757257425583'), (b'x-envoy-upstream-service-time', b'3777'), (b'set-cookie', b'acw_tc=309e8706-41bb-4c7f-9d56-dfcd45fd0871e2e16f5fb002552a5a29ab38a5ee1052;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:45 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:45,722 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:45,722 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:45,722 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:45,722 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:45,722 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:45,722 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '309e8706-41bb-4c7f-9d56-dfcd45fd0871', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4655', 'req-arrive-time': '1757257420928', 'resp-start-time': '1757257425583', 'x-envoy-upstream-service-time': '3777', 'set-cookie': 'acw_tc=309e8706-41bb-4c7f-9d56-dfcd45fd0871e2e16f5fb002552a5a29ab38a5ee1052;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:45 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:45,722 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 309e8706-41bb-4c7f-9d56-dfcd45fd0871
2025-09-07 23:03:45,723 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:45,723 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Emily Miller, Score: 78
2025-09-07 23:03:45,723 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6198865920] AI analysis completed successfully
2025-09-07 23:03:45,723 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6198865920] Analysis result - Candidate: Emily Miller, Score: 78
2025-09-07 23:03:45,723 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6198865920] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230340_6198865920_resume_4.pdf
2025-09-07 23:03:45,723 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6198865920] File processing completed successfully for: resume_4.pdf
2025-09-07 23:03:45,723 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6198865920] Saving successful result to cache
2025-09-07 23:03:45,724 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 29 cached responses
2025-09-07 23:03:45,725 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 30
2025-09-07 23:03:45,725 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Emily Miller - 78%
2025-09-07 23:03:45,725 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6198865920] Returning result: Emily Miller - 78%
2025-09-07 23:03:45,725 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6198865920] Starting processing file: resume_71.pdf
2025-09-07 23:03:45,725 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 8/21 completed: resume_4.pdf - success
2025-09-07 23:03:45,725 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6198865920] File details - Name: resume_71.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:45,725 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 9/21 completed: resume_3.pdf - success
2025-09-07 23:03:45,725 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 10/21 completed: resume_2.pdf - success
2025-09-07 23:03:45,725 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6198865920] Validating file type...
2025-09-07 23:03:45,725 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6198865920] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230345_6198865920_resume_71.pdf
2025-09-07 23:03:45,726 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6198865920] File saved successfully
2025-09-07 23:03:45,726 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6198865920] Validating PDF structure...
2025-09-07 23:03:45,732 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6198865920] PDF validation passed
2025-09-07 23:03:45,732 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6198865920] Extracting text from PDF...
2025-09-07 23:03:45,735 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6198865920] Text extracted successfully - 391 characters
2025-09-07 23:03:45,735 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6198865920] Starting AI analysis with Qwen...
2025-09-07 23:03:45,735 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6198865920] Job description length: 50 chars
2025-09-07 23:03:45,735 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6198865920] Resume text length: 391 chars
2025-09-07 23:03:45,736 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:45,736 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 391 chars
2025-09-07 23:03:45,760 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-eef83a02-501e-4bf1-94e7-b6d567c3c1b9', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nDaniel Wilson\n Graphic Designer - Design\nEducation\nBachelor\'s degree from Harvard University\nExperience\nWorked as Graphic Designer at JPMorgan (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:45,761 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:45,761 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:45,761 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117968770>
2025-09-07 23:03:45,761 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:45,761 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:45,761 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:45,761 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:45,761 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:45,761 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:45,761 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107dff890> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:45,945 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a0d360>
2025-09-07 23:03:45,946 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:45,946 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:45,946 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:45,946 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:45,946 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:46,387 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a0cff0>
2025-09-07 23:03:46,387 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:46,388 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:46,388 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:46,388 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:46,388 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:48,952 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'891ab88a-c385-4e63-aa2b-c77fe09cfedf'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'2969'), (b'req-arrive-time', b'1757257425435'), (b'resp-start-time', b'1757257428405'), (b'x-envoy-upstream-service-time', b'2968'), (b'set-cookie', b'acw_tc=891ab88a-c385-4e63-aa2b-c77fe09cfedffa81ca1d8d223923a46ee439cf7f5060;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:48 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:48,954 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:48,954 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:48,954 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:48,954 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:48,954 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:48,954 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '891ab88a-c385-4e63-aa2b-c77fe09cfedf', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '2969', 'req-arrive-time': '1757257425435', 'resp-start-time': '1757257428405', 'x-envoy-upstream-service-time': '2968', 'set-cookie': 'acw_tc=891ab88a-c385-4e63-aa2b-c77fe09cfedffa81ca1d8d223923a46ee439cf7f5060;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:48 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:48,955 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 891ab88a-c385-4e63-aa2b-c77fe09cfedf
2025-09-07 23:03:48,955 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:48,955 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Isabella Martinez, Score: 35
2025-09-07 23:03:48,956 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6165213184] AI analysis completed successfully
2025-09-07 23:03:48,956 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6165213184] Analysis result - Candidate: Isabella Martinez, Score: 35
2025-09-07 23:03:48,956 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6165213184] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230344_6165213184_resume_101.pdf
2025-09-07 23:03:48,956 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6165213184] File processing completed successfully for: resume_101.pdf
2025-09-07 23:03:48,956 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6165213184] Saving successful result to cache
2025-09-07 23:03:48,957 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 30 cached responses
2025-09-07 23:03:48,964 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 31
2025-09-07 23:03:48,964 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Isabella Martinez - 35%
2025-09-07 23:03:48,964 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6165213184] Returning result: Isabella Martinez - 35%
2025-09-07 23:03:48,965 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6165213184] Starting processing file: resume_61.pdf
2025-09-07 23:03:48,965 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6165213184] File details - Name: resume_61.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:48,965 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6165213184] Validating file type...
2025-09-07 23:03:48,965 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6165213184] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230348_6165213184_resume_61.pdf
2025-09-07 23:03:48,966 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6165213184] File saved successfully
2025-09-07 23:03:48,966 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6165213184] Validating PDF structure...
2025-09-07 23:03:48,967 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6165213184] PDF validation passed
2025-09-07 23:03:48,967 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6165213184] Extracting text from PDF...
2025-09-07 23:03:48,969 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6165213184] Text extracted successfully - 380 characters
2025-09-07 23:03:48,969 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6165213184] Starting AI analysis with Qwen...
2025-09-07 23:03:48,970 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6165213184] Job description length: 50 chars
2025-09-07 23:03:48,970 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6165213184] Resume text length: 380 chars
2025-09-07 23:03:48,970 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:48,970 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 380 chars
2025-09-07 23:03:48,998 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-0dd3d81f-8bcf-4bba-9a93-57b5b4bc2297', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nEmily Davis\n Sales Manager - Sales\nEducation\nBachelor\'s degree from Harvard University\nExperience\nWorked as Sales Manager at Amazon (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:48,998 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:48,998 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:48,999 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a0edf0>
2025-09-07 23:03:48,999 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:48,999 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:48,999 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:48,999 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:48,999 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:48,999 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:48,999 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1123307a0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:49,320 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'bde5fad1-17e8-45d7-9826-1788c297f6c4'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3462'), (b'req-arrive-time', b'1757257425813'), (b'resp-start-time', b'1757257429275'), (b'x-envoy-upstream-service-time', b'3461'), (b'set-cookie', b'acw_tc=bde5fad1-17e8-45d7-9826-1788c297f6c4391af57587af811145c66bd912d22fdf;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:48 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:49,321 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:49,321 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:49,321 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:49,321 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:49,322 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:49,322 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'bde5fad1-17e8-45d7-9826-1788c297f6c4', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3462', 'req-arrive-time': '1757257425813', 'resp-start-time': '1757257429275', 'x-envoy-upstream-service-time': '3461', 'set-cookie': 'acw_tc=bde5fad1-17e8-45d7-9826-1788c297f6c4391af57587af811145c66bd912d22fdf;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:48 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:49,322 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: bde5fad1-17e8-45d7-9826-1788c297f6c4
2025-09-07 23:03:49,323 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:49,323 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: James Anderson, Score: 35
2025-09-07 23:03:49,323 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6182039552] AI analysis completed successfully
2025-09-07 23:03:49,323 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6182039552] Analysis result - Candidate: James Anderson, Score: 35
2025-09-07 23:03:49,323 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6182039552] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230344_6182039552_resume_91.pdf
2025-09-07 23:03:49,323 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6182039552] File processing completed successfully for: resume_91.pdf
2025-09-07 23:03:49,323 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6182039552] Saving successful result to cache
2025-09-07 23:03:49,324 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 31 cached responses
2025-09-07 23:03:49,333 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 32
2025-09-07 23:03:49,334 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: James Anderson - 35%
2025-09-07 23:03:49,335 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6182039552] Returning result: James Anderson - 35%
2025-09-07 23:03:49,336 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6182039552] Starting processing file: resume_51.pdf
2025-09-07 23:03:49,337 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6182039552] File details - Name: resume_51.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:49,337 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6182039552] Validating file type...
2025-09-07 23:03:49,337 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6182039552] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230349_6182039552_resume_51.pdf
2025-09-07 23:03:49,338 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6182039552] File saved successfully
2025-09-07 23:03:49,338 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6182039552] Validating PDF structure...
2025-09-07 23:03:49,339 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6182039552] PDF validation passed
2025-09-07 23:03:49,339 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6182039552] Extracting text from PDF...
2025-09-07 23:03:49,344 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6182039552] Text extracted successfully - 429 characters
2025-09-07 23:03:49,345 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6182039552] Starting AI analysis with Qwen...
2025-09-07 23:03:49,345 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6182039552] Job description length: 50 chars
2025-09-07 23:03:49,345 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6182039552] Resume text length: 429 chars
2025-09-07 23:03:49,346 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:49,346 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 429 chars
2025-09-07 23:03:49,369 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-77d26054-f19e-4baf-9b22-ad8c874724fa', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nMichael Brown\n Digital Marketing Specialist - Marketing\nEducation\nBachelor\'s degree from National University of Singapore\nExperience\nWorked as Digital Marketing Specialist at Tesla (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:49,369 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:49,370 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:49,370 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a40b40>
2025-09-07 23:03:49,370 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:49,370 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:49,370 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:49,370 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:49,370 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:49,370 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:49,370 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112330dd0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:49,491 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a429e0>
2025-09-07 23:03:49,492 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:49,492 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:49,492 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:49,492 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:49,492 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:49,595 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ee87a10a-23a4-4991-9422-a42825a75388'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3762'), (b'req-arrive-time', b'1757257425813'), (b'resp-start-time', b'1757257429576'), (b'x-envoy-upstream-service-time', b'3655'), (b'set-cookie', b'acw_tc=ee87a10a-23a4-4991-9422-a42825a753883af24a8c89b4139c2d4eef1fce814c1b;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:49 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:49,596 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:49,596 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:49,596 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:49,596 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:49,596 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:49,597 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ee87a10a-23a4-4991-9422-a42825a75388', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3762', 'req-arrive-time': '1757257425813', 'resp-start-time': '1757257429576', 'x-envoy-upstream-service-time': '3655', 'set-cookie': 'acw_tc=ee87a10a-23a4-4991-9422-a42825a753883af24a8c89b4139c2d4eef1fce814c1b;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:49 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:49,597 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: ee87a10a-23a4-4991-9422-a42825a75388
2025-09-07 23:03:49,597 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:49,597 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Olivia Taylor, Score: 35
2025-09-07 23:03:49,597 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6215692288] AI analysis completed successfully
2025-09-07 23:03:49,597 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6215692288] Analysis result - Candidate: Olivia Taylor, Score: 35
2025-09-07 23:03:49,597 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6215692288] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230345_6215692288_resume_81.pdf
2025-09-07 23:03:49,598 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6215692288] File processing completed successfully for: resume_81.pdf
2025-09-07 23:03:49,598 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6215692288] Saving successful result to cache
2025-09-07 23:03:49,598 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 32 cached responses
2025-09-07 23:03:49,600 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 33
2025-09-07 23:03:49,600 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Olivia Taylor - 35%
2025-09-07 23:03:49,600 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6215692288] Returning result: Olivia Taylor - 35%
2025-09-07 23:03:49,600 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6215692288] Starting processing file: resume_41.pdf
2025-09-07 23:03:49,600 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6215692288] File details - Name: resume_41.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:49,600 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6215692288] Validating file type...
2025-09-07 23:03:49,600 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6215692288] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230349_6215692288_resume_41.pdf
2025-09-07 23:03:49,600 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6215692288] File saved successfully
2025-09-07 23:03:49,600 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6215692288] Validating PDF structure...
2025-09-07 23:03:49,601 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6215692288] PDF validation passed
2025-09-07 23:03:49,602 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6215692288] Extracting text from PDF...
2025-09-07 23:03:49,605 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6215692288] Text extracted successfully - 399 characters
2025-09-07 23:03:49,606 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6215692288] Starting AI analysis with Qwen...
2025-09-07 23:03:49,606 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6215692288] Job description length: 50 chars
2025-09-07 23:03:49,606 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6215692288] Resume text length: 399 chars
2025-09-07 23:03:49,606 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:49,606 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 399 chars
2025-09-07 23:03:49,627 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-0fed6bc3-86d6-4f9e-a5ae-18f7ae642df8', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nSophia Lee\n High School Teacher - Education\nEducation\nBachelor\'s degree from University of Toronto\nExperience\nWorked as High School Teacher at Siemens (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:49,628 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:49,628 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:49,628 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a43890>
2025-09-07 23:03:49,628 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:49,628 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:49,628 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:49,629 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:49,629 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:49,629 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:49,629 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112330200> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:49,761 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'b1cdb296-3e01-4471-a856-07b24009dba0'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3144'), (b'req-arrive-time', b'1757257426579'), (b'resp-start-time', b'1757257429723'), (b'x-envoy-upstream-service-time', b'3143'), (b'set-cookie', b'acw_tc=b1cdb296-3e01-4471-a856-07b24009dba0aac470b09c8b692b62de41b1e7425601;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:49 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:49,761 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:49,761 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:49,762 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:49,762 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:49,762 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:49,762 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'b1cdb296-3e01-4471-a856-07b24009dba0', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3144', 'req-arrive-time': '1757257426579', 'resp-start-time': '1757257429723', 'x-envoy-upstream-service-time': '3143', 'set-cookie': 'acw_tc=b1cdb296-3e01-4471-a856-07b24009dba0aac470b09c8b692b62de41b1e7425601;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:49 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:49,762 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: b1cdb296-3e01-4471-a856-07b24009dba0
2025-09-07 23:03:49,763 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:49,763 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Daniel Wilson, Score: 35
2025-09-07 23:03:49,763 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6198865920] AI analysis completed successfully
2025-09-07 23:03:49,763 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6198865920] Analysis result - Candidate: Daniel Wilson, Score: 35
2025-09-07 23:03:49,763 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6198865920] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230345_6198865920_resume_71.pdf
2025-09-07 23:03:49,763 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6198865920] File processing completed successfully for: resume_71.pdf
2025-09-07 23:03:49,763 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6198865920] Saving successful result to cache
2025-09-07 23:03:49,764 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 33 cached responses
2025-09-07 23:03:49,765 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 34
2025-09-07 23:03:49,766 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Daniel Wilson - 35%
2025-09-07 23:03:49,766 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6198865920] Returning result: Daniel Wilson - 35%
2025-09-07 23:03:49,766 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6198865920] Starting processing file: resume_31.pdf
2025-09-07 23:03:49,766 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6198865920] File details - Name: resume_31.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:49,766 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6198865920] Validating file type...
2025-09-07 23:03:49,766 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6198865920] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230349_6198865920_resume_31.pdf
2025-09-07 23:03:49,766 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6198865920] File saved successfully
2025-09-07 23:03:49,766 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6198865920] Validating PDF structure...
2025-09-07 23:03:49,767 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6198865920] PDF validation passed
2025-09-07 23:03:49,767 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6198865920] Extracting text from PDF...
2025-09-07 23:03:49,782 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6198865920] Text extracted successfully - 400 characters
2025-09-07 23:03:49,782 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6198865920] Starting AI analysis with Qwen...
2025-09-07 23:03:49,782 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6198865920] Job description length: 50 chars
2025-09-07 23:03:49,782 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6198865920] Resume text length: 400 chars
2025-09-07 23:03:49,782 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:49,782 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 400 chars
2025-09-07 23:03:49,807 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-68bae538-b641-419a-a961-8c35f7f75fb6', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nDavid Smith\n Medical Technologist - Healthcare\nEducation\nBachelor\'s degree from University of Toronto\nExperience\nWorked as Medical Technologist at HSBC (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:49,807 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:49,808 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:49,808 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117932120>
2025-09-07 23:03:49,808 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:49,808 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:49,808 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:49,808 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:49,808 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:49,808 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:49,808 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107dfd520> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:49,866 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117931a40>
2025-09-07 23:03:49,866 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:49,866 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:49,866 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:49,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:49,867 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:50,114 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a0cd70>
2025-09-07 23:03:50,115 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:50,115 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:50,115 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:50,115 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:50,115 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:50,193 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ff73ec3b-04d8-4728-bba0-578882dc2ba4'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4048'), (b'req-arrive-time', b'1757257426119'), (b'resp-start-time', b'1757257430167'), (b'x-envoy-upstream-service-time', b'4045'), (b'set-cookie', b'acw_tc=ff73ec3b-04d8-4728-bba0-578882dc2ba40534a763b31bcd2b9e4238e52002bec0;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:50 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:50,194 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:50,194 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:50,194 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:50,194 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:50,194 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:50,195 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ff73ec3b-04d8-4728-bba0-578882dc2ba4', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4048', 'req-arrive-time': '1757257426119', 'resp-start-time': '1757257430167', 'x-envoy-upstream-service-time': '4045', 'set-cookie': 'acw_tc=ff73ec3b-04d8-4728-bba0-578882dc2ba40534a763b31bcd2b9e4238e52002bec0;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:50 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:50,195 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: ff73ec3b-04d8-4728-bba0-578882dc2ba4
2025-09-07 23:03:50,195 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:50,195 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: John Lee, Score: 75
2025-09-07 23:03:50,195 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6148386816] AI analysis completed successfully
2025-09-07 23:03:50,195 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6148386816] Analysis result - Candidate: John Lee, Score: 75
2025-09-07 23:03:50,195 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6148386816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230344_6148386816_resume_1.pdf
2025-09-07 23:03:50,196 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6148386816] File processing completed successfully for: resume_1.pdf
2025-09-07 23:03:50,196 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6148386816] Saving successful result to cache
2025-09-07 23:03:50,196 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 34 cached responses
2025-09-07 23:03:50,198 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 35
2025-09-07 23:03:50,198 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: John Lee - 75%
2025-09-07 23:03:50,198 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6148386816] Returning result: John Lee - 75%
2025-09-07 23:03:50,198 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6148386816] Starting processing file: resume_21.pdf
2025-09-07 23:03:50,198 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 11/21 completed: resume_1.pdf - success
2025-09-07 23:03:50,198 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6148386816] File details - Name: resume_21.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:50,198 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 12/21 completed: resume_101.pdf - success
2025-09-07 23:03:50,199 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6148386816] Validating file type...
2025-09-07 23:03:50,199 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 13/21 completed: resume_91.pdf - success
2025-09-07 23:03:50,199 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6148386816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230350_6148386816_resume_21.pdf
2025-09-07 23:03:50,199 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 14/21 completed: resume_81.pdf - success
2025-09-07 23:03:50,199 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 15/21 completed: resume_71.pdf - success
2025-09-07 23:03:50,199 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6148386816] File saved successfully
2025-09-07 23:03:50,200 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6148386816] Validating PDF structure...
2025-09-07 23:03:50,200 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6148386816] PDF validation passed
2025-09-07 23:03:50,200 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6148386816] Extracting text from PDF...
2025-09-07 23:03:50,203 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6148386816] Text extracted successfully - 397 characters
2025-09-07 23:03:50,203 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6148386816] Starting AI analysis with Qwen...
2025-09-07 23:03:50,203 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6148386816] Job description length: 50 chars
2025-09-07 23:03:50,203 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6148386816] Resume text length: 397 chars
2025-09-07 23:03:50,203 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:50,203 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 397 chars
2025-09-07 23:03:50,225 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-c96c29e9-f9ec-41d4-850a-a606257bb089', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nMaria Gonzalez\n Financial Advisor - Finance\nEducation\nBachelor\'s degree from Imperial College London\nExperience\nWorked as Financial Advisor at Tesla (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:50,226 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:50,226 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:50,227 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a0cbe0>
2025-09-07 23:03:50,227 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:50,227 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:50,227 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:50,227 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:50,227 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:50,227 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:50,227 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1123330b0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:50,308 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a0f2f0>
2025-09-07 23:03:50,308 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:50,309 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:50,309 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:50,309 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:50,309 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:51,141 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179325d0>
2025-09-07 23:03:51,141 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:51,141 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:51,141 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:51,141 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:51,141 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:52,693 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'1228b100-f134-4e98-90b6-0a1f3b03a2c5'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'2975'), (b'req-arrive-time', b'1757257429682'), (b'resp-start-time', b'1757257432658'), (b'x-envoy-upstream-service-time', b'2975'), (b'set-cookie', b'acw_tc=1228b100-f134-4e98-90b6-0a1f3b03a2c5136d78020eb9be20fc43945dc0e23cd8;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:52 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:52,694 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:52,694 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:52,694 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:52,694 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:52,694 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:52,695 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '1228b100-f134-4e98-90b6-0a1f3b03a2c5', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '2975', 'req-arrive-time': '1757257429682', 'resp-start-time': '1757257432658', 'x-envoy-upstream-service-time': '2975', 'set-cookie': 'acw_tc=1228b100-f134-4e98-90b6-0a1f3b03a2c5136d78020eb9be20fc43945dc0e23cd8;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:52 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:52,695 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 1228b100-f134-4e98-90b6-0a1f3b03a2c5
2025-09-07 23:03:52,695 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:52,695 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Emily Davis, Score: 30
2025-09-07 23:03:52,695 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6165213184] AI analysis completed successfully
2025-09-07 23:03:52,695 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6165213184] Analysis result - Candidate: Emily Davis, Score: 30
2025-09-07 23:03:52,695 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6165213184] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230348_6165213184_resume_61.pdf
2025-09-07 23:03:52,696 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6165213184] File processing completed successfully for: resume_61.pdf
2025-09-07 23:03:52,696 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6165213184] Saving successful result to cache
2025-09-07 23:03:52,696 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 35 cached responses
2025-09-07 23:03:52,697 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 36
2025-09-07 23:03:52,697 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Emily Davis - 30%
2025-09-07 23:03:52,698 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6165213184] Returning result: Emily Davis - 30%
2025-09-07 23:03:52,698 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6165213184] Starting processing file: resume_11.pdf
2025-09-07 23:03:52,698 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 16/21 completed: resume_61.pdf - success
2025-09-07 23:03:52,698 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6165213184] File details - Name: resume_11.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:03:52,698 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6165213184] Validating file type...
2025-09-07 23:03:52,698 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6165213184] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230352_6165213184_resume_11.pdf
2025-09-07 23:03:52,699 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6165213184] File saved successfully
2025-09-07 23:03:52,699 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6165213184] Validating PDF structure...
2025-09-07 23:03:52,700 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6165213184] PDF validation passed
2025-09-07 23:03:52,700 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6165213184] Extracting text from PDF...
2025-09-07 23:03:52,703 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6165213184] Text extracted successfully - 418 characters
2025-09-07 23:03:52,704 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6165213184] Starting AI analysis with Qwen...
2025-09-07 23:03:52,704 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6165213184] Job description length: 50 chars
2025-09-07 23:03:52,704 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6165213184] Resume text length: 418 chars
2025-09-07 23:03:52,704 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:03:52,704 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 50 chars, Resume: 418 chars
2025-09-07 23:03:52,732 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-973c093d-800b-4d43-b92e-29ba66bd0b82', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer for a financial software company\n\nRESUME CONTENT:\n--- Page 1 ---\nAlex Johnson\n Backend Engineer - Software Engineering\nEducation\nBachelor\'s degree from National University of Singapore\nExperience\nWorked as Backend Engineer at Marriott (2019 - 2024)\nKey achievements include delivering projects on time, collaborating with cross-functional teams,\nand achieving measurable results.\nSkills\nIndustry-relevant skills, strong communication, problem-solving, and leadership.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:03:52,732 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:03:52,732 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:03:52,733 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a41450>
2025-09-07 23:03:52,733 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:52,733 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:52,733 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:03:52,733 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:52,733 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:03:52,733 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:03:52,733 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112330cb0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:03:53,512 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'cab684b4-4b2d-40cf-9288-733c0481dd14'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3189'), (b'req-arrive-time', b'1757257430294'), (b'resp-start-time', b'1757257433483'), (b'x-envoy-upstream-service-time', b'3188'), (b'set-cookie', b'acw_tc=cab684b4-4b2d-40cf-9288-733c0481dd14349a80c1b26b046969541d3cf6aef432;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:53 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:53,512 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:53,512 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:53,513 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:53,513 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:53,513 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:53,513 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'cab684b4-4b2d-40cf-9288-733c0481dd14', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3189', 'req-arrive-time': '1757257430294', 'resp-start-time': '1757257433483', 'x-envoy-upstream-service-time': '3188', 'set-cookie': 'acw_tc=cab684b4-4b2d-40cf-9288-733c0481dd14349a80c1b26b046969541d3cf6aef432;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:53 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:53,514 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: cab684b4-4b2d-40cf-9288-733c0481dd14
2025-09-07 23:03:53,515 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:53,515 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Sophia Lee, Score: 25
2025-09-07 23:03:53,515 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6215692288] AI analysis completed successfully
2025-09-07 23:03:53,515 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6215692288] Analysis result - Candidate: Sophia Lee, Score: 25
2025-09-07 23:03:53,515 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6215692288] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230349_6215692288_resume_41.pdf
2025-09-07 23:03:53,516 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6215692288] File processing completed successfully for: resume_41.pdf
2025-09-07 23:03:53,516 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6215692288] Saving successful result to cache
2025-09-07 23:03:53,517 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 36 cached responses
2025-09-07 23:03:53,519 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 37
2025-09-07 23:03:53,520 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Sophia Lee - 25%
2025-09-07 23:03:53,520 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6215692288] Returning result: Sophia Lee - 25%
2025-09-07 23:03:53,718 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'f4f9e711-e7eb-4c62-bbbe-a9b9468dd962'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3528'), (b'req-arrive-time', b'1757257430057'), (b'resp-start-time', b'1757257433586'), (b'x-envoy-upstream-service-time', b'3527'), (b'set-cookie', b'acw_tc=f4f9e711-e7eb-4c62-bbbe-a9b9468dd962f948583bcd020d193f4d5bdacba5dce3;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:53 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:53,719 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:53,719 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:53,719 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:53,719 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:53,719 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:53,719 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'f4f9e711-e7eb-4c62-bbbe-a9b9468dd962', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3528', 'req-arrive-time': '1757257430057', 'resp-start-time': '1757257433586', 'x-envoy-upstream-service-time': '3527', 'set-cookie': 'acw_tc=f4f9e711-e7eb-4c62-bbbe-a9b9468dd962f948583bcd020d193f4d5bdacba5dce3;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:53 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:53,719 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: f4f9e711-e7eb-4c62-bbbe-a9b9468dd962
2025-09-07 23:03:53,720 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:53,720 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Michael Brown, Score: 35
2025-09-07 23:03:53,720 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6182039552] AI analysis completed successfully
2025-09-07 23:03:53,720 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6182039552] Analysis result - Candidate: Michael Brown, Score: 35
2025-09-07 23:03:53,720 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6182039552] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230349_6182039552_resume_51.pdf
2025-09-07 23:03:53,720 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6182039552] File processing completed successfully for: resume_51.pdf
2025-09-07 23:03:53,720 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6182039552] Saving successful result to cache
2025-09-07 23:03:53,721 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 37 cached responses
2025-09-07 23:03:53,723 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 38
2025-09-07 23:03:53,723 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Michael Brown - 35%
2025-09-07 23:03:53,723 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6182039552] Returning result: Michael Brown - 35%
2025-09-07 23:03:53,724 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 17/21 completed: resume_51.pdf - success
2025-09-07 23:03:53,724 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 18/21 completed: resume_41.pdf - success
2025-09-07 23:03:53,767 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'0209c7a6-3d02-43fb-8e84-90f52bf685b9'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3248'), (b'req-arrive-time', b'1757257430478'), (b'resp-start-time', b'1757257433727'), (b'x-envoy-upstream-service-time', b'3247'), (b'set-cookie', b'acw_tc=0209c7a6-3d02-43fb-8e84-90f52bf685b945af392497da1ecd84c625bc1ab4e9b7;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:53 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:53,768 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:53,768 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:53,768 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:53,768 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:53,768 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:53,768 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '0209c7a6-3d02-43fb-8e84-90f52bf685b9', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3248', 'req-arrive-time': '1757257430478', 'resp-start-time': '1757257433727', 'x-envoy-upstream-service-time': '3247', 'set-cookie': 'acw_tc=0209c7a6-3d02-43fb-8e84-90f52bf685b945af392497da1ecd84c625bc1ab4e9b7;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:53 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:53,769 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 0209c7a6-3d02-43fb-8e84-90f52bf685b9
2025-09-07 23:03:53,769 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:53,769 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: David Smith, Score: 35
2025-09-07 23:03:53,769 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6198865920] AI analysis completed successfully
2025-09-07 23:03:53,769 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6198865920] Analysis result - Candidate: David Smith, Score: 35
2025-09-07 23:03:53,769 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6198865920] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230349_6198865920_resume_31.pdf
2025-09-07 23:03:53,769 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6198865920] File processing completed successfully for: resume_31.pdf
2025-09-07 23:03:53,770 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6198865920] Saving successful result to cache
2025-09-07 23:03:53,770 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 38 cached responses
2025-09-07 23:03:53,772 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 39
2025-09-07 23:03:53,772 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: David Smith - 35%
2025-09-07 23:03:53,772 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6198865920] Returning result: David Smith - 35%
2025-09-07 23:03:53,772 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 19/21 completed: resume_31.pdf - success
2025-09-07 23:03:54,284 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107c03250>
2025-09-07 23:03:54,285 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:03:54,285 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:03:54,285 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:03:54,285 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:03:54,285 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:03:54,879 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'5e2a0135-2456-4c7d-be40-9bf660b5cf74'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3537'), (b'req-arrive-time', b'1757257431301'), (b'resp-start-time', b'1757257434839'), (b'x-envoy-upstream-service-time', b'3536'), (b'set-cookie', b'acw_tc=5e2a0135-2456-4c7d-be40-9bf660b5cf74d2bf3dcce52f6087c8c957c867118796;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:54 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:54,880 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:54,880 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:54,881 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:54,881 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:54,881 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:54,881 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '5e2a0135-2456-4c7d-be40-9bf660b5cf74', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3537', 'req-arrive-time': '1757257431301', 'resp-start-time': '1757257434839', 'x-envoy-upstream-service-time': '3536', 'set-cookie': 'acw_tc=5e2a0135-2456-4c7d-be40-9bf660b5cf74d2bf3dcce52f6087c8c957c867118796;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:54 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:54,881 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 5e2a0135-2456-4c7d-be40-9bf660b5cf74
2025-09-07 23:03:54,882 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:54,882 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Maria Gonzalez, Score: 35
2025-09-07 23:03:54,882 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6148386816] AI analysis completed successfully
2025-09-07 23:03:54,882 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6148386816] Analysis result - Candidate: Maria Gonzalez, Score: 35
2025-09-07 23:03:54,882 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6148386816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230350_6148386816_resume_21.pdf
2025-09-07 23:03:54,883 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6148386816] File processing completed successfully for: resume_21.pdf
2025-09-07 23:03:54,883 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6148386816] Saving successful result to cache
2025-09-07 23:03:54,883 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 39 cached responses
2025-09-07 23:03:54,885 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 40
2025-09-07 23:03:54,885 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Maria Gonzalez - 35%
2025-09-07 23:03:54,885 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6148386816] Returning result: Maria Gonzalez - 35%
2025-09-07 23:03:54,885 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 20/21 completed: resume_21.pdf - success
2025-09-07 23:03:58,897 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'9689242b-05eb-4163-90c5-58e06b1e05d3'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4411'), (b'req-arrive-time', b'1757257434464'), (b'resp-start-time', b'1757257438875'), (b'x-envoy-upstream-service-time', b'4410'), (b'set-cookie', b'acw_tc=9689242b-05eb-4163-90c5-58e06b1e05d3516706bfa20d08aa9da5bed6f1164a6f;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:03:58 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:03:58,897 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:03:58,898 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:03:58,898 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:03:58,898 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:03:58,898 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:03:58,898 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '9689242b-05eb-4163-90c5-58e06b1e05d3', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4411', 'req-arrive-time': '1757257434464', 'resp-start-time': '1757257438875', 'x-envoy-upstream-service-time': '4410', 'set-cookie': 'acw_tc=9689242b-05eb-4163-90c5-58e06b1e05d3516706bfa20d08aa9da5bed6f1164a6f;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:03:58 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:03:58,899 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 9689242b-05eb-4163-90c5-58e06b1e05d3
2025-09-07 23:03:58,899 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:03:58,899 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alex Johnson, Score: 65
2025-09-07 23:03:58,899 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6165213184] AI analysis completed successfully
2025-09-07 23:03:58,899 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6165213184] Analysis result - Candidate: Alex Johnson, Score: 65
2025-09-07 23:03:58,899 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6165213184] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230352_6165213184_resume_11.pdf
2025-09-07 23:03:58,900 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6165213184] File processing completed successfully for: resume_11.pdf
2025-09-07 23:03:58,900 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6165213184] Saving successful result to cache
2025-09-07 23:03:58,901 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 40 cached responses
2025-09-07 23:03:58,904 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 41
2025-09-07 23:03:58,904 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alex Johnson - 65%
2025-09-07 23:03:58,904 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6165213184] Returning result: Alex Johnson - 65%
2025-09-07 23:03:58,904 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 21/21 completed: resume_11.pdf - success
2025-09-07 23:03:58,905 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 21 results collected
2025-09-07 23:03:58,905 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 21, Failed: 0
2025-09-07 23:03:58,905 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:03:58,905 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Baisheng Song with 92% match
2025-09-07 23:03:58,906 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:03:58,906 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 40466 characters
2025-09-07 23:03:58,907 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 43861 bytes
2025-09-07 23:03:58,907 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:03:58] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:04:50,178 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:04:50,179 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:04:50,179 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:04:50,180 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:04:50] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:04:50,198 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:04:50,199 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757257341.0743744-24961-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:02:21 GMT'}
2025-09-07 23:04:50,200 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:04:50,201 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257341.0744169-56948-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:02:21 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:04:50,202 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 56948 bytes
2025-09-07 23:04:50,202 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 24961 bytes
2025-09-07 23:04:50,203 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:04:50] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 23:04:50,203 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:04:50] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:04:50,237 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:04:50,237 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:04:50,237 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:04:50,240 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:04:50,240 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:04:50] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:04:55,356 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:04:55,357 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2747', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryateLYcruswFPbfL9', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:04:55,357 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryateLYcruswFPbfL9
2025-09-07 23:04:55,357 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2747
2025-09-07 23:04:55,358 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf']
2025-09-07 23:04:55,358 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:04:55,358 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:04:55,358 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-07 23:04:55,358 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf']
2025-09-07 23:04:55,358 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 23:04:55,358 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:04:55,359 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6148386816] Starting processing file: resume_10.pdf
2025-09-07 23:04:55,359 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 23:04:55,359 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6148386816] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:04:55,359 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6148386816] Validating file type...
2025-09-07 23:04:55,359 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6148386816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230455_6148386816_resume_10.pdf
2025-09-07 23:04:55,360 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6148386816] File saved successfully
2025-09-07 23:04:55,360 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6148386816] Validating PDF structure...
2025-09-07 23:04:55,362 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6148386816] PDF validation passed
2025-09-07 23:04:55,362 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6148386816] Extracting text from PDF...
2025-09-07 23:04:55,372 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6148386816] Text extracted successfully - 1093 characters
2025-09-07 23:04:55,373 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6148386816] Starting AI analysis with Qwen...
2025-09-07 23:04:55,373 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6148386816] Job description length: 17 chars
2025-09-07 23:04:55,373 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6148386816] Resume text length: 1093 chars
2025-09-07 23:04:55,373 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:04:55,373 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1093 chars
2025-09-07 23:04:55,397 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-075c7a1d-6125-40e1-b171-136f09c1a336', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Brown\n Email: alice.brown@gmail.com | Phone: +1-396-365-3977\nAddress: 185 Main Street, New York, NY\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Apple (2018 - 2019)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSoftware Engineer, Google (2020 - 2021)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nData Engineer, Airbnb (2022 - 2023)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Imperial College London (2013 - 2015)\nSkills\nKubernetes, REST APIs, GraphQL, Microservices, JavaScript, Java, AWS, Node.js\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:04:55,398 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:04:55,398 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:04:55,398 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107a31770>
2025-09-07 23:04:55,398 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:04:55,399 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:04:55,399 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:04:55,399 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:04:55,399 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:04:55,399 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:04:55,399 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112330a70> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:04:55,944 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a0d900>
2025-09-07 23:04:55,945 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:04:55,945 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:04:55,945 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:04:55,945 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:04:55,945 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:05:00,327 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'd45d6baf-0de0-42c2-87c0-6c5311957e91'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4162'), (b'req-arrive-time', b'1757257496125'), (b'resp-start-time', b'1757257500288'), (b'x-envoy-upstream-service-time', b'4158'), (b'set-cookie', b'acw_tc=d45d6baf-0de0-42c2-87c0-6c5311957e91450b71c8e385037e3542f1d7e74b3522;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:05:00 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:05:00,328 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:05:00,328 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:05:00,329 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:05:00,329 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:05:00,329 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:05:00,329 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'd45d6baf-0de0-42c2-87c0-6c5311957e91', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4162', 'req-arrive-time': '1757257496125', 'resp-start-time': '1757257500288', 'x-envoy-upstream-service-time': '4158', 'set-cookie': 'acw_tc=d45d6baf-0de0-42c2-87c0-6c5311957e91450b71c8e385037e3542f1d7e74b3522;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:05:00 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:05:00,329 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: d45d6baf-0de0-42c2-87c0-6c5311957e91
2025-09-07 23:05:00,330 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:05:00,330 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Brown, Score: 75
2025-09-07 23:05:00,330 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6148386816] AI analysis completed successfully
2025-09-07 23:05:00,330 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6148386816] Analysis result - Candidate: Alice Brown, Score: 75
2025-09-07 23:05:00,330 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6148386816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230455_6148386816_resume_10.pdf
2025-09-07 23:05:00,330 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6148386816] File processing completed successfully for: resume_10.pdf
2025-09-07 23:05:00,331 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6148386816] Saving successful result to cache
2025-09-07 23:05:00,331 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 41 cached responses
2025-09-07 23:05:00,333 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 42
2025-09-07 23:05:00,333 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Brown - 75%
2025-09-07 23:05:00,333 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6148386816] Returning result: Alice Brown - 75%
2025-09-07 23:05:00,334 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: resume_10.pdf - success
2025-09-07 23:05:00,337 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 23:05:00,337 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 23:05:00,338 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:05:00,338 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Alice Brown with 75% match
2025-09-07 23:05:00,338 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 23:05:00,338 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:05:00,338 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 4060 characters
2025-09-07 23:05:00,338 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4299 bytes
2025-09-07 23:05:00,339 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:05:00] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:05:02,995 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:05:02,995 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2736', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryCvpFZODSkm0Wn8Z7', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:05:02,995 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryCvpFZODSkm0Wn8Z7
2025-09-07 23:05:02,995 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2736
2025-09-07 23:05:02,996 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_8.pdf']
2025-09-07 23:05:02,996 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:05:02,996 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:05:02,996 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-07 23:05:02,996 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_8.pdf']
2025-09-07 23:05:02,996 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 23:05:02,997 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:05:02,997 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6148386816] Starting processing file: resume_8.pdf
2025-09-07 23:05:02,997 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 23:05:02,997 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6148386816] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:05:02,997 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6148386816] Validating file type...
2025-09-07 23:05:02,997 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6148386816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230502_6148386816_resume_8.pdf
2025-09-07 23:05:02,997 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6148386816] File saved successfully
2025-09-07 23:05:02,998 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6148386816] Validating PDF structure...
2025-09-07 23:05:02,998 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6148386816] PDF validation passed
2025-09-07 23:05:02,998 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6148386816] Extracting text from PDF...
2025-09-07 23:05:03,006 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6148386816] Text extracted successfully - 1125 characters
2025-09-07 23:05:03,006 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6148386816] Starting AI analysis with Qwen...
2025-09-07 23:05:03,006 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6148386816] Job description length: 17 chars
2025-09-07 23:05:03,006 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6148386816] Resume text length: 1125 chars
2025-09-07 23:05:03,007 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:05:03,007 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1125 chars
2025-09-07 23:05:03,037 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6768e588-e366-4456-9cc8-82ae416f460c', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Lee\n Email: alice.lee@gmail.com | Phone: +1-345-265-4958\nAddress: 188 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSenior Software Engineer, Bloomberg (2016 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nSoftware Engineer, Apple (2018 - 2019)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Airbnb (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Stanford University (2011 - 2016)\nSkills\nMachine Learning, GraphQL, AWS, React, Microservices, Kubernetes, SQL, TypeScript\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:05:03,038 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:05:03,038 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:05:03,038 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107a32350>
2025-09-07 23:05:03,038 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:05:03,038 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:05:03,038 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:05:03,038 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:05:03,039 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:05:03,039 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:05:03,039 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112333410> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:05:03,532 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117931e00>
2025-09-07 23:05:03,532 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:05:03,532 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:05:03,533 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:05:03,533 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:05:03,533 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:05:07,706 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'3b29a621-5a2e-48ec-874f-1bd11570b898'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3953'), (b'req-arrive-time', b'1757257503713'), (b'resp-start-time', b'1757257507666'), (b'x-envoy-upstream-service-time', b'3949'), (b'set-cookie', b'acw_tc=3b29a621-5a2e-48ec-874f-1bd11570b89875fd40116035d44907cf397ffd857e83;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:05:07 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:05:07,707 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:05:07,707 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:05:07,707 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:05:07,708 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:05:07,708 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:05:07,708 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '3b29a621-5a2e-48ec-874f-1bd11570b898', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3953', 'req-arrive-time': '1757257503713', 'resp-start-time': '1757257507666', 'x-envoy-upstream-service-time': '3949', 'set-cookie': 'acw_tc=3b29a621-5a2e-48ec-874f-1bd11570b89875fd40116035d44907cf397ffd857e83;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:05:07 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:05:07,708 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 3b29a621-5a2e-48ec-874f-1bd11570b898
2025-09-07 23:05:07,708 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:05:07,709 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Lee, Score: 75
2025-09-07 23:05:07,709 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6148386816] AI analysis completed successfully
2025-09-07 23:05:07,709 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6148386816] Analysis result - Candidate: Alice Lee, Score: 75
2025-09-07 23:05:07,709 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6148386816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230502_6148386816_resume_8.pdf
2025-09-07 23:05:07,709 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6148386816] File processing completed successfully for: resume_8.pdf
2025-09-07 23:05:07,709 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6148386816] Saving successful result to cache
2025-09-07 23:05:07,711 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 42 cached responses
2025-09-07 23:05:07,713 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 43
2025-09-07 23:05:07,713 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Lee - 75%
2025-09-07 23:05:07,713 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6148386816] Returning result: Alice Lee - 75%
2025-09-07 23:05:07,713 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: resume_8.pdf - success
2025-09-07 23:05:07,713 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 23:05:07,713 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 23:05:07,713 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:05:07,713 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Alice Lee with 75% match
2025-09-07 23:05:07,713 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 23:05:07,713 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:05:07,714 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 4176 characters
2025-09-07 23:05:07,714 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4429 bytes
2025-09-07 23:05:07,714 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:05:07] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:05:48,232 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:05:48,233 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:05:48,233 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:05:48,233 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:05:48] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:05:48,252 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:05:48,253 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257341.0744169-56948-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:02:21 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:05:48,254 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:05:48,255 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757257341.0743744-24961-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:02:21 GMT'}
2025-09-07 23:05:48,255 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 56816 bytes
2025-09-07 23:05:48,256 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:05:48] "GET /static/script.js HTTP/1.1" 200 -
2025-09-07 23:05:48,257 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 24961 bytes
2025-09-07 23:05:48,257 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:05:48] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:05:48,266 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:05:48,266 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:05:48,266 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:05:48,267 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:05:48,267 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:05:48] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:05:54,296 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:05:54,296 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2747', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryePZhBnXZJIVm3MHD', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:05:54,296 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryePZhBnXZJIVm3MHD
2025-09-07 23:05:54,296 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2747
2025-09-07 23:05:54,297 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf']
2025-09-07 23:05:54,297 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:05:54,297 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:05:54,297 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-07 23:05:54,297 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf']
2025-09-07 23:05:54,297 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 23:05:54,297 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:05:54,297 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6148386816] Starting processing file: resume_10.pdf
2025-09-07 23:05:54,297 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 23:05:54,297 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6148386816] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:05:54,297 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6148386816] Validating file type...
2025-09-07 23:05:54,297 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6148386816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230554_6148386816_resume_10.pdf
2025-09-07 23:05:54,297 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6148386816] File saved successfully
2025-09-07 23:05:54,297 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6148386816] Validating PDF structure...
2025-09-07 23:05:54,298 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6148386816] PDF validation passed
2025-09-07 23:05:54,298 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6148386816] Extracting text from PDF...
2025-09-07 23:05:54,339 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6148386816] Text extracted successfully - 1093 characters
2025-09-07 23:05:54,339 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6148386816] Starting AI analysis with Qwen...
2025-09-07 23:05:54,339 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6148386816] Job description length: 17 chars
2025-09-07 23:05:54,339 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6148386816] Resume text length: 1093 chars
2025-09-07 23:05:54,339 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:05:54,339 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1093 chars
2025-09-07 23:05:54,351 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4ec1a3b7-7f15-4b5a-a881-fea982fba812', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Brown\n Email: alice.brown@gmail.com | Phone: +1-396-365-3977\nAddress: 185 Main Street, New York, NY\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Apple (2018 - 2019)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSoftware Engineer, Google (2020 - 2021)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nData Engineer, Airbnb (2022 - 2023)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Imperial College London (2013 - 2015)\nSkills\nKubernetes, REST APIs, GraphQL, Microservices, JavaScript, Java, AWS, Node.js\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:05:54,352 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:05:54,352 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:05:54,352 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107c00d20>
2025-09-07 23:05:54,352 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:05:54,352 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:05:54,352 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:05:54,352 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:05:54,352 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:05:54,352 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:05:54,352 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c86f90> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:05:54,879 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107a023f0>
2025-09-07 23:05:54,879 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:05:54,880 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:05:54,880 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:05:54,880 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:05:54,880 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:05:59,519 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'87162f41-9d26-4044-82f2-b5150303d2fa'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4427'), (b'req-arrive-time', b'1757257555051'), (b'resp-start-time', b'1757257559479'), (b'x-envoy-upstream-service-time', b'4425'), (b'set-cookie', b'acw_tc=87162f41-9d26-4044-82f2-b5150303d2fab45a432f3180fe683e63fd3901c444dc;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:05:59 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:05:59,520 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:05:59,520 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:05:59,520 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:05:59,520 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:05:59,520 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:05:59,520 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '87162f41-9d26-4044-82f2-b5150303d2fa', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4427', 'req-arrive-time': '1757257555051', 'resp-start-time': '1757257559479', 'x-envoy-upstream-service-time': '4425', 'set-cookie': 'acw_tc=87162f41-9d26-4044-82f2-b5150303d2fab45a432f3180fe683e63fd3901c444dc;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:05:59 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:05:59,521 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 87162f41-9d26-4044-82f2-b5150303d2fa
2025-09-07 23:05:59,521 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:05:59,521 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Brown, Score: 75
2025-09-07 23:05:59,521 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6148386816] AI analysis completed successfully
2025-09-07 23:05:59,521 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6148386816] Analysis result - Candidate: Alice Brown, Score: 75
2025-09-07 23:05:59,521 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6148386816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230554_6148386816_resume_10.pdf
2025-09-07 23:05:59,522 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6148386816] File processing completed successfully for: resume_10.pdf
2025-09-07 23:05:59,522 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6148386816] Saving successful result to cache
2025-09-07 23:05:59,522 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 43 cached responses
2025-09-07 23:05:59,524 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 44
2025-09-07 23:05:59,524 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Brown - 75%
2025-09-07 23:05:59,524 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6148386816] Returning result: Alice Brown - 75%
2025-09-07 23:05:59,525 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: resume_10.pdf - success
2025-09-07 23:05:59,525 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 23:05:59,525 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 23:05:59,525 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:05:59,525 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Alice Brown with 75% match
2025-09-07 23:05:59,525 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 23:05:59,525 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:05:59,525 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 4252 characters
2025-09-07 23:05:59,526 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4491 bytes
2025-09-07 23:05:59,527 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:05:59] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:06:02,288 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:06:02,288 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2696', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarys7ja68y56Bc2Aqre', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:06:02,289 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarys7ja68y56Bc2Aqre
2025-09-07 23:06:02,289 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2696
2025-09-07 23:06:02,290 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_5.pdf']
2025-09-07 23:06:02,290 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:06:02,290 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:06:02,290 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-07 23:06:02,290 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_5.pdf']
2025-09-07 23:06:02,290 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 23:06:02,290 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:06:02,290 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6148386816] Starting processing file: resume_5.pdf
2025-09-07 23:06:02,290 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 23:06:02,291 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6148386816] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:06:02,291 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6148386816] Validating file type...
2025-09-07 23:06:02,291 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6148386816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230602_6148386816_resume_5.pdf
2025-09-07 23:06:02,292 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6148386816] File saved successfully
2025-09-07 23:06:02,292 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6148386816] Validating PDF structure...
2025-09-07 23:06:02,294 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6148386816] PDF validation passed
2025-09-07 23:06:02,296 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6148386816] Extracting text from PDF...
2025-09-07 23:06:02,306 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6148386816] Text extracted successfully - 922 characters
2025-09-07 23:06:02,307 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6148386816] Starting AI analysis with Qwen...
2025-09-07 23:06:02,307 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6148386816] Job description length: 17 chars
2025-09-07 23:06:02,307 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6148386816] Resume text length: 922 chars
2025-09-07 23:06:02,307 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:06:02,307 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 922 chars
2025-09-07 23:06:02,329 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f217fbb8-7699-4ea3-ad1f-f3b62dfa92b4', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nOlivia Johnson\n Email: olivia.johnson@gmail.com | Phone: +1-745-334-3029\nAddress: 544 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSoftware Engineer, Bloomberg (2017 - 2018)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nFull Stack Developer, Bloomberg (2019 - 2021)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Carnegie Mellon (2012 - 2016)\nSkills\nC++, Machine Learning, REST APIs, Node.js, Docker, Kubernetes, React, Java\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:06:02,330 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:06:02,330 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:06:02,330 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107a32b70>
2025-09-07 23:06:02,330 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:06:02,330 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:06:02,330 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:06:02,330 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:06:02,330 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:06:02,331 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:06:02,331 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107dfccb0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:06:02,815 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179330c0>
2025-09-07 23:06:02,815 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:06:02,815 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:06:02,816 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:06:02,816 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:06:02,816 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:06:07,149 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'67ad48fd-14a2-4cb9-b916-d6e545415eb4'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4038'), (b'req-arrive-time', b'1757257562996'), (b'resp-start-time', b'1757257567034'), (b'x-envoy-upstream-service-time', b'4037'), (b'set-cookie', b'acw_tc=67ad48fd-14a2-4cb9-b916-d6e545415eb46f85f8ec2db21f66bce6fead5799926b;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:06:06 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:06:07,150 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:06:07,150 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:06:07,150 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:06:07,150 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:06:07,150 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:06:07,150 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '67ad48fd-14a2-4cb9-b916-d6e545415eb4', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4038', 'req-arrive-time': '1757257562996', 'resp-start-time': '1757257567034', 'x-envoy-upstream-service-time': '4037', 'set-cookie': 'acw_tc=67ad48fd-14a2-4cb9-b916-d6e545415eb46f85f8ec2db21f66bce6fead5799926b;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:06:06 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:06:07,151 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 67ad48fd-14a2-4cb9-b916-d6e545415eb4
2025-09-07 23:06:07,153 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:06:07,154 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Olivia Johnson, Score: 85
2025-09-07 23:06:07,154 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6148386816] AI analysis completed successfully
2025-09-07 23:06:07,154 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6148386816] Analysis result - Candidate: Olivia Johnson, Score: 85
2025-09-07 23:06:07,154 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6148386816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230602_6148386816_resume_5.pdf
2025-09-07 23:06:07,154 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6148386816] File processing completed successfully for: resume_5.pdf
2025-09-07 23:06:07,154 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6148386816] Saving successful result to cache
2025-09-07 23:06:07,155 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 44 cached responses
2025-09-07 23:06:07,157 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 45
2025-09-07 23:06:07,157 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Olivia Johnson - 85%
2025-09-07 23:06:07,157 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6148386816] Returning result: Olivia Johnson - 85%
2025-09-07 23:06:07,158 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: resume_5.pdf - success
2025-09-07 23:06:07,158 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 23:06:07,158 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 23:06:07,158 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:06:07,158 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Olivia Johnson with 85% match
2025-09-07 23:06:07,158 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 23:06:07,158 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:06:07,158 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 3874 characters
2025-09-07 23:06:07,159 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4115 bytes
2025-09-07 23:06:07,161 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:06:07] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:07:22,025 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:07:22,026 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '50829', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryrPjfoqdB5u04Ljy9', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:07:22,027 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryrPjfoqdB5u04Ljy9
2025-09-07 23:07:22,027 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 50829
2025-09-07 23:07:22,028 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['文字文稿1.pdf']
2025-09-07 23:07:22,028 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:07:22,028 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:07:22,028 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-07 23:07:22,028 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['文字文稿1.pdf']
2025-09-07 23:07:22,028 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 23:07:22,028 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:07:22,029 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6148386816] Starting processing file: 文字文稿1.pdf
2025-09-07 23:07:22,029 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 23:07:22,029 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6148386816] File details - Name: 文字文稿1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:07:22,029 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6148386816] Validating file type...
2025-09-07 23:07:22,029 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6148386816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230722_6148386816_1.pdf
2025-09-07 23:07:22,030 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6148386816] File saved successfully
2025-09-07 23:07:22,030 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6148386816] Validating PDF structure...
2025-09-07 23:07:22,031 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6148386816] PDF validation passed
2025-09-07 23:07:22,031 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6148386816] Extracting text from PDF...
2025-09-07 23:07:22,065 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6148386816] Text extracted successfully - 388 characters
2025-09-07 23:07:22,065 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6148386816] Starting AI analysis with Qwen...
2025-09-07 23:07:22,066 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6148386816] Job description length: 17 chars
2025-09-07 23:07:22,066 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6148386816] Resume text length: 388 chars
2025-09-07 23:07:22,066 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:07:22,066 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 388 chars
2025-09-07 23:07:22,094 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9d1c2ac8-9081-4b0e-aea1-d27dfbd19c8e', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlexanderersonAndersonilsonnen\nProjectManager-Construction\nEducation\nBachelor\'sdegreefromNationalUniversityofSingapore\nExperience\nWorkedasProjectManageratSiemens(2019-2024)\nKeyachievementsincludedeliveringprojectsontime,collaboratingwithcross-functional\nteams,\nandachievingmeasurableresults.\nSkills\nIndustry-relevantskills,strongcommunication,problem-solving,andleadership.\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:07:22,095 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:07:22,095 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:07:22,096 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107c011d0>
2025-09-07 23:07:22,097 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:07:22,097 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:07:22,097 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:07:22,097 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:07:22,097 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:07:22,101 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:07:22,101 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112333d10> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:07:22,550 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107a33ed0>
2025-09-07 23:07:22,550 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:07:22,550 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:07:22,550 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:07:22,551 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:07:22,551 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:07:26,315 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'063bfc58-40c5-4d83-ac83-8d42d3570b2d'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3560'), (b'req-arrive-time', b'1757257642723'), (b'resp-start-time', b'1757257646284'), (b'x-envoy-upstream-service-time', b'3559'), (b'set-cookie', b'acw_tc=063bfc58-40c5-4d83-ac83-8d42d3570b2dfc80a1e8dbf64c09a70b37c38cb6277c;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:07:25 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:07:26,315 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:07:26,316 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:07:26,316 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:07:26,316 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:07:26,316 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:07:26,316 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '063bfc58-40c5-4d83-ac83-8d42d3570b2d', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3560', 'req-arrive-time': '1757257642723', 'resp-start-time': '1757257646284', 'x-envoy-upstream-service-time': '3559', 'set-cookie': 'acw_tc=063bfc58-40c5-4d83-ac83-8d42d3570b2dfc80a1e8dbf64c09a70b37c38cb6277c;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:07:25 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:07:26,316 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 063bfc58-40c5-4d83-ac83-8d42d3570b2d
2025-09-07 23:07:26,317 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:07:26,317 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:07:26,317 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6148386816] AI analysis completed successfully
2025-09-07 23:07:26,317 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6148386816] Analysis result - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:07:26,317 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6148386816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230722_6148386816_1.pdf
2025-09-07 23:07:26,317 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6148386816] File processing completed successfully for: 1.pdf
2025-09-07 23:07:26,317 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6148386816] Saving successful result to cache
2025-09-07 23:07:26,318 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 45 cached responses
2025-09-07 23:07:26,319 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 46
2025-09-07 23:07:26,319 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:07:26,320 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6148386816] Returning result: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:07:26,320 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: 1.pdf - success
2025-09-07 23:07:26,320 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 23:07:26,320 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 23:07:26,320 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:07:26,320 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: AlexanderersonAndersonilsonnen with 35% match
2025-09-07 23:07:26,320 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 23:07:26,320 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:07:26,320 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 3756 characters
2025-09-07 23:07:26,322 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 3997 bytes
2025-09-07 23:07:26,323 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:07:26] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:07:37,505 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:07:37,506 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:07:37,506 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757257341.0743744-24961-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:02:21 GMT'}
2025-09-07 23:07:37,506 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:07:37,507 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:07:37,507 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:07:37] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:07:37,507 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 24961 bytes
2025-09-07 23:07:37,508 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:07:37] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:07:57,623 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:07:57,623 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:07:57,623 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:07:57,623 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:07:57] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:08:09,600 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:08:09,601 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:08:09,601 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:08:09,602 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:08:09] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:08:09,618 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:08:09,619 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:08:09,620 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:08:09,624 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:08:09] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:08:09,622 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:08:09,625 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257341.0743744-24961-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:02:21 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:08:09,627 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 24961 bytes
2025-09-07 23:08:09,629 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:08:09] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:08:09,634 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:08:09,635 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257543.169778-56816-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:05:43 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:08:09,636 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 56816 bytes
2025-09-07 23:08:09,636 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:08:09] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 23:08:09,674 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:08:09,675 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:08:09,675 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:08:09,675 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:08:09,675 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:08:09] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:08:15,901 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:08:15,901 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '7819', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryvE7THGPfRNMHpmEi', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:08:15,901 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryvE7THGPfRNMHpmEi
2025-09-07 23:08:15,901 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 7819
2025-09-07 23:08:15,902 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf']
2025-09-07 23:08:15,902 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:08:15,903 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:08:15,903 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 3, Job desc length: 17, Mock: False
2025-09-07 23:08:15,903 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_10.pdf', 'resume_9.pdf', 'resume_8.pdf']
2025-09-07 23:08:15,903 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 3 workers for 3 files
2025-09-07 23:08:15,903 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:08:15,903 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6198865920] Starting processing file: resume_10.pdf
2025-09-07 23:08:15,903 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6215692288] Starting processing file: resume_9.pdf
2025-09-07 23:08:15,903 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6198865920] File details - Name: resume_10.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:08:15,903 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233092096] Starting processing file: resume_8.pdf
2025-09-07 23:08:15,903 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 3 tasks submitted to thread pool
2025-09-07 23:08:15,903 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6215692288] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:08:15,904 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6198865920] Validating file type...
2025-09-07 23:08:15,904 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233092096] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:08:15,904 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6215692288] Validating file type...
2025-09-07 23:08:15,904 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6198865920] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230815_6198865920_resume_10.pdf
2025-09-07 23:08:15,904 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233092096] Validating file type...
2025-09-07 23:08:15,909 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233092096] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230815_6233092096_resume_8.pdf
2025-09-07 23:08:15,905 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6215692288] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230815_6215692288_resume_9.pdf
2025-09-07 23:08:15,912 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6198865920] File saved successfully
2025-09-07 23:08:15,912 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6198865920] Validating PDF structure...
2025-09-07 23:08:15,915 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6215692288] File saved successfully
2025-09-07 23:08:15,916 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233092096] File saved successfully
2025-09-07 23:08:15,916 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6215692288] Validating PDF structure...
2025-09-07 23:08:15,917 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6198865920] PDF validation passed
2025-09-07 23:08:15,917 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233092096] Validating PDF structure...
2025-09-07 23:08:15,917 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6198865920] Extracting text from PDF...
2025-09-07 23:08:15,919 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6215692288] PDF validation passed
2025-09-07 23:08:15,920 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233092096] PDF validation passed
2025-09-07 23:08:15,923 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6215692288] Extracting text from PDF...
2025-09-07 23:08:15,923 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233092096] Extracting text from PDF...
2025-09-07 23:08:15,923 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6198865920] Text extracted successfully - 1093 characters
2025-09-07 23:08:15,924 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6198865920] Starting AI analysis with Qwen...
2025-09-07 23:08:15,925 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6198865920] Job description length: 17 chars
2025-09-07 23:08:15,925 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6198865920] Resume text length: 1093 chars
2025-09-07 23:08:15,925 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:08:15,925 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1093 chars
2025-09-07 23:08:15,928 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6215692288] Text extracted successfully - 870 characters
2025-09-07 23:08:15,928 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6215692288] Starting AI analysis with Qwen...
2025-09-07 23:08:15,929 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6215692288] Job description length: 17 chars
2025-09-07 23:08:15,932 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6215692288] Resume text length: 870 chars
2025-09-07 23:08:15,938 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:08:15,938 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 870 chars
2025-09-07 23:08:15,939 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233092096] Text extracted successfully - 1125 characters
2025-09-07 23:08:15,940 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6233092096] Starting AI analysis with Qwen...
2025-09-07 23:08:15,940 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6233092096] Job description length: 17 chars
2025-09-07 23:08:15,940 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6233092096] Resume text length: 1125 chars
2025-09-07 23:08:15,940 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:08:15,940 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1125 chars
2025-09-07 23:08:15,956 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-86573960-b7da-4e1f-ac74-51330148a8b1', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Brown\n Email: alice.brown@gmail.com | Phone: +1-396-365-3977\nAddress: 185 Main Street, New York, NY\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nBackend Engineer, Apple (2018 - 2019)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSoftware Engineer, Google (2020 - 2021)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nData Engineer, Airbnb (2022 - 2023)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Imperial College London (2013 - 2015)\nSkills\nKubernetes, REST APIs, GraphQL, Microservices, JavaScript, Java, AWS, Node.js\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:08:15,957 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:08:15,957 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:08:15,957 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107c00cd0>
2025-09-07 23:08:15,957 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:08:15,957 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:08:15,957 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:08:15,958 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:08:15,958 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:08:15,958 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:08:15,958 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112332b10> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:08:15,959 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ef54171b-1105-4d23-b65d-3f1494987b21', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Lee\n Email: alice.lee@gmail.com | Phone: +1-345-265-4958\nAddress: 188 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSenior Software Engineer, Bloomberg (2016 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nSoftware Engineer, Apple (2018 - 2019)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Airbnb (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Stanford University (2011 - 2016)\nSkills\nMachine Learning, GraphQL, AWS, React, Microservices, Kubernetes, SQL, TypeScript\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:08:15,959 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:08:15,959 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:08:15,959 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107c00640>
2025-09-07 23:08:15,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:08:15,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:08:15,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:08:15,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:08:15,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:08:15,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:08:15,959 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112332ba0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:08:15,960 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2a4a0cd9-7baa-4a7c-bbad-49fdda903fa9', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nJohn Lee\n Email: john.lee@gmail.com | Phone: +1-869-955-1818\nAddress: 416 Main Street, London, UK\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Apple (2016 - 2018)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Google (2018 - 2019)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Stanford University (2010 - 2015)\nSkills\nMachine Learning, REST APIs, JavaScript, AWS, Go, Node.js, Python, GraphQL\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:08:15,961 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:08:15,961 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:08:15,961 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107c005f0>
2025-09-07 23:08:15,961 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:08:15,961 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:08:15,961 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:08:15,961 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:08:15,961 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:08:15,961 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:08:15,961 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112330c20> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:08:16,428 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107c00730>
2025-09-07 23:08:16,428 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:08:16,429 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:08:16,429 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:08:16,429 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:08:16,429 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:08:16,501 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107c00c80>
2025-09-07 23:08:16,501 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:08:16,501 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:08:16,501 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:08:16,502 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:08:16,502 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:08:16,552 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107c00ff0>
2025-09-07 23:08:16,553 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:08:16,553 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:08:16,553 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:08:16,554 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:08:16,554 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:08:20,598 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ece98d7c-d3e4-4cf1-8823-aace89f8411a'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3907'), (b'req-arrive-time', b'1757257696659'), (b'resp-start-time', b'1757257700566'), (b'x-envoy-upstream-service-time', b'3903'), (b'set-cookie', b'acw_tc=ece98d7c-d3e4-4cf1-8823-aace89f8411ab413c8c14313d14a24f73a59527caa13;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:08:20 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:08:20,599 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:08:20,599 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:08:20,599 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:08:20,599 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:08:20,600 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:08:20,600 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ece98d7c-d3e4-4cf1-8823-aace89f8411a', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3907', 'req-arrive-time': '1757257696659', 'resp-start-time': '1757257700566', 'x-envoy-upstream-service-time': '3903', 'set-cookie': 'acw_tc=ece98d7c-d3e4-4cf1-8823-aace89f8411ab413c8c14313d14a24f73a59527caa13;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:08:20 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:08:20,600 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: ece98d7c-d3e4-4cf1-8823-aace89f8411a
2025-09-07 23:08:20,600 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:08:20,601 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Lee, Score: 75
2025-09-07 23:08:20,601 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6233092096] AI analysis completed successfully
2025-09-07 23:08:20,601 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6233092096] Analysis result - Candidate: Alice Lee, Score: 75
2025-09-07 23:08:20,601 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233092096] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230815_6233092096_resume_8.pdf
2025-09-07 23:08:20,601 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233092096] File processing completed successfully for: resume_8.pdf
2025-09-07 23:08:20,601 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6233092096] Saving successful result to cache
2025-09-07 23:08:20,603 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 46 cached responses
2025-09-07 23:08:20,608 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 47
2025-09-07 23:08:20,609 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Lee - 75%
2025-09-07 23:08:20,609 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233092096] Returning result: Alice Lee - 75%
2025-09-07 23:08:21,179 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'6b4e06f4-59e7-4427-8346-9c4ba8fe1309'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4427'), (b'req-arrive-time', b'1757257696605'), (b'resp-start-time', b'1757257701032'), (b'x-envoy-upstream-service-time', b'4426'), (b'set-cookie', b'acw_tc=6b4e06f4-59e7-4427-8346-9c4ba8fe13092a9fe23944b83fe5c8ad857c12033422;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:08:21 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:08:21,180 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:08:21,180 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:08:21,181 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:08:21,181 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:08:21,181 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:08:21,181 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '6b4e06f4-59e7-4427-8346-9c4ba8fe1309', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4427', 'req-arrive-time': '1757257696605', 'resp-start-time': '1757257701032', 'x-envoy-upstream-service-time': '4426', 'set-cookie': 'acw_tc=6b4e06f4-59e7-4427-8346-9c4ba8fe13092a9fe23944b83fe5c8ad857c12033422;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:08:21 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:08:21,181 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 6b4e06f4-59e7-4427-8346-9c4ba8fe1309
2025-09-07 23:08:21,182 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:08:21,182 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: John Lee, Score: 75
2025-09-07 23:08:21,182 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6215692288] AI analysis completed successfully
2025-09-07 23:08:21,182 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6215692288] Analysis result - Candidate: John Lee, Score: 75
2025-09-07 23:08:21,182 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6215692288] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230815_6215692288_resume_9.pdf
2025-09-07 23:08:21,182 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6215692288] File processing completed successfully for: resume_9.pdf
2025-09-07 23:08:21,182 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6215692288] Saving successful result to cache
2025-09-07 23:08:21,183 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 47 cached responses
2025-09-07 23:08:21,185 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 48
2025-09-07 23:08:21,186 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: John Lee - 75%
2025-09-07 23:08:21,186 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6215692288] Returning result: John Lee - 75%
2025-09-07 23:08:21,968 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'1cd38eae-7850-43d6-84b2-325dd15e744e'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4817'), (b'req-arrive-time', b'1757257696741'), (b'resp-start-time', b'1757257701558'), (b'x-envoy-upstream-service-time', b'4815'), (b'set-cookie', b'acw_tc=1cd38eae-7850-43d6-84b2-325dd15e744e9b89262afa446edce2a221a7d02fa38c;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:08:21 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:08:21,968 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:08:21,969 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:08:21,969 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:08:21,969 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:08:21,969 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:08:21,969 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '1cd38eae-7850-43d6-84b2-325dd15e744e', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4817', 'req-arrive-time': '1757257696741', 'resp-start-time': '1757257701558', 'x-envoy-upstream-service-time': '4815', 'set-cookie': 'acw_tc=1cd38eae-7850-43d6-84b2-325dd15e744e9b89262afa446edce2a221a7d02fa38c;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:08:21 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:08:21,969 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 1cd38eae-7850-43d6-84b2-325dd15e744e
2025-09-07 23:08:21,970 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:08:21,970 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Brown, Score: 75
2025-09-07 23:08:21,970 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6198865920] AI analysis completed successfully
2025-09-07 23:08:21,970 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6198865920] Analysis result - Candidate: Alice Brown, Score: 75
2025-09-07 23:08:21,970 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6198865920] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230815_6198865920_resume_10.pdf
2025-09-07 23:08:21,970 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6198865920] File processing completed successfully for: resume_10.pdf
2025-09-07 23:08:21,971 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6198865920] Saving successful result to cache
2025-09-07 23:08:21,973 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 48 cached responses
2025-09-07 23:08:21,976 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 49
2025-09-07 23:08:21,976 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Brown - 75%
2025-09-07 23:08:21,976 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6198865920] Returning result: Alice Brown - 75%
2025-09-07 23:08:21,977 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/3 completed: resume_10.pdf - success
2025-09-07 23:08:21,977 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/3 completed: resume_9.pdf - success
2025-09-07 23:08:21,977 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/3 completed: resume_8.pdf - success
2025-09-07 23:08:21,977 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 3 results collected
2025-09-07 23:08:21,978 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 3, Failed: 0
2025-09-07 23:08:21,978 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:08:21,978 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Alice Brown with 75% match
2025-09-07 23:08:21,978 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:08:21,978 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 6749 characters
2025-09-07 23:08:21,978 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 7281 bytes
2025-09-07 23:08:21,979 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:08:21] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:09:12,501 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:09:12,502 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:09:12,503 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:09:12,504 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:09:12] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:09:12,529 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:09:12,530 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:09:12,531 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:09:12,538 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:09:12,540 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757257341.0743744-24961-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:02:21 GMT'}
2025-09-07 23:09:12,539 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:09:12] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:09:12,539 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:09:12,541 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 25001 bytes
2025-09-07 23:09:12,543 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257543.169778-56816-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:05:43 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:09:12,544 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 56816 bytes
2025-09-07 23:09:12,545 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:09:12] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 23:09:12,546 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:09:12] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 23:09:12,575 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:09:12,575 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:09:12,575 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:09:12,575 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:09:12,576 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:09:12] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:09:20,072 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:09:20,072 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '5235', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarysW8Q46iJn5MICIlc', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:09:20,072 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarysW8Q46iJn5MICIlc
2025-09-07 23:09:20,073 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 5235
2025-09-07 23:09:20,074 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_9.pdf', 'resume_8.pdf']
2025-09-07 23:09:20,074 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:09:20,074 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:09:20,074 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 2, Job desc length: 17, Mock: False
2025-09-07 23:09:20,074 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_9.pdf', 'resume_8.pdf']
2025-09-07 23:09:20,074 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 2 workers for 2 files
2025-09-07 23:09:20,074 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:09:20,074 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6165213184] Starting processing file: resume_9.pdf
2025-09-07 23:09:20,075 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6182039552] Starting processing file: resume_8.pdf
2025-09-07 23:09:20,075 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 2 tasks submitted to thread pool
2025-09-07 23:09:20,075 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6165213184] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:09:20,075 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6182039552] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:09:20,075 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6165213184] Validating file type...
2025-09-07 23:09:20,075 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6182039552] Validating file type...
2025-09-07 23:09:20,075 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6165213184] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230920_6165213184_resume_9.pdf
2025-09-07 23:09:20,075 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6182039552] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230920_6182039552_resume_8.pdf
2025-09-07 23:09:20,076 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6165213184] File saved successfully
2025-09-07 23:09:20,076 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6182039552] File saved successfully
2025-09-07 23:09:20,076 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6165213184] Validating PDF structure...
2025-09-07 23:09:20,076 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6182039552] Validating PDF structure...
2025-09-07 23:09:20,077 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6182039552] PDF validation passed
2025-09-07 23:09:20,077 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6165213184] PDF validation passed
2025-09-07 23:09:20,077 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6182039552] Extracting text from PDF...
2025-09-07 23:09:20,077 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6165213184] Extracting text from PDF...
2025-09-07 23:09:20,084 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6165213184] Text extracted successfully - 870 characters
2025-09-07 23:09:20,085 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6165213184] Starting AI analysis with Qwen...
2025-09-07 23:09:20,088 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6165213184] Job description length: 17 chars
2025-09-07 23:09:20,088 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6165213184] Resume text length: 870 chars
2025-09-07 23:09:20,089 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:09:20,088 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6182039552] Text extracted successfully - 1125 characters
2025-09-07 23:09:20,090 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 870 chars
2025-09-07 23:09:20,091 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6182039552] Starting AI analysis with Qwen...
2025-09-07 23:09:20,091 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6182039552] Job description length: 17 chars
2025-09-07 23:09:20,091 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6182039552] Resume text length: 1125 chars
2025-09-07 23:09:20,092 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:09:20,092 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1125 chars
2025-09-07 23:09:20,121 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-51f0b4aa-4fbc-45ad-8caa-7730dd750e80', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Lee\n Email: alice.lee@gmail.com | Phone: +1-345-265-4958\nAddress: 188 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSenior Software Engineer, Bloomberg (2016 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nSoftware Engineer, Apple (2018 - 2019)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Airbnb (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Stanford University (2011 - 2016)\nSkills\nMachine Learning, GraphQL, AWS, React, Microservices, Kubernetes, SQL, TypeScript\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:09:20,121 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-98d6a8e3-028e-42ea-b6c4-7ba156d1c033', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nJohn Lee\n Email: john.lee@gmail.com | Phone: +1-869-955-1818\nAddress: 416 Main Street, London, UK\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Apple (2016 - 2018)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Google (2018 - 2019)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Stanford University (2010 - 2015)\nSkills\nMachine Learning, REST APIs, JavaScript, AWS, Go, Node.js, Python, GraphQL\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:09:20,122 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:09:20,122 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:09:20,122 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:09:20,122 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:09:20,123 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a34730>
2025-09-07 23:09:20,123 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a346e0>
2025-09-07 23:09:20,123 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:09:20,123 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:09:20,123 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:09:20,123 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:09:20,123 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:09:20,123 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:09:20,123 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:09:20,124 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:09:20,124 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:09:20,124 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:09:20,124 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:09:20,124 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:09:20,124 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1123335c0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:09:20,124 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112333530> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:09:20,551 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a36170>
2025-09-07 23:09:20,551 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:09:20,551 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:09:20,551 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:09:20,551 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:09:20,551 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:09:20,568 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a34af0>
2025-09-07 23:09:20,569 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:09:20,569 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:09:20,569 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:09:20,569 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:09:20,569 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:09:23,958 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'a5d0b225-056b-4dc4-90c4-ceb8bf08f62d'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3227'), (b'req-arrive-time', b'1757257760723'), (b'resp-start-time', b'1757257763950'), (b'x-envoy-upstream-service-time', b'3225'), (b'set-cookie', b'acw_tc=a5d0b225-056b-4dc4-90c4-ceb8bf08f62d545e74f9a855d14c38cded0d1065e05d;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:09:23 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:09:23,959 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:09:23,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:09:23,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:09:23,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:09:23,959 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:09:23,959 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'a5d0b225-056b-4dc4-90c4-ceb8bf08f62d', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3227', 'req-arrive-time': '1757257760723', 'resp-start-time': '1757257763950', 'x-envoy-upstream-service-time': '3225', 'set-cookie': 'acw_tc=a5d0b225-056b-4dc4-90c4-ceb8bf08f62d545e74f9a855d14c38cded0d1065e05d;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:09:23 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:09:23,959 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: a5d0b225-056b-4dc4-90c4-ceb8bf08f62d
2025-09-07 23:09:23,960 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:09:23,960 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: John Lee, Score: 75
2025-09-07 23:09:23,960 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6165213184] AI analysis completed successfully
2025-09-07 23:09:23,960 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6165213184] Analysis result - Candidate: John Lee, Score: 75
2025-09-07 23:09:23,960 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6165213184] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230920_6165213184_resume_9.pdf
2025-09-07 23:09:23,961 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6165213184] File processing completed successfully for: resume_9.pdf
2025-09-07 23:09:23,961 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6165213184] Saving successful result to cache
2025-09-07 23:09:23,962 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 49 cached responses
2025-09-07 23:09:23,965 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 50
2025-09-07 23:09:23,965 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: John Lee - 75%
2025-09-07 23:09:23,965 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6165213184] Returning result: John Lee - 75%
2025-09-07 23:09:23,965 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/2 completed: resume_9.pdf - success
2025-09-07 23:09:24,556 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ec8c0abd-283e-41b9-ba9c-db2da29ace8a'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3802'), (b'req-arrive-time', b'1757257760743'), (b'resp-start-time', b'1757257764545'), (b'x-envoy-upstream-service-time', b'3801'), (b'set-cookie', b'acw_tc=ec8c0abd-283e-41b9-ba9c-db2da29ace8a100371f9bc592faf2a2f59e67470ce27;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:09:24 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:09:24,557 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:09:24,557 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:09:24,557 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:09:24,557 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:09:24,558 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:09:24,558 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ec8c0abd-283e-41b9-ba9c-db2da29ace8a', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3802', 'req-arrive-time': '1757257760743', 'resp-start-time': '1757257764545', 'x-envoy-upstream-service-time': '3801', 'set-cookie': 'acw_tc=ec8c0abd-283e-41b9-ba9c-db2da29ace8a100371f9bc592faf2a2f59e67470ce27;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:09:24 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:09:24,558 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: ec8c0abd-283e-41b9-ba9c-db2da29ace8a
2025-09-07 23:09:24,558 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:09:24,558 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Lee, Score: 78
2025-09-07 23:09:24,558 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6182039552] AI analysis completed successfully
2025-09-07 23:09:24,558 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6182039552] Analysis result - Candidate: Alice Lee, Score: 78
2025-09-07 23:09:24,559 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6182039552] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_230920_6182039552_resume_8.pdf
2025-09-07 23:09:24,559 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6182039552] File processing completed successfully for: resume_8.pdf
2025-09-07 23:09:24,559 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6182039552] Saving successful result to cache
2025-09-07 23:09:24,560 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 50 cached responses
2025-09-07 23:09:24,562 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 51
2025-09-07 23:09:24,562 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Lee - 78%
2025-09-07 23:09:24,562 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6182039552] Returning result: Alice Lee - 78%
2025-09-07 23:09:24,562 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/2 completed: resume_8.pdf - success
2025-09-07 23:09:24,562 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 2 results collected
2025-09-07 23:09:24,565 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 2, Failed: 0
2025-09-07 23:09:24,565 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:09:24,565 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Alice Lee with 78% match
2025-09-07 23:09:24,565 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:09:24,566 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 4181 characters
2025-09-07 23:09:24,566 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4532 bytes
2025-09-07 23:09:24,567 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:09:24] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:09:31,620 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:09:31,620 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757257750.4373353-25001-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:09:10 GMT'}
2025-09-07 23:09:31,621 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 25001 bytes
2025-09-07 23:09:31,621 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:09:31] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:09:31,628 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:09:31,629 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:09:31,629 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:09:31,629 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:09:31] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:10:00,902 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:10:00,903 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:10:00,904 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:10:00,904 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:10:00] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:10:12,632 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:10:12,632 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:10:12,633 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:10:12,634 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:10:12] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:10:12,647 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:10:12,648 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257750.4373353-25001-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:09:10 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:10:12,649 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:10:12,649 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 25001 bytes
2025-09-07 23:10:12,650 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257543.169778-56816-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:05:43 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:10:12,650 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:10:12] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 23:10:12,651 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 56816 bytes
2025-09-07 23:10:12,651 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:10:12] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 23:10:12,689 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:10:12,689 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:10:12,690 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:10:12,690 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:10:12,691 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:10:12] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:10:18,137 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:10:18,137 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2736', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryAfAx5pkGDFQPN2gC', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:10:18,138 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryAfAx5pkGDFQPN2gC
2025-09-07 23:10:18,138 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2736
2025-09-07 23:10:18,138 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_8.pdf']
2025-09-07 23:10:18,138 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:10:18,138 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:10:18,138 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-07 23:10:18,138 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_8.pdf']
2025-09-07 23:10:18,139 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 23:10:18,139 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:10:18,139 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6198865920] Starting processing file: resume_8.pdf
2025-09-07 23:10:18,139 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 23:10:18,139 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6198865920] File details - Name: resume_8.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:10:18,139 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6198865920] Validating file type...
2025-09-07 23:10:18,139 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6198865920] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231018_6198865920_resume_8.pdf
2025-09-07 23:10:18,139 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6198865920] File saved successfully
2025-09-07 23:10:18,140 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6198865920] Validating PDF structure...
2025-09-07 23:10:18,140 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6198865920] PDF validation passed
2025-09-07 23:10:18,140 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6198865920] Extracting text from PDF...
2025-09-07 23:10:18,170 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6198865920] Text extracted successfully - 1125 characters
2025-09-07 23:10:18,170 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6198865920] Starting AI analysis with Qwen...
2025-09-07 23:10:18,170 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6198865920] Job description length: 17 chars
2025-09-07 23:10:18,170 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6198865920] Resume text length: 1125 chars
2025-09-07 23:10:18,170 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:10:18,170 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1125 chars
2025-09-07 23:10:18,216 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9c1b9d56-f3b2-4259-a683-a9edceb697d0', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Lee\n Email: alice.lee@gmail.com | Phone: +1-345-265-4958\nAddress: 188 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSenior Software Engineer, Bloomberg (2016 - 2017)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nSoftware Engineer, Apple (2018 - 2019)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Airbnb (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Stanford University (2011 - 2016)\nSkills\nMachine Learning, GraphQL, AWS, React, Microservices, Kubernetes, SQL, TypeScript\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:10:18,224 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:10:18,226 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:10:18,227 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a412c0>
2025-09-07 23:10:18,227 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:10:18,229 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:10:18,229 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:10:18,229 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:10:18,229 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:10:18,231 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:10:18,231 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112333260> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:10:19,675 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a41130>
2025-09-07 23:10:19,675 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:10:19,676 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:10:19,677 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:10:19,677 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:10:19,677 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:10:24,008 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'01015077-5e49-43f0-b61a-185796a39d7a'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4133'), (b'req-arrive-time', b'1757257819826'), (b'resp-start-time', b'1757257823959'), (b'x-envoy-upstream-service-time', b'4126'), (b'set-cookie', b'acw_tc=01015077-5e49-43f0-b61a-185796a39d7a016e21023a9a23ce174439c706f8a2c6;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:10:23 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:10:24,009 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:10:24,009 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:10:24,009 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:10:24,009 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:10:24,009 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:10:24,009 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '01015077-5e49-43f0-b61a-185796a39d7a', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4133', 'req-arrive-time': '1757257819826', 'resp-start-time': '1757257823959', 'x-envoy-upstream-service-time': '4126', 'set-cookie': 'acw_tc=01015077-5e49-43f0-b61a-185796a39d7a016e21023a9a23ce174439c706f8a2c6;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:10:23 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:10:24,010 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 01015077-5e49-43f0-b61a-185796a39d7a
2025-09-07 23:10:24,010 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:10:24,010 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Lee, Score: 78
2025-09-07 23:10:24,010 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6198865920] AI analysis completed successfully
2025-09-07 23:10:24,010 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6198865920] Analysis result - Candidate: Alice Lee, Score: 78
2025-09-07 23:10:24,010 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6198865920] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231018_6198865920_resume_8.pdf
2025-09-07 23:10:24,011 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6198865920] File processing completed successfully for: resume_8.pdf
2025-09-07 23:10:24,011 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6198865920] Saving successful result to cache
2025-09-07 23:10:24,013 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 51 cached responses
2025-09-07 23:10:24,015 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 52
2025-09-07 23:10:24,015 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Lee - 78%
2025-09-07 23:10:24,015 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6198865920] Returning result: Alice Lee - 78%
2025-09-07 23:10:24,015 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: resume_8.pdf - success
2025-09-07 23:10:24,015 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 23:10:24,015 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 23:10:24,015 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:10:24,015 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Alice Lee with 78% match
2025-09-07 23:10:24,015 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 23:10:24,015 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:10:24,015 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 4180 characters
2025-09-07 23:10:24,016 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4433 bytes
2025-09-07 23:10:24,016 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:10:24] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:10:31,898 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:10:31,898 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2741', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarygcdtDAqSqgSTgw2m', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:10:31,898 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarygcdtDAqSqgSTgw2m
2025-09-07 23:10:31,898 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2741
2025-09-07 23:10:31,899 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_2.pdf']
2025-09-07 23:10:31,899 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:10:31,899 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:10:31,899 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-07 23:10:31,899 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['resume_2.pdf']
2025-09-07 23:10:31,899 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 23:10:31,899 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:10:31,899 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6148386816] Starting processing file: resume_2.pdf
2025-09-07 23:10:31,899 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 23:10:31,899 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6148386816] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:10:31,899 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6148386816] Validating file type...
2025-09-07 23:10:31,899 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6148386816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231031_6148386816_resume_2.pdf
2025-09-07 23:10:31,900 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6148386816] File saved successfully
2025-09-07 23:10:31,900 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6148386816] Validating PDF structure...
2025-09-07 23:10:31,901 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6148386816] PDF validation passed
2025-09-07 23:10:31,901 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6148386816] Extracting text from PDF...
2025-09-07 23:10:31,905 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6148386816] Text extracted successfully - 1088 characters
2025-09-07 23:10:31,906 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6148386816] Starting AI analysis with Qwen...
2025-09-07 23:10:31,906 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6148386816] Job description length: 17 chars
2025-09-07 23:10:31,906 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6148386816] Resume text length: 1088 chars
2025-09-07 23:10:31,906 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:10:31,906 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1088 chars
2025-09-07 23:10:31,936 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f505e0a7-5d02-4dae-b0cb-24891b3ab495', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Smith\n Email: alice.smith@gmail.com | Phone: +1-915-210-5038\nAddress: 104 Main Street, Seattle, WA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSenior Software Engineer, Stripe (2016 - 2018)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSoftware Engineer, Airbnb (2018 - 2019)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nBackend Engineer, Apple (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Imperial College London (2010 - 2014)\nSkills\nSQL, C++, React, REST APIs, Docker, AWS, Node.js, Java\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:10:31,936 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:10:31,936 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:10:31,937 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a42ee0>
2025-09-07 23:10:31,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:10:31,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:10:31,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:10:31,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:10:31,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:10:31,937 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:10:31,937 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1123332f0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:10:32,705 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107c01310>
2025-09-07 23:10:32,705 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:10:32,705 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:10:32,706 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:10:32,706 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:10:32,706 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:10:37,247 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'81eed0ee-7098-46f0-9c32-fd3f07f01f3c'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3988'), (b'req-arrive-time', b'1757257832858'), (b'resp-start-time', b'1757257836846'), (b'x-envoy-upstream-service-time', b'3987'), (b'set-cookie', b'acw_tc=81eed0ee-7098-46f0-9c32-fd3f07f01f3cd688008a75f3f3efcefd0043eda9b989;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:10:36 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:10:37,247 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:10:37,247 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:10:37,247 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:10:37,248 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:10:37,248 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:10:37,248 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '81eed0ee-7098-46f0-9c32-fd3f07f01f3c', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3988', 'req-arrive-time': '1757257832858', 'resp-start-time': '1757257836846', 'x-envoy-upstream-service-time': '3987', 'set-cookie': 'acw_tc=81eed0ee-7098-46f0-9c32-fd3f07f01f3cd688008a75f3f3efcefd0043eda9b989;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:10:36 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:10:37,248 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 81eed0ee-7098-46f0-9c32-fd3f07f01f3c
2025-09-07 23:10:37,248 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:10:37,249 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Smith, Score: 85
2025-09-07 23:10:37,249 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6148386816] AI analysis completed successfully
2025-09-07 23:10:37,249 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6148386816] Analysis result - Candidate: Alice Smith, Score: 85
2025-09-07 23:10:37,249 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6148386816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231031_6148386816_resume_2.pdf
2025-09-07 23:10:37,249 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6148386816] File processing completed successfully for: resume_2.pdf
2025-09-07 23:10:37,249 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6148386816] Saving successful result to cache
2025-09-07 23:10:37,250 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 52 cached responses
2025-09-07 23:10:37,252 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 53
2025-09-07 23:10:37,253 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Smith - 85%
2025-09-07 23:10:37,254 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6148386816] Returning result: Alice Smith - 85%
2025-09-07 23:10:37,254 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: resume_2.pdf - success
2025-09-07 23:10:37,255 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 23:10:37,255 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 23:10:37,255 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:10:37,255 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Alice Smith with 85% match
2025-09-07 23:10:37,255 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 23:10:37,255 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:10:37,255 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 4324 characters
2025-09-07 23:10:37,256 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4587 bytes
2025-09-07 23:10:37,256 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:10:37] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:10:41,179 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:10:41,180 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '5043', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryH1rM6GjGTDq03GAi', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:10:41,180 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryH1rM6GjGTDq03GAi
2025-09-07 23:10:41,180 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 5043
2025-09-07 23:10:41,181 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['Baisheng_Song_Resume_副本.pdf']
2025-09-07 23:10:41,182 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:10:41,182 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:10:41,182 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-07 23:10:41,182 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['Baisheng_Song_Resume_副本.pdf']
2025-09-07 23:10:41,182 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 23:10:41,182 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:10:41,183 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6148386816] Starting processing file: Baisheng_Song_Resume_副本.pdf
2025-09-07 23:10:41,183 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 23:10:41,183 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6148386816] File details - Name: Baisheng_Song_Resume_副本.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:10:41,183 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6148386816] Validating file type...
2025-09-07 23:10:41,183 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6148386816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231041_6148386816_Baisheng_Song_Resume_.pdf
2025-09-07 23:10:41,183 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6148386816] File saved successfully
2025-09-07 23:10:41,184 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6148386816] Validating PDF structure...
2025-09-07 23:10:41,184 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6148386816] PDF validation passed
2025-09-07 23:10:41,184 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6148386816] Extracting text from PDF...
2025-09-07 23:10:41,196 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6148386816] Text extracted successfully - 3471 characters
2025-09-07 23:10:41,196 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6148386816] Starting AI analysis with Qwen...
2025-09-07 23:10:41,197 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6148386816] Job description length: 17 chars
2025-09-07 23:10:41,197 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6148386816] Resume text length: 3471 chars
2025-09-07 23:10:41,197 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:10:41,197 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 3471 chars
2025-09-07 23:10:41,222 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6e19c415-93f7-4fd2-ba41-6a9ccab76960', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nBaisheng Song\n London, UK \x7f [email] \x7f [phone] \x7f [LinkedIn] \x7f [GitHub]\nProfessional Summary\nSenior Software Engineer with 9+ years of experience designing and building high-performance trading systems,\ndata platforms, and risk modeling frameworks across hedge funds, investment management, and financial\ntechnology. Proven ability to lead development of scalable, low-latency infrastructure and collaborate closely with\nquantitative researchers, traders, and risk teams. Strong expertise in Python, algorithms, and time series data,\nwith additional experience in C++ and distributed systems. Adept at translating complex financial strategies into\nrobust, production-grade code with rigorous risk and compliance standards.\nProfessional Experience\nOakNorth, London — Senior Software Engineer    Jan 2020 – Present\n- Led development of an impact model framework to forecast climate and credit risk, incorporating stress testing\nand scenario analysis.\n- Built data integration workflows and APIs enabling real-time ingestion of external and client-provided datasets;\noptimized pipelines for performance and reliability.\n- Designed and developed a federated API platform to unify access to distributed financial and market data\nsources.\n- Partnered with quantitative analysts and product managers to deliver scalable Python-based data processing\nsystems, ensuring quality, compliance, and resilience.\n- Championed code quality, CI/CD pipelines, and testing frameworks to ensure maintainability and robustness.\nBloomberg, London — Senior Software Engineer    Aug 2016 – Dec 2019\n- Designed and implemented FX and IRS order book systems with a distributed matching algorithm, enabling\nhigh-throughput, low-latency primary market trading.\n- Led cross-business-unit initiative to deliver a multi-asset auction platform (government bonds, repo, FX).\n- Developed a trade reporting platform handling large-scale financial transactions with strict latency and\ncompliance requirements.\n- Acted as a technical representative for the fixed-income trading group, building DevX tools and interfacing with\nresearch, operations, and product stakeholders.\n- Optimized C++ and Python codebases for performance and reliability, focusing on algorithms, memory\nefficiency, and concurrency.\nBlackRock, London — Software Engineer    Apr 2015 – Aug 2016\n- Built quantitative algorithms and frameworks to enable passive fixed-income portfolio management at scale.\n- Designed software to process time series financial data for strategy backtesting and risk analysis.\n- Partnered with portfolio managers to translate financial models into production-grade code.\nEducation\nBSc Computer Science, First Class Honours — [University Name], [Year]\nTechnical Skills\nProgramming: Python (advanced), C++ (strong), Java, Rust (familiar)\nLibraries: pandas, numpy, scipy, SQL/NoSQL\nSystems: Linux, distributed systems, APIs, CI/CD, testing frameworks\nDomains: Systematic trading, risk modeling, financial data, time series analysis\nOther: Cloud computing (AWS/GCP), version control (Git), performance optimization\nSelected Achievements\n- Designed real-time trading infrastructure at Bloomberg supporting sub-millisecond order execution.\n\n\n--- Page 2 ---\n- Built risk and scenario analysis frameworks at OakNorth, enabling regulatory-grade climate and credit risk\nforecasting.\n- Delivered multi-asset trading platforms used by institutional clients, integrating compliance and operational\nsafeguards.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:10:41,223 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:10:41,223 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:10:41,223 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a43570>
2025-09-07 23:10:41,223 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:10:41,223 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:10:41,223 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:10:41,223 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:10:41,223 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:10:41,224 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:10:41,224 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112332ba0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:10:41,684 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117932440>
2025-09-07 23:10:41,684 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:10:41,684 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:10:41,684 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:10:41,685 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:10:41,685 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:10:46,196 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'4208075c-3d1e-42f3-bd0b-2ae028370ea0'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3907'), (b'req-arrive-time', b'1757257841830'), (b'resp-start-time', b'1757257845737'), (b'x-envoy-upstream-service-time', b'3906'), (b'set-cookie', b'acw_tc=4208075c-3d1e-42f3-bd0b-2ae028370ea07826625afb3cc495023010e6d96d5f19;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:10:45 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:10:46,197 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:10:46,198 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:10:46,198 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:10:46,198 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:10:46,198 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:10:46,198 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '4208075c-3d1e-42f3-bd0b-2ae028370ea0', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3907', 'req-arrive-time': '1757257841830', 'resp-start-time': '1757257845737', 'x-envoy-upstream-service-time': '3906', 'set-cookie': 'acw_tc=4208075c-3d1e-42f3-bd0b-2ae028370ea07826625afb3cc495023010e6d96d5f19;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:10:45 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:10:46,198 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 4208075c-3d1e-42f3-bd0b-2ae028370ea0
2025-09-07 23:10:46,199 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:10:46,199 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Baisheng Song, Score: 88
2025-09-07 23:10:46,199 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6148386816] AI analysis completed successfully
2025-09-07 23:10:46,199 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6148386816] Analysis result - Candidate: Baisheng Song, Score: 88
2025-09-07 23:10:46,199 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6148386816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231041_6148386816_Baisheng_Song_Resume_.pdf
2025-09-07 23:10:46,200 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6148386816] File processing completed successfully for: Baisheng_Song_Resume_.pdf
2025-09-07 23:10:46,200 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6148386816] Saving successful result to cache
2025-09-07 23:10:46,201 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 53 cached responses
2025-09-07 23:10:46,204 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 54
2025-09-07 23:10:46,204 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Baisheng Song - 88%
2025-09-07 23:10:46,204 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6148386816] Returning result: Baisheng Song - 88%
2025-09-07 23:10:46,204 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: Baisheng_Song_Resume_.pdf - success
2025-09-07 23:10:46,204 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 23:10:46,204 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 23:10:46,205 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:10:46,205 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Baisheng Song with 88% match
2025-09-07 23:10:46,205 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 23:10:46,205 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:10:46,205 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 4442 characters
2025-09-07 23:10:46,205 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4695 bytes
2025-09-07 23:10:46,205 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:10:46] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:10:50,227 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:10:50,227 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '50829', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary5HkqwAfRCx6TXE1s', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:10:50,227 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundary5HkqwAfRCx6TXE1s
2025-09-07 23:10:50,227 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 50829
2025-09-07 23:10:50,228 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['文字文稿1.pdf']
2025-09-07 23:10:50,228 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:10:50,228 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:10:50,228 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-07 23:10:50,228 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['文字文稿1.pdf']
2025-09-07 23:10:50,228 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-07 23:10:50,228 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:10:50,229 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6148386816] Starting processing file: 文字文稿1.pdf
2025-09-07 23:10:50,229 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-07 23:10:50,229 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6148386816] File details - Name: 文字文稿1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:10:50,229 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6148386816] Validating file type...
2025-09-07 23:10:50,229 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6148386816] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231050_6148386816_1.pdf
2025-09-07 23:10:50,230 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6148386816] File saved successfully
2025-09-07 23:10:50,230 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6148386816] Validating PDF structure...
2025-09-07 23:10:50,231 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6148386816] PDF validation passed
2025-09-07 23:10:50,231 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6148386816] Extracting text from PDF...
2025-09-07 23:10:50,261 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6148386816] Text extracted successfully - 388 characters
2025-09-07 23:10:50,261 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6148386816] Starting AI analysis with Qwen...
2025-09-07 23:10:50,261 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6148386816] Job description length: 17 chars
2025-09-07 23:10:50,261 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6148386816] Resume text length: 388 chars
2025-09-07 23:10:50,261 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:10:50,261 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 388 chars
2025-09-07 23:10:50,280 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-91561239-b7b1-46b5-930d-f086bcaa33ca', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlexanderersonAndersonilsonnen\nProjectManager-Construction\nEducation\nBachelor\'sdegreefromNationalUniversityofSingapore\nExperience\nWorkedasProjectManageratSiemens(2019-2024)\nKeyachievementsincludedeliveringprojectsontime,collaboratingwithcross-functional\nteams,\nandachievingmeasurableresults.\nSkills\nIndustry-relevantskills,strongcommunication,problem-solving,andleadership.\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:10:50,280 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:10:50,280 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:10:50,281 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107c005f0>
2025-09-07 23:10:50,281 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:10:50,281 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:10:50,281 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:10:50,281 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:10:50,281 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:10:50,281 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:10:50,281 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107dfdf40> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:10:50,805 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179cbe80>
2025-09-07 23:10:50,806 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:10:50,806 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:10:50,807 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:10:50,807 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:10:50,807 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:10:54,665 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'f1eaaa21-c2a5-4de7-88f9-fbaf769e0195'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3669'), (b'req-arrive-time', b'1757257850926'), (b'resp-start-time', b'1757257854596'), (b'x-envoy-upstream-service-time', b'3664'), (b'set-cookie', b'acw_tc=f1eaaa21-c2a5-4de7-88f9-fbaf769e01953ca071cd1301a18e415dddb5930d1763;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:10:54 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:10:54,666 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:10:54,666 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:10:54,666 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:10:54,666 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:10:54,666 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:10:54,666 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'f1eaaa21-c2a5-4de7-88f9-fbaf769e0195', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3669', 'req-arrive-time': '1757257850926', 'resp-start-time': '1757257854596', 'x-envoy-upstream-service-time': '3664', 'set-cookie': 'acw_tc=f1eaaa21-c2a5-4de7-88f9-fbaf769e01953ca071cd1301a18e415dddb5930d1763;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:10:54 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:10:54,666 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: f1eaaa21-c2a5-4de7-88f9-fbaf769e0195
2025-09-07 23:10:54,667 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:10:54,667 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:10:54,667 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6148386816] AI analysis completed successfully
2025-09-07 23:10:54,667 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6148386816] Analysis result - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:10:54,667 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6148386816] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231050_6148386816_1.pdf
2025-09-07 23:10:54,667 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6148386816] File processing completed successfully for: 1.pdf
2025-09-07 23:10:54,667 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6148386816] Saving successful result to cache
2025-09-07 23:10:54,668 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 54 cached responses
2025-09-07 23:10:54,671 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 55
2025-09-07 23:10:54,671 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:10:54,671 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6148386816] Returning result: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:10:54,671 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/1 completed: 1.pdf - success
2025-09-07 23:10:54,674 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-07 23:10:54,675 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-07 23:10:54,675 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:10:54,675 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: AlexanderersonAndersonilsonnen with 35% match
2025-09-07 23:10:54,675 - app.main - DEBUG - [main.py:456] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-07 23:10:54,675 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:10:54,676 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 3820 characters
2025-09-07 23:10:54,676 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4061 bytes
2025-09-07 23:10:54,676 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:10:54] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:11:10,757 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:11:10,757 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757257810.0038288-25001-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:10:10 GMT'}
2025-09-07 23:11:10,758 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 25001 bytes
2025-09-07 23:11:10,758 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:11:10] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:11:10,767 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:11:10,768 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:11:10,774 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:11:10,775 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:11:10] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:11:46,814 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:11:46,815 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:11:46,815 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:11:46,816 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:11:46] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:11:57,594 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:11:57,594 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:11:57,595 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:11:57,595 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:11:57] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:12:11,788 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:12:11,788 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:12:11,789 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:12:11,789 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:12:11] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:12:53,647 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:12:53,647 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:12:53,647 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:12:53,648 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:12:53] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:13:21,403 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:13:21,404 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:13:21,405 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:13:21,405 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:13:21] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:13:21,420 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:13:21,420 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257810.0038288-25001-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:10:10 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:13:21,421 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 25077 bytes
2025-09-07 23:13:21,422 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:13:21] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 23:13:21,425 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:13:21,426 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257543.169778-56816-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:05:43 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:13:21,428 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 56816 bytes
2025-09-07 23:13:21,429 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:13:21] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 23:13:21,530 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:13:21,531 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:13:21,531 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:13:21,531 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:13:21,531 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:13:21] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:13:27,315 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:13:27,316 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '55709', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryQMfCTlSj4ALTcAnR', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:13:27,316 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryQMfCTlSj4ALTcAnR
2025-09-07 23:13:27,316 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 55709
2025-09-07 23:13:27,318 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['文字文稿1.pdf', 'Baisheng_Song_Resume_副本.pdf']
2025-09-07 23:13:27,318 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:13:27,318 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:13:27,318 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 2, Job desc length: 17, Mock: False
2025-09-07 23:13:27,319 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['文字文稿1.pdf', 'Baisheng_Song_Resume_副本.pdf']
2025-09-07 23:13:27,319 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 2 workers for 2 files
2025-09-07 23:13:27,319 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:13:27,320 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233092096] Starting processing file: 文字文稿1.pdf
2025-09-07 23:13:27,321 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233092096] File details - Name: 文字文稿1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:13:27,321 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233092096] Validating file type...
2025-09-07 23:13:27,322 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233092096] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231327_6233092096_1.pdf
2025-09-07 23:13:27,322 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6249918464] Starting processing file: Baisheng_Song_Resume_副本.pdf
2025-09-07 23:13:27,323 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 2 tasks submitted to thread pool
2025-09-07 23:13:27,323 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6249918464] File details - Name: Baisheng_Song_Resume_副本.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:13:27,324 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6249918464] Validating file type...
2025-09-07 23:13:27,325 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6249918464] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231327_6249918464_Baisheng_Song_Resume_.pdf
2025-09-07 23:13:27,327 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6249918464] File saved successfully
2025-09-07 23:13:27,331 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6249918464] Validating PDF structure...
2025-09-07 23:13:27,332 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233092096] File saved successfully
2025-09-07 23:13:27,332 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233092096] Validating PDF structure...
2025-09-07 23:13:27,333 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6249918464] PDF validation passed
2025-09-07 23:13:27,333 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6249918464] Extracting text from PDF...
2025-09-07 23:13:27,333 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233092096] PDF validation passed
2025-09-07 23:13:27,333 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233092096] Extracting text from PDF...
2025-09-07 23:13:27,346 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6249918464] Text extracted successfully - 3471 characters
2025-09-07 23:13:27,353 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6249918464] Starting AI analysis with Qwen...
2025-09-07 23:13:27,353 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6249918464] Job description length: 17 chars
2025-09-07 23:13:27,354 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6249918464] Resume text length: 3471 chars
2025-09-07 23:13:27,354 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233092096] Text extracted successfully - 388 characters
2025-09-07 23:13:27,354 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:13:27,354 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6233092096] Starting AI analysis with Qwen...
2025-09-07 23:13:27,354 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 3471 chars
2025-09-07 23:13:27,354 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6233092096] Job description length: 17 chars
2025-09-07 23:13:27,354 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6233092096] Resume text length: 388 chars
2025-09-07 23:13:27,354 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:13:27,354 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 388 chars
2025-09-07 23:13:27,373 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-801f99cb-d296-4239-b7ac-2391890325c7', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nBaisheng Song\n London, UK \x7f [email] \x7f [phone] \x7f [LinkedIn] \x7f [GitHub]\nProfessional Summary\nSenior Software Engineer with 9+ years of experience designing and building high-performance trading systems,\ndata platforms, and risk modeling frameworks across hedge funds, investment management, and financial\ntechnology. Proven ability to lead development of scalable, low-latency infrastructure and collaborate closely with\nquantitative researchers, traders, and risk teams. Strong expertise in Python, algorithms, and time series data,\nwith additional experience in C++ and distributed systems. Adept at translating complex financial strategies into\nrobust, production-grade code with rigorous risk and compliance standards.\nProfessional Experience\nOakNorth, London — Senior Software Engineer    Jan 2020 – Present\n- Led development of an impact model framework to forecast climate and credit risk, incorporating stress testing\nand scenario analysis.\n- Built data integration workflows and APIs enabling real-time ingestion of external and client-provided datasets;\noptimized pipelines for performance and reliability.\n- Designed and developed a federated API platform to unify access to distributed financial and market data\nsources.\n- Partnered with quantitative analysts and product managers to deliver scalable Python-based data processing\nsystems, ensuring quality, compliance, and resilience.\n- Championed code quality, CI/CD pipelines, and testing frameworks to ensure maintainability and robustness.\nBloomberg, London — Senior Software Engineer    Aug 2016 – Dec 2019\n- Designed and implemented FX and IRS order book systems with a distributed matching algorithm, enabling\nhigh-throughput, low-latency primary market trading.\n- Led cross-business-unit initiative to deliver a multi-asset auction platform (government bonds, repo, FX).\n- Developed a trade reporting platform handling large-scale financial transactions with strict latency and\ncompliance requirements.\n- Acted as a technical representative for the fixed-income trading group, building DevX tools and interfacing with\nresearch, operations, and product stakeholders.\n- Optimized C++ and Python codebases for performance and reliability, focusing on algorithms, memory\nefficiency, and concurrency.\nBlackRock, London — Software Engineer    Apr 2015 – Aug 2016\n- Built quantitative algorithms and frameworks to enable passive fixed-income portfolio management at scale.\n- Designed software to process time series financial data for strategy backtesting and risk analysis.\n- Partnered with portfolio managers to translate financial models into production-grade code.\nEducation\nBSc Computer Science, First Class Honours — [University Name], [Year]\nTechnical Skills\nProgramming: Python (advanced), C++ (strong), Java, Rust (familiar)\nLibraries: pandas, numpy, scipy, SQL/NoSQL\nSystems: Linux, distributed systems, APIs, CI/CD, testing frameworks\nDomains: Systematic trading, risk modeling, financial data, time series analysis\nOther: Cloud computing (AWS/GCP), version control (Git), performance optimization\nSelected Achievements\n- Designed real-time trading infrastructure at Bloomberg supporting sub-millisecond order execution.\n\n\n--- Page 2 ---\n- Built risk and scenario analysis frameworks at OakNorth, enabling regulatory-grade climate and credit risk\nforecasting.\n- Delivered multi-asset trading platforms used by institutional clients, integrating compliance and operational\nsafeguards.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:13:27,374 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-92c54a60-8148-4932-ba06-14c7d92f5323', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlexanderersonAndersonilsonnen\nProjectManager-Construction\nEducation\nBachelor\'sdegreefromNationalUniversityofSingapore\nExperience\nWorkedasProjectManageratSiemens(2019-2024)\nKeyachievementsincludedeliveringprojectsontime,collaboratingwithcross-functional\nteams,\nandachievingmeasurableresults.\nSkills\nIndustry-relevantskills,strongcommunication,problem-solving,andleadership.\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:13:27,374 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:13:27,374 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:13:27,374 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:13:27,374 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:13:27,375 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179cbca0>
2025-09-07 23:13:27,375 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179cbed0>
2025-09-07 23:13:27,375 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:13:27,375 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:13:27,375 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:13:27,375 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:13:27,375 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:13:27,375 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:13:27,375 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:13:27,375 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:13:27,375 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:13:27,375 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:13:27,375 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107982d50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:13:27,375 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:13:27,375 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:13:27,375 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c860f0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:13:27,857 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a37c50>
2025-09-07 23:13:27,857 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:13:27,857 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:13:27,858 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:13:27,858 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:13:27,858 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:13:27,951 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1179cb660>
2025-09-07 23:13:27,951 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:13:27,952 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:13:27,952 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:13:27,952 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:13:27,953 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:13:31,638 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'b36a518d-8679-43c1-975a-d22938b091ad'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3410'), (b'req-arrive-time', b'1757258008168'), (b'resp-start-time', b'1757258011578'), (b'x-envoy-upstream-service-time', b'3409'), (b'set-cookie', b'acw_tc=b36a518d-8679-43c1-975a-d22938b091ade1490f3319be33b5f4f585c239c0db8a;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:13:31 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:13:31,638 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:13:31,638 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:13:31,639 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:13:31,639 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:13:31,639 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:13:31,639 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'b36a518d-8679-43c1-975a-d22938b091ad', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3410', 'req-arrive-time': '1757258008168', 'resp-start-time': '1757258011578', 'x-envoy-upstream-service-time': '3409', 'set-cookie': 'acw_tc=b36a518d-8679-43c1-975a-d22938b091ade1490f3319be33b5f4f585c239c0db8a;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:13:31 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:13:31,639 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: b36a518d-8679-43c1-975a-d22938b091ad
2025-09-07 23:13:31,639 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:13:31,640 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:13:31,640 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6233092096] AI analysis completed successfully
2025-09-07 23:13:31,640 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6233092096] Analysis result - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:13:31,640 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233092096] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231327_6233092096_1.pdf
2025-09-07 23:13:31,640 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233092096] File processing completed successfully for: 1.pdf
2025-09-07 23:13:31,640 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6233092096] Saving successful result to cache
2025-09-07 23:13:31,642 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 55 cached responses
2025-09-07 23:13:31,648 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 56
2025-09-07 23:13:31,648 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:13:31,649 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233092096] Returning result: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:13:31,649 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/2 completed: 1.pdf - success
2025-09-07 23:13:33,107 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'41215e1e-9184-4f46-8974-bff19f3ba4ac'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4848'), (b'req-arrive-time', b'1757258008079'), (b'resp-start-time', b'1757258012927'), (b'x-envoy-upstream-service-time', b'4197'), (b'set-cookie', b'acw_tc=41215e1e-9184-4f46-8974-bff19f3ba4acf8076a05284dae1163dd9da3732d8afc;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:13:32 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:13:33,108 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:13:33,108 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:13:33,108 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:13:33,108 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:13:33,109 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:13:33,109 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '41215e1e-9184-4f46-8974-bff19f3ba4ac', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4848', 'req-arrive-time': '1757258008079', 'resp-start-time': '1757258012927', 'x-envoy-upstream-service-time': '4197', 'set-cookie': 'acw_tc=41215e1e-9184-4f46-8974-bff19f3ba4acf8076a05284dae1163dd9da3732d8afc;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:13:32 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:13:33,109 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 41215e1e-9184-4f46-8974-bff19f3ba4ac
2025-09-07 23:13:33,109 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:13:33,110 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Baisheng Song, Score: 92
2025-09-07 23:13:33,110 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6249918464] AI analysis completed successfully
2025-09-07 23:13:33,110 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6249918464] Analysis result - Candidate: Baisheng Song, Score: 92
2025-09-07 23:13:33,110 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6249918464] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231327_6249918464_Baisheng_Song_Resume_.pdf
2025-09-07 23:13:33,111 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6249918464] File processing completed successfully for: Baisheng_Song_Resume_.pdf
2025-09-07 23:13:33,111 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6249918464] Saving successful result to cache
2025-09-07 23:13:33,112 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 56 cached responses
2025-09-07 23:13:33,115 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 57
2025-09-07 23:13:33,115 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Baisheng Song - 92%
2025-09-07 23:13:33,116 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6249918464] Returning result: Baisheng Song - 92%
2025-09-07 23:13:33,116 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/2 completed: Baisheng_Song_Resume_.pdf - success
2025-09-07 23:13:33,116 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 2 results collected
2025-09-07 23:13:33,116 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 2, Failed: 0
2025-09-07 23:13:33,116 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:13:33,116 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Baisheng Song with 92% match
2025-09-07 23:13:33,117 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:13:33,117 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 4251 characters
2025-09-07 23:13:33,117 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4602 bytes
2025-09-07 23:13:33,117 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:13:33] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:14:53,769 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:14:53,770 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757257998.4087164-25077-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:13:18 GMT'}
2025-09-07 23:14:53,770 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 25077 bytes
2025-09-07 23:14:53,771 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:14:53] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:14:53,776 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:14:53,776 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:14:53,777 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:14:53,778 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:14:53] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:15:04,914 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:15:04,914 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:15:04,915 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:15:04,915 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:15:04] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:16:01,158 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:16:01,158 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:16:01,159 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:16:01,159 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:16:01] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:16:01,178 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:16:01,178 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257998.4087164-25077-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:13:18 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:16:01,180 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 25214 bytes
2025-09-07 23:16:01,183 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:16:01,183 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:16:01] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 23:16:01,184 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757257543.169778-56816-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:05:43 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:16:01,184 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 56816 bytes
2025-09-07 23:16:01,185 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:16:01] "GET /static/script.js HTTP/1.1" 200 -
2025-09-07 23:16:01,227 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:16:01,227 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:16:01,228 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:16:01,228 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:16:01,228 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:16:01] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:16:09,580 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:16:09,580 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '60769', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryhOvuZa05vL4K7FL4', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:16:09,580 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryhOvuZa05vL4K7FL4
2025-09-07 23:16:09,580 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 60769
2025-09-07 23:16:09,583 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['文字文稿1.pdf', 'Baisheng_Song_Resume_副本.pdf', 'resume_1.pdf', 'resume_2.pdf']
2025-09-07 23:16:09,583 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:16:09,583 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:16:09,583 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 4, Job desc length: 17, Mock: False
2025-09-07 23:16:09,584 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['文字文稿1.pdf', 'Baisheng_Song_Resume_副本.pdf', 'resume_1.pdf', 'resume_2.pdf']
2025-09-07 23:16:09,584 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 4 workers for 4 files
2025-09-07 23:16:09,584 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:16:09,585 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6182039552] Starting processing file: 文字文稿1.pdf
2025-09-07 23:16:09,585 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6182039552] File details - Name: 文字文稿1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:16:09,585 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6182039552] Validating file type...
2025-09-07 23:16:09,585 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6182039552] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231609_6182039552_1.pdf
2025-09-07 23:16:09,585 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6198865920] Starting processing file: Baisheng_Song_Resume_副本.pdf
2025-09-07 23:16:09,586 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6198865920] File details - Name: Baisheng_Song_Resume_副本.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:16:09,586 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6198865920] Validating file type...
2025-09-07 23:16:09,587 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6198865920] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231609_6198865920_Baisheng_Song_Resume_.pdf
2025-09-07 23:16:09,587 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6215692288] Starting processing file: resume_1.pdf
2025-09-07 23:16:09,587 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6215692288] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:16:09,587 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6215692288] Validating file type...
2025-09-07 23:16:09,587 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6233092096] Starting processing file: resume_2.pdf
2025-09-07 23:16:09,587 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6215692288] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231609_6215692288_resume_1.pdf
2025-09-07 23:16:09,587 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 4 tasks submitted to thread pool
2025-09-07 23:16:09,588 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6198865920] File saved successfully
2025-09-07 23:16:09,588 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6198865920] Validating PDF structure...
2025-09-07 23:16:09,588 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6182039552] File saved successfully
2025-09-07 23:16:09,588 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6233092096] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:16:09,593 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6182039552] Validating PDF structure...
2025-09-07 23:16:09,594 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6215692288] File saved successfully
2025-09-07 23:16:09,594 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6233092096] Validating file type...
2025-09-07 23:16:09,594 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6198865920] PDF validation passed
2025-09-07 23:16:09,594 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6215692288] Validating PDF structure...
2025-09-07 23:16:09,595 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6233092096] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231609_6233092096_resume_2.pdf
2025-09-07 23:16:09,595 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6198865920] Extracting text from PDF...
2025-09-07 23:16:09,595 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6182039552] PDF validation passed
2025-09-07 23:16:09,596 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6182039552] Extracting text from PDF...
2025-09-07 23:16:09,596 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6215692288] PDF validation passed
2025-09-07 23:16:09,596 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6233092096] File saved successfully
2025-09-07 23:16:09,597 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6215692288] Extracting text from PDF...
2025-09-07 23:16:09,604 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6233092096] Validating PDF structure...
2025-09-07 23:16:09,616 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6198865920] Text extracted successfully - 3471 characters
2025-09-07 23:16:09,616 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6198865920] Starting AI analysis with Qwen...
2025-09-07 23:16:09,616 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6198865920] Job description length: 17 chars
2025-09-07 23:16:09,617 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6198865920] Resume text length: 3471 chars
2025-09-07 23:16:09,617 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:16:09,618 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6233092096] PDF validation passed
2025-09-07 23:16:09,619 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6215692288] Text extracted successfully - 859 characters
2025-09-07 23:16:09,619 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 3471 chars
2025-09-07 23:16:09,620 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6233092096] Extracting text from PDF...
2025-09-07 23:16:09,620 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6215692288] Starting AI analysis with Qwen...
2025-09-07 23:16:09,627 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6182039552] Text extracted successfully - 388 characters
2025-09-07 23:16:09,627 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6215692288] Job description length: 17 chars
2025-09-07 23:16:09,627 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6182039552] Starting AI analysis with Qwen...
2025-09-07 23:16:09,627 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6215692288] Resume text length: 859 chars
2025-09-07 23:16:09,627 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6182039552] Job description length: 17 chars
2025-09-07 23:16:09,627 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:16:09,628 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6182039552] Resume text length: 388 chars
2025-09-07 23:16:09,629 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6233092096] Text extracted successfully - 1088 characters
2025-09-07 23:16:09,629 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 859 chars
2025-09-07 23:16:09,629 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:16:09,629 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6233092096] Starting AI analysis with Qwen...
2025-09-07 23:16:09,630 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 388 chars
2025-09-07 23:16:09,630 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6233092096] Job description length: 17 chars
2025-09-07 23:16:09,630 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6233092096] Resume text length: 1088 chars
2025-09-07 23:16:09,630 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:16:09,630 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1088 chars
2025-09-07 23:16:09,645 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-3eeeb5cc-778a-4a1a-8959-60d38623d03b', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nBaisheng Song\n London, UK \x7f [email] \x7f [phone] \x7f [LinkedIn] \x7f [GitHub]\nProfessional Summary\nSenior Software Engineer with 9+ years of experience designing and building high-performance trading systems,\ndata platforms, and risk modeling frameworks across hedge funds, investment management, and financial\ntechnology. Proven ability to lead development of scalable, low-latency infrastructure and collaborate closely with\nquantitative researchers, traders, and risk teams. Strong expertise in Python, algorithms, and time series data,\nwith additional experience in C++ and distributed systems. Adept at translating complex financial strategies into\nrobust, production-grade code with rigorous risk and compliance standards.\nProfessional Experience\nOakNorth, London — Senior Software Engineer    Jan 2020 – Present\n- Led development of an impact model framework to forecast climate and credit risk, incorporating stress testing\nand scenario analysis.\n- Built data integration workflows and APIs enabling real-time ingestion of external and client-provided datasets;\noptimized pipelines for performance and reliability.\n- Designed and developed a federated API platform to unify access to distributed financial and market data\nsources.\n- Partnered with quantitative analysts and product managers to deliver scalable Python-based data processing\nsystems, ensuring quality, compliance, and resilience.\n- Championed code quality, CI/CD pipelines, and testing frameworks to ensure maintainability and robustness.\nBloomberg, London — Senior Software Engineer    Aug 2016 – Dec 2019\n- Designed and implemented FX and IRS order book systems with a distributed matching algorithm, enabling\nhigh-throughput, low-latency primary market trading.\n- Led cross-business-unit initiative to deliver a multi-asset auction platform (government bonds, repo, FX).\n- Developed a trade reporting platform handling large-scale financial transactions with strict latency and\ncompliance requirements.\n- Acted as a technical representative for the fixed-income trading group, building DevX tools and interfacing with\nresearch, operations, and product stakeholders.\n- Optimized C++ and Python codebases for performance and reliability, focusing on algorithms, memory\nefficiency, and concurrency.\nBlackRock, London — Software Engineer    Apr 2015 – Aug 2016\n- Built quantitative algorithms and frameworks to enable passive fixed-income portfolio management at scale.\n- Designed software to process time series financial data for strategy backtesting and risk analysis.\n- Partnered with portfolio managers to translate financial models into production-grade code.\nEducation\nBSc Computer Science, First Class Honours — [University Name], [Year]\nTechnical Skills\nProgramming: Python (advanced), C++ (strong), Java, Rust (familiar)\nLibraries: pandas, numpy, scipy, SQL/NoSQL\nSystems: Linux, distributed systems, APIs, CI/CD, testing frameworks\nDomains: Systematic trading, risk modeling, financial data, time series analysis\nOther: Cloud computing (AWS/GCP), version control (Git), performance optimization\nSelected Achievements\n- Designed real-time trading infrastructure at Bloomberg supporting sub-millisecond order execution.\n\n\n--- Page 2 ---\n- Built risk and scenario analysis frameworks at OakNorth, enabling regulatory-grade climate and credit risk\nforecasting.\n- Delivered multi-asset trading platforms used by institutional clients, integrating compliance and operational\nsafeguards.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:16:09,645 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:16:09,646 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:16:09,646 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-fd7ce47c-8b1a-45e1-8107-f45722113005', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nJohn Lee\n Email: john.lee@gmail.com | Phone: +1-409-397-2292\nAddress: 580 Main Street, London, UK\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Stripe (2018 - 2020)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Netflix (2020 - 2021)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, UC Berkeley (2010 - 2016)\nSkills\nKubernetes, Node.js, Docker, Microservices, Java, AWS, C++, Go\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:16:09,646 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:16:09,647 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6bfa4637-7371-4af3-bf10-62d3bf895e45', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlexanderersonAndersonilsonnen\nProjectManager-Construction\nEducation\nBachelor\'sdegreefromNationalUniversityofSingapore\nExperience\nWorkedasProjectManageratSiemens(2019-2024)\nKeyachievementsincludedeliveringprojectsontime,collaboratingwithcross-functional\nteams,\nandachievingmeasurableresults.\nSkills\nIndustry-relevantskills,strongcommunication,problem-solving,andleadership.\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:16:09,647 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a0174606-b2c1-46c4-9277-68ec147f9da4', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Smith\n Email: alice.smith@gmail.com | Phone: +1-915-210-5038\nAddress: 104 Main Street, Seattle, WA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSenior Software Engineer, Stripe (2016 - 2018)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSoftware Engineer, Airbnb (2018 - 2019)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nBackend Engineer, Apple (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Imperial College London (2010 - 2014)\nSkills\nSQL, C++, React, REST APIs, Docker, AWS, Node.js, Java\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:16:09,647 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:16:09,647 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a463a0>
2025-09-07 23:16:09,647 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:16:09,647 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:16:09,647 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:16:09,647 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:16:09,647 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:16:09,647 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a46c60>
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:16:09,648 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a463f0>
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:16:09,648 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a46e90>
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:16:09,648 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112330200> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:16:09,648 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:16:09,649 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:16:09,649 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:16:09,649 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:16:09,649 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:16:09,649 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112330560> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:16:09,649 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:16:09,649 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x112330170> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:16:09,650 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:16:09,650 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1123300e0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:16:10,041 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a46d00>
2025-09-07 23:16:10,042 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:16:10,042 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:16:10,042 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:16:10,042 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:16:10,042 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:16:10,050 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a46ee0>
2025-09-07 23:16:10,051 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:16:10,051 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:16:10,051 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:16:10,051 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:16:10,051 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:16:10,058 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a46fd0>
2025-09-07 23:16:10,059 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:16:10,059 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:16:10,059 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:16:10,060 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:16:10,060 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:16:10,062 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a46940>
2025-09-07 23:16:10,062 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:16:10,062 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:16:10,062 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:16:10,063 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:16:10,063 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:16:13,877 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'744a57c0-ffae-4c93-879f-574652701a04'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3623'), (b'req-arrive-time', b'1757258170183'), (b'resp-start-time', b'1757258173807'), (b'x-envoy-upstream-service-time', b'3619'), (b'set-cookie', b'acw_tc=744a57c0-ffae-4c93-879f-574652701a04050e0e84dc4c1b33be6985f2652f7a6f;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:16:13 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:16:13,878 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:16:13,878 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:16:13,878 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:16:13,878 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:16:13,878 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:16:13,878 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '744a57c0-ffae-4c93-879f-574652701a04', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3623', 'req-arrive-time': '1757258170183', 'resp-start-time': '1757258173807', 'x-envoy-upstream-service-time': '3619', 'set-cookie': 'acw_tc=744a57c0-ffae-4c93-879f-574652701a04050e0e84dc4c1b33be6985f2652f7a6f;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:16:13 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:16:13,878 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 744a57c0-ffae-4c93-879f-574652701a04
2025-09-07 23:16:13,879 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:16:13,879 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: John Lee, Score: 75
2025-09-07 23:16:13,879 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6215692288] AI analysis completed successfully
2025-09-07 23:16:13,879 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6215692288] Analysis result - Candidate: John Lee, Score: 75
2025-09-07 23:16:13,879 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6215692288] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231609_6215692288_resume_1.pdf
2025-09-07 23:16:13,879 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6215692288] File processing completed successfully for: resume_1.pdf
2025-09-07 23:16:13,879 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6215692288] Saving successful result to cache
2025-09-07 23:16:13,881 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 57 cached responses
2025-09-07 23:16:13,884 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 58
2025-09-07 23:16:13,884 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: John Lee - 75%
2025-09-07 23:16:13,884 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6215692288] Returning result: John Lee - 75%
2025-09-07 23:16:14,038 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'21ba0aff-7194-4b4b-a882-c5f924c089c1'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3797'), (b'req-arrive-time', b'1757258170174'), (b'resp-start-time', b'1757258173971'), (b'x-envoy-upstream-service-time', b'3386'), (b'set-cookie', b'acw_tc=21ba0aff-7194-4b4b-a882-c5f924c089c18d3745e7e27156796c1039ec2f7803e1;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:16:13 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:16:14,039 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:16:14,039 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:16:14,039 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:16:14,039 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:16:14,039 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:16:14,039 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '21ba0aff-7194-4b4b-a882-c5f924c089c1', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3797', 'req-arrive-time': '1757258170174', 'resp-start-time': '1757258173971', 'x-envoy-upstream-service-time': '3386', 'set-cookie': 'acw_tc=21ba0aff-7194-4b4b-a882-c5f924c089c18d3745e7e27156796c1039ec2f7803e1;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:16:13 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:16:14,039 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 21ba0aff-7194-4b4b-a882-c5f924c089c1
2025-09-07 23:16:14,040 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:16:14,040 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:16:14,040 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6182039552] AI analysis completed successfully
2025-09-07 23:16:14,040 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6182039552] Analysis result - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:16:14,040 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6182039552] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231609_6182039552_1.pdf
2025-09-07 23:16:14,041 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6182039552] File processing completed successfully for: 1.pdf
2025-09-07 23:16:14,041 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6182039552] Saving successful result to cache
2025-09-07 23:16:14,042 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 58 cached responses
2025-09-07 23:16:14,050 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 59
2025-09-07 23:16:14,050 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:16:14,051 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6182039552] Returning result: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:16:14,056 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/4 completed: 1.pdf - success
2025-09-07 23:16:14,269 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'e1b08f0e-75a9-4ed6-8142-e3d7c0b1c1a3'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3935'), (b'req-arrive-time', b'1757258170203'), (b'resp-start-time', b'1757258174139'), (b'x-envoy-upstream-service-time', b'3932'), (b'set-cookie', b'acw_tc=e1b08f0e-75a9-4ed6-8142-e3d7c0b1c1a38a69094b02029852f3fa742bbfe7168d;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:16:14 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:16:14,270 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:16:14,270 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:16:14,271 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:16:14,271 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:16:14,271 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:16:14,271 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'e1b08f0e-75a9-4ed6-8142-e3d7c0b1c1a3', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3935', 'req-arrive-time': '1757258170203', 'resp-start-time': '1757258174139', 'x-envoy-upstream-service-time': '3932', 'set-cookie': 'acw_tc=e1b08f0e-75a9-4ed6-8142-e3d7c0b1c1a38a69094b02029852f3fa742bbfe7168d;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:16:14 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:16:14,271 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: e1b08f0e-75a9-4ed6-8142-e3d7c0b1c1a3
2025-09-07 23:16:14,272 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:16:14,272 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Smith, Score: 85
2025-09-07 23:16:14,272 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6233092096] AI analysis completed successfully
2025-09-07 23:16:14,272 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6233092096] Analysis result - Candidate: Alice Smith, Score: 85
2025-09-07 23:16:14,272 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6233092096] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231609_6233092096_resume_2.pdf
2025-09-07 23:16:14,272 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6233092096] File processing completed successfully for: resume_2.pdf
2025-09-07 23:16:14,272 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6233092096] Saving successful result to cache
2025-09-07 23:16:14,273 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 59 cached responses
2025-09-07 23:16:14,275 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 60
2025-09-07 23:16:14,275 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Smith - 85%
2025-09-07 23:16:14,276 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6233092096] Returning result: Alice Smith - 85%
2025-09-07 23:16:15,124 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'b0d46d84-c53f-4d3d-ad09-58b061d64060'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4539'), (b'req-arrive-time', b'1757258170197'), (b'resp-start-time', b'1757258174736'), (b'x-envoy-upstream-service-time', b'4430'), (b'set-cookie', b'acw_tc=b0d46d84-c53f-4d3d-ad09-58b061d64060e85f422bfa6b648cf08b2f1d0827d221;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:16:14 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:16:15,125 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:16:15,125 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:16:15,125 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:16:15,125 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:16:15,125 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:16:15,125 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'b0d46d84-c53f-4d3d-ad09-58b061d64060', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4539', 'req-arrive-time': '1757258170197', 'resp-start-time': '1757258174736', 'x-envoy-upstream-service-time': '4430', 'set-cookie': 'acw_tc=b0d46d84-c53f-4d3d-ad09-58b061d64060e85f422bfa6b648cf08b2f1d0827d221;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:16:14 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:16:15,126 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: b0d46d84-c53f-4d3d-ad09-58b061d64060
2025-09-07 23:16:15,126 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:16:15,126 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Baisheng Song, Score: 92
2025-09-07 23:16:15,126 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6198865920] AI analysis completed successfully
2025-09-07 23:16:15,126 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6198865920] Analysis result - Candidate: Baisheng Song, Score: 92
2025-09-07 23:16:15,126 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6198865920] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231609_6198865920_Baisheng_Song_Resume_.pdf
2025-09-07 23:16:15,127 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6198865920] File processing completed successfully for: Baisheng_Song_Resume_.pdf
2025-09-07 23:16:15,127 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6198865920] Saving successful result to cache
2025-09-07 23:16:15,129 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 60 cached responses
2025-09-07 23:16:15,132 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 61
2025-09-07 23:16:15,132 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Baisheng Song - 92%
2025-09-07 23:16:15,132 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6198865920] Returning result: Baisheng Song - 92%
2025-09-07 23:16:15,132 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/4 completed: Baisheng_Song_Resume_.pdf - success
2025-09-07 23:16:15,132 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/4 completed: resume_1.pdf - success
2025-09-07 23:16:15,132 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/4 completed: resume_2.pdf - success
2025-09-07 23:16:15,133 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 4 results collected
2025-09-07 23:16:15,133 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 4, Failed: 0
2025-09-07 23:16:15,133 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:16:15,133 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Baisheng Song with 92% match
2025-09-07 23:16:15,133 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:16:15,133 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 8244 characters
2025-09-07 23:16:15,134 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 8925 bytes
2025-09-07 23:16:15,134 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:16:15] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:16:44,940 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:16:44,940 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757258153.8082206-25214-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:15:53 GMT'}
2025-09-07 23:16:44,941 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 25214 bytes
2025-09-07 23:16:44,941 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:16:44] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:16:44,947 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/.well-known/appspecific/com.chrome.devtools.json
2025-09-07 23:16:44,947 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'empty', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:16:44,948 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 404 - 207 bytes
2025-09-07 23:16:44,948 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:16:44] "[33mGET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1[0m" 404 -
2025-09-07 23:17:16,572 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:17:16,572 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:17:16,573 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:17:16,574 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:17:16] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:17:16,591 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:17:16,592 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:17:16,592 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757258153.8082206-25214-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:15:53 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:17:16,593 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757258140.9735198-56816-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:15:40 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:17:16,594 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 56816 bytes
2025-09-07 23:17:16,594 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 25118 bytes
2025-09-07 23:17:16,595 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:17:16] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 23:17:16,595 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:17:16] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-07 23:17:16,635 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:17:16,635 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:17:16,635 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:17:16,636 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:17:16,636 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:17:16] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:17:24,244 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:17:24,245 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '60769', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryVmEwLyNKGpeb6jeh', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:17:24,245 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryVmEwLyNKGpeb6jeh
2025-09-07 23:17:24,246 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 60769
2025-09-07 23:17:24,247 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['文字文稿1.pdf', 'Baisheng_Song_Resume_副本.pdf', 'resume_1.pdf', 'resume_2.pdf']
2025-09-07 23:17:24,248 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:17:24,248 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:17:24,248 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 4, Job desc length: 17, Mock: False
2025-09-07 23:17:24,248 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['文字文稿1.pdf', 'Baisheng_Song_Resume_副本.pdf', 'resume_1.pdf', 'resume_2.pdf']
2025-09-07 23:17:24,248 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 4 workers for 4 files
2025-09-07 23:17:24,248 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:17:24,248 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6165213184] Starting processing file: 文字文稿1.pdf
2025-09-07 23:17:24,249 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6165213184] File details - Name: 文字文稿1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:17:24,249 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6165213184] Validating file type...
2025-09-07 23:17:24,249 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6165213184] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231724_6165213184_1.pdf
2025-09-07 23:17:24,249 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6182039552] Starting processing file: Baisheng_Song_Resume_副本.pdf
2025-09-07 23:17:24,249 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6182039552] File details - Name: Baisheng_Song_Resume_副本.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:17:24,249 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6198865920] Starting processing file: resume_1.pdf
2025-09-07 23:17:24,249 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6198865920] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:17:24,249 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6182039552] Validating file type...
2025-09-07 23:17:24,249 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6198865920] Validating file type...
2025-09-07 23:17:24,250 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6198865920] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231724_6198865920_resume_1.pdf
2025-09-07 23:17:24,250 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6215692288] Starting processing file: resume_2.pdf
2025-09-07 23:17:24,250 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 4 tasks submitted to thread pool
2025-09-07 23:17:24,250 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6215692288] File details - Name: resume_2.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:17:24,250 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6182039552] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231724_6182039552_Baisheng_Song_Resume_.pdf
2025-09-07 23:17:24,251 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6215692288] Validating file type...
2025-09-07 23:17:24,251 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6165213184] File saved successfully
2025-09-07 23:17:24,251 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6198865920] File saved successfully
2025-09-07 23:17:24,252 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6215692288] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231724_6215692288_resume_2.pdf
2025-09-07 23:17:24,252 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6165213184] Validating PDF structure...
2025-09-07 23:17:24,252 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6198865920] Validating PDF structure...
2025-09-07 23:17:24,252 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6182039552] File saved successfully
2025-09-07 23:17:24,252 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6182039552] Validating PDF structure...
2025-09-07 23:17:24,252 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6215692288] File saved successfully
2025-09-07 23:17:24,253 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6198865920] PDF validation passed
2025-09-07 23:17:24,254 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6215692288] Validating PDF structure...
2025-09-07 23:17:24,254 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6165213184] PDF validation passed
2025-09-07 23:17:24,254 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6198865920] Extracting text from PDF...
2025-09-07 23:17:24,255 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6182039552] PDF validation passed
2025-09-07 23:17:24,255 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6215692288] PDF validation passed
2025-09-07 23:17:24,255 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6165213184] Extracting text from PDF...
2025-09-07 23:17:24,256 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6182039552] Extracting text from PDF...
2025-09-07 23:17:24,259 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6215692288] Extracting text from PDF...
2025-09-07 23:17:24,272 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6198865920] Text extracted successfully - 859 characters
2025-09-07 23:17:24,272 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6198865920] Starting AI analysis with Qwen...
2025-09-07 23:17:24,272 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6198865920] Job description length: 17 chars
2025-09-07 23:17:24,272 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6198865920] Resume text length: 859 chars
2025-09-07 23:17:24,272 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:17:24,272 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 859 chars
2025-09-07 23:17:24,275 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6215692288] Text extracted successfully - 1088 characters
2025-09-07 23:17:24,275 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6215692288] Starting AI analysis with Qwen...
2025-09-07 23:17:24,275 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6215692288] Job description length: 17 chars
2025-09-07 23:17:24,276 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6215692288] Resume text length: 1088 chars
2025-09-07 23:17:24,276 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:17:24,276 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 1088 chars
2025-09-07 23:17:24,293 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6165213184] Text extracted successfully - 388 characters
2025-09-07 23:17:24,293 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6182039552] Text extracted successfully - 3471 characters
2025-09-07 23:17:24,293 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6165213184] Starting AI analysis with Qwen...
2025-09-07 23:17:24,293 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6182039552] Starting AI analysis with Qwen...
2025-09-07 23:17:24,293 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6165213184] Job description length: 17 chars
2025-09-07 23:17:24,294 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6182039552] Job description length: 17 chars
2025-09-07 23:17:24,294 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6165213184] Resume text length: 388 chars
2025-09-07 23:17:24,294 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:17:24,294 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6182039552] Resume text length: 3471 chars
2025-09-07 23:17:24,294 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 388 chars
2025-09-07 23:17:24,294 - app.qwen_analyzer - INFO - [qwen_analyzer.py:230] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:17:24,294 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:231] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 3471 chars
2025-09-07 23:17:24,300 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1f0199a7-ea6b-42ad-b1b5-e2d729e202d7', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nJohn Lee\n Email: john.lee@gmail.com | Phone: +1-409-397-2292\nAddress: 580 Main Street, London, UK\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Stripe (2018 - 2020)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Netflix (2020 - 2021)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, UC Berkeley (2010 - 2016)\nSkills\nKubernetes, Node.js, Docker, Microservices, Java, AWS, C++, Go\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:17:24,301 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-134121d4-d881-4799-9146-50074208c710', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlice Smith\n Email: alice.smith@gmail.com | Phone: +1-915-210-5038\nAddress: 104 Main Street, Seattle, WA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSenior Software Engineer, Stripe (2016 - 2018)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSoftware Engineer, Airbnb (2018 - 2019)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nBackend Engineer, Apple (2020 - 2022)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Imperial College London (2010 - 2014)\nSkills\nSQL, C++, React, REST APIs, Docker, AWS, Node.js, Java\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:17:24,301 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:17:24,302 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:17:24,301 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:17:24,302 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:17:24,302 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a368a0>
2025-09-07 23:17:24,302 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:17:24,302 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a34500>
2025-09-07 23:17:24,302 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:17:24,303 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:17:24,303 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:17:24,303 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:17:24,303 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:17:24,303 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:17:24,303 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:17:24,303 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:17:24,303 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:17:24,303 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:17:24,303 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107c860f0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:17:24,303 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:17:24,303 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107982ba0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:17:24,309 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a6897ec9-2376-4d62-9f10-b6b6fb0f92f2', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlexanderersonAndersonilsonnen\nProjectManager-Construction\nEducation\nBachelor\'sdegreefromNationalUniversityofSingapore\nExperience\nWorkedasProjectManageratSiemens(2019-2024)\nKeyachievementsincludedeliveringprojectsontime,collaboratingwithcross-functional\nteams,\nandachievingmeasurableresults.\nSkills\nIndustry-relevantskills,strongcommunication,problem-solving,andleadership.\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:17:24,309 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:17:24,309 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-48dc0316-5ac6-4b31-97a0-c84d26561c63', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nBaisheng Song\n London, UK \x7f [email] \x7f [phone] \x7f [LinkedIn] \x7f [GitHub]\nProfessional Summary\nSenior Software Engineer with 9+ years of experience designing and building high-performance trading systems,\ndata platforms, and risk modeling frameworks across hedge funds, investment management, and financial\ntechnology. Proven ability to lead development of scalable, low-latency infrastructure and collaborate closely with\nquantitative researchers, traders, and risk teams. Strong expertise in Python, algorithms, and time series data,\nwith additional experience in C++ and distributed systems. Adept at translating complex financial strategies into\nrobust, production-grade code with rigorous risk and compliance standards.\nProfessional Experience\nOakNorth, London — Senior Software Engineer    Jan 2020 – Present\n- Led development of an impact model framework to forecast climate and credit risk, incorporating stress testing\nand scenario analysis.\n- Built data integration workflows and APIs enabling real-time ingestion of external and client-provided datasets;\noptimized pipelines for performance and reliability.\n- Designed and developed a federated API platform to unify access to distributed financial and market data\nsources.\n- Partnered with quantitative analysts and product managers to deliver scalable Python-based data processing\nsystems, ensuring quality, compliance, and resilience.\n- Championed code quality, CI/CD pipelines, and testing frameworks to ensure maintainability and robustness.\nBloomberg, London — Senior Software Engineer    Aug 2016 – Dec 2019\n- Designed and implemented FX and IRS order book systems with a distributed matching algorithm, enabling\nhigh-throughput, low-latency primary market trading.\n- Led cross-business-unit initiative to deliver a multi-asset auction platform (government bonds, repo, FX).\n- Developed a trade reporting platform handling large-scale financial transactions with strict latency and\ncompliance requirements.\n- Acted as a technical representative for the fixed-income trading group, building DevX tools and interfacing with\nresearch, operations, and product stakeholders.\n- Optimized C++ and Python codebases for performance and reliability, focusing on algorithms, memory\nefficiency, and concurrency.\nBlackRock, London — Software Engineer    Apr 2015 – Aug 2016\n- Built quantitative algorithms and frameworks to enable passive fixed-income portfolio management at scale.\n- Designed software to process time series financial data for strategy backtesting and risk analysis.\n- Partnered with portfolio managers to translate financial models into production-grade code.\nEducation\nBSc Computer Science, First Class Honours — [University Name], [Year]\nTechnical Skills\nProgramming: Python (advanced), C++ (strong), Java, Rust (familiar)\nLibraries: pandas, numpy, scipy, SQL/NoSQL\nSystems: Linux, distributed systems, APIs, CI/CD, testing frameworks\nDomains: Systematic trading, risk modeling, financial data, time series analysis\nOther: Cloud computing (AWS/GCP), version control (Git), performance optimization\nSelected Achievements\n- Designed real-time trading infrastructure at Bloomberg supporting sub-millisecond order execution.\n\n\n--- Page 2 ---\n- Built risk and scenario analysis frameworks at OakNorth, enabling regulatory-grade climate and credit risk\nforecasting.\n- Delivered multi-asset trading platforms used by institutional clients, integrating compliance and operational\nsafeguards.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:17:24,309 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:17:24,310 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:17:24,310 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:17:24,310 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a36bc0>
2025-09-07 23:17:24,310 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x117a34fa0>
2025-09-07 23:17:24,310 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:17:24,310 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:17:24,310 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:17:24,310 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:17:24,310 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:17:24,310 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:17:24,310 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:17:24,310 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:17:24,310 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:17:24,310 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:17:24,310 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:17:24,310 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107dfdc70> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:17:24,310 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:17:24,311 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107dff650> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:17:24,697 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107cff250>
2025-09-07 23:17:24,697 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:17:24,697 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:17:24,698 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:17:24,698 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:17:24,698 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:17:24,796 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107a023f0>
2025-09-07 23:17:24,796 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:17:24,797 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:17:24,797 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:17:24,797 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:17:24,797 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:17:25,053 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107a02760>
2025-09-07 23:17:25,054 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:17:25,054 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:17:25,055 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:17:25,057 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:17:25,057 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:17:25,360 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x107a02800>
2025-09-07 23:17:25,360 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:17:25,360 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:17:25,360 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:17:25,360 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:17:25,360 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:17:29,115 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'2b81d661-3921-49b1-a55b-c00becd3054f'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4088'), (b'req-arrive-time', b'1757258244954'), (b'resp-start-time', b'1757258249043'), (b'x-envoy-upstream-service-time', b'4087'), (b'set-cookie', b'acw_tc=2b81d661-3921-49b1-a55b-c00becd3054f429a9b7e3e171e4be812761599bb4c6d;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:17:28 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:17:29,116 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:17:29,116 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:17:29,116 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:17:29,116 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:17:29,116 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:17:29,116 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '2b81d661-3921-49b1-a55b-c00becd3054f', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4088', 'req-arrive-time': '1757258244954', 'resp-start-time': '1757258249043', 'x-envoy-upstream-service-time': '4087', 'set-cookie': 'acw_tc=2b81d661-3921-49b1-a55b-c00becd3054f429a9b7e3e171e4be812761599bb4c6d;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:17:28 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:17:29,116 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 2b81d661-3921-49b1-a55b-c00becd3054f
2025-09-07 23:17:29,117 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:17:29,117 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Alice Smith, Score: 85
2025-09-07 23:17:29,117 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6215692288] AI analysis completed successfully
2025-09-07 23:17:29,117 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6215692288] Analysis result - Candidate: Alice Smith, Score: 85
2025-09-07 23:17:29,117 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6215692288] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231724_6215692288_resume_2.pdf
2025-09-07 23:17:29,117 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6215692288] File processing completed successfully for: resume_2.pdf
2025-09-07 23:17:29,117 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6215692288] Saving successful result to cache
2025-09-07 23:17:29,118 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 61 cached responses
2025-09-07 23:17:29,120 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 62
2025-09-07 23:17:29,120 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Alice Smith - 85%
2025-09-07 23:17:29,120 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6215692288] Returning result: Alice Smith - 85%
2025-09-07 23:17:29,152 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ed7dd5d7-09ea-4679-a260-4893b1d1dbf3'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4128'), (b'req-arrive-time', b'1757258244955'), (b'resp-start-time', b'1757258249084'), (b'x-envoy-upstream-service-time', b'4127'), (b'set-cookie', b'acw_tc=ed7dd5d7-09ea-4679-a260-4893b1d1dbf3d92aa84280be4aeff9be2e347f3c4aa3;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:17:29 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:17:29,153 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:17:29,153 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:17:29,153 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:17:29,153 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:17:29,153 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:17:29,153 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ed7dd5d7-09ea-4679-a260-4893b1d1dbf3', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4128', 'req-arrive-time': '1757258244955', 'resp-start-time': '1757258249084', 'x-envoy-upstream-service-time': '4127', 'set-cookie': 'acw_tc=ed7dd5d7-09ea-4679-a260-4893b1d1dbf3d92aa84280be4aeff9be2e347f3c4aa3;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:17:29 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:17:29,153 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: ed7dd5d7-09ea-4679-a260-4893b1d1dbf3
2025-09-07 23:17:29,154 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:17:29,154 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: John Lee, Score: 75
2025-09-07 23:17:29,154 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6198865920] AI analysis completed successfully
2025-09-07 23:17:29,154 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6198865920] Analysis result - Candidate: John Lee, Score: 75
2025-09-07 23:17:29,154 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6198865920] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231724_6198865920_resume_1.pdf
2025-09-07 23:17:29,154 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6198865920] File processing completed successfully for: resume_1.pdf
2025-09-07 23:17:29,154 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6198865920] Saving successful result to cache
2025-09-07 23:17:29,155 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 62 cached responses
2025-09-07 23:17:29,156 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 63
2025-09-07 23:17:29,156 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: John Lee - 75%
2025-09-07 23:17:29,156 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6198865920] Returning result: John Lee - 75%
2025-09-07 23:17:29,205 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'd8f19bbd-ff41-420f-80cf-9f4671626384'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3316'), (b'req-arrive-time', b'1757258245818'), (b'resp-start-time', b'1757258249134'), (b'x-envoy-upstream-service-time', b'3240'), (b'set-cookie', b'acw_tc=d8f19bbd-ff41-420f-80cf-9f46716263844e3951eedf032583c859566aae6ecb33;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:17:29 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:17:29,205 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:17:29,205 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:17:29,206 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:17:29,206 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:17:29,206 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:17:29,206 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'd8f19bbd-ff41-420f-80cf-9f4671626384', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3316', 'req-arrive-time': '1757258245818', 'resp-start-time': '1757258249134', 'x-envoy-upstream-service-time': '3240', 'set-cookie': 'acw_tc=d8f19bbd-ff41-420f-80cf-9f46716263844e3951eedf032583c859566aae6ecb33;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:17:29 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:17:29,206 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: d8f19bbd-ff41-420f-80cf-9f4671626384
2025-09-07 23:17:29,207 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:17:29,207 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:17:29,207 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6165213184] AI analysis completed successfully
2025-09-07 23:17:29,207 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6165213184] Analysis result - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:17:29,207 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6165213184] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231724_6165213184_1.pdf
2025-09-07 23:17:29,207 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6165213184] File processing completed successfully for: 1.pdf
2025-09-07 23:17:29,208 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6165213184] Saving successful result to cache
2025-09-07 23:17:29,209 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 63 cached responses
2025-09-07 23:17:29,211 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 64
2025-09-07 23:17:29,211 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:17:29,212 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6165213184] Returning result: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:17:29,212 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/4 completed: 1.pdf - success
2025-09-07 23:17:29,841 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'30da73fb-9fdc-46dc-91af-0f03caddd63c'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4272'), (b'req-arrive-time', b'1757258245500'), (b'resp-start-time', b'1757258249772'), (b'x-envoy-upstream-service-time', b'4162'), (b'set-cookie', b'acw_tc=30da73fb-9fdc-46dc-91af-0f03caddd63c0d8ef0c8439843e500fb841e3d029a24;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:17:29 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:17:29,842 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:17:29,842 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:17:29,842 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:17:29,842 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:17:29,842 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:17:29,842 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '30da73fb-9fdc-46dc-91af-0f03caddd63c', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4272', 'req-arrive-time': '1757258245500', 'resp-start-time': '1757258249772', 'x-envoy-upstream-service-time': '4162', 'set-cookie': 'acw_tc=30da73fb-9fdc-46dc-91af-0f03caddd63c0d8ef0c8439843e500fb841e3d029a24;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:17:29 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:17:29,842 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 30da73fb-9fdc-46dc-91af-0f03caddd63c
2025-09-07 23:17:29,842 - app.qwen_analyzer - INFO - [qwen_analyzer.py:237] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:17:29,842 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:238] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Baisheng Song, Score: 92
2025-09-07 23:17:29,842 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6182039552] AI analysis completed successfully
2025-09-07 23:17:29,842 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6182039552] Analysis result - Candidate: Baisheng Song, Score: 92
2025-09-07 23:17:29,842 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6182039552] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231724_6182039552_Baisheng_Song_Resume_.pdf
2025-09-07 23:17:29,842 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6182039552] File processing completed successfully for: Baisheng_Song_Resume_.pdf
2025-09-07 23:17:29,843 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6182039552] Saving successful result to cache
2025-09-07 23:17:29,843 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 64 cached responses
2025-09-07 23:17:29,844 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 65
2025-09-07 23:17:29,844 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Baisheng Song - 92%
2025-09-07 23:17:29,845 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6182039552] Returning result: Baisheng Song - 92%
2025-09-07 23:17:29,845 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/4 completed: Baisheng_Song_Resume_.pdf - success
2025-09-07 23:17:29,845 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/4 completed: resume_1.pdf - success
2025-09-07 23:17:29,845 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 4/4 completed: resume_2.pdf - success
2025-09-07 23:17:29,845 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 4 results collected
2025-09-07 23:17:29,845 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 4, Failed: 0
2025-09-07 23:17:29,845 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:17:29,845 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Baisheng Song with 92% match
2025-09-07 23:17:29,845 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:17:29,845 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 8320 characters
2025-09-07 23:17:29,845 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 9004 bytes
2025-09-07 23:17:29,845 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:17:29] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:18:07,267 - werkzeug - INFO - [_internal.py:97] - _log() -  * Detected change in '/Users/pat/Projects/resume-screening-app/backend/app/qwen_analyzer.py', reloading
2025-09-07 23:18:07,370 - werkzeug - INFO - [_internal.py:97] - _log() -  * Restarting with stat
2025-09-07 23:18:07,795 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-07 23:18:07,801 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 580-702-148
2025-09-07 23:18:16,269 - werkzeug - INFO - [_internal.py:97] - _log() - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.31.75:8000
2025-09-07 23:18:16,269 - werkzeug - INFO - [_internal.py:97] - _log() - [33mPress CTRL+C to quit[0m
2025-09-07 23:18:16,269 - werkzeug - INFO - [_internal.py:97] - _log() -  * Restarting with stat
2025-09-07 23:18:16,589 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-07 23:18:16,593 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 580-702-148
2025-09-07 23:18:25,315 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:18:25,316 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:18:25,321 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:18:25,321 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:18:25] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:18:25,340 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:18:25,341 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:18:25,342 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757258233.9595125-25118-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:17:13 GMT'}
2025-09-07 23:18:25,342 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757258140.9735198-56816-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:15:40 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:18:25,342 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 56816 bytes
2025-09-07 23:18:25,343 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:18:25] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-07 23:18:25,343 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 25118 bytes
2025-09-07 23:18:25,345 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:18:25] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:18:25,356 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:18:25,356 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:18:25,357 - app.main - DEBUG - [main.py:490] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:18:25,357 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:18:25,357 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:18:25] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:18:32,960 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:18:32,962 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '58191', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryagDhvc6kl0dZvsHj', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:18:32,962 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryagDhvc6kl0dZvsHj
2025-09-07 23:18:32,962 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 58191
2025-09-07 23:18:32,964 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['文字文稿1.pdf', 'Baisheng_Song_Resume_副本.pdf', 'resume_1.pdf']
2025-09-07 23:18:32,964 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:18:32,964 - app.main - INFO - [main.py:350] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:18:32,964 - app.main - INFO - [main.py:366] - upload_resume() - 📊 Request details - Files: 3, Job desc length: 17, Mock: False
2025-09-07 23:18:32,964 - app.main - DEBUG - [main.py:367] - upload_resume() - 📎 File names: ['文字文稿1.pdf', 'Baisheng_Song_Resume_副本.pdf', 'resume_1.pdf']
2025-09-07 23:18:32,964 - app.main - INFO - [main.py:379] - upload_resume() - 🔄 Starting concurrent processing with 3 workers for 3 files
2025-09-07 23:18:32,964 - app.main - DEBUG - [main.py:383] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:18:32,965 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6207090688] Starting processing file: 文字文稿1.pdf
2025-09-07 23:18:32,965 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6223917056] Starting processing file: Baisheng_Song_Resume_副本.pdf
2025-09-07 23:18:32,965 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6207090688] File details - Name: 文字文稿1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:18:32,965 - app.main - INFO - [main.py:192] - process_single_file() - 🚀 [Thread-6240743424] Starting processing file: resume_1.pdf
2025-09-07 23:18:32,965 - app.main - INFO - [main.py:389] - upload_resume() - ✅ All 3 tasks submitted to thread pool
2025-09-07 23:18:32,965 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6223917056] File details - Name: Baisheng_Song_Resume_副本.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:18:32,965 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6207090688] Validating file type...
2025-09-07 23:18:32,965 - app.main - DEBUG - [main.py:195] - process_single_file() - 📋 [Thread-6240743424] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:18:32,965 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6223917056] Validating file type...
2025-09-07 23:18:32,965 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6207090688] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231832_6207090688_1.pdf
2025-09-07 23:18:32,965 - app.main - DEBUG - [main.py:198] - process_single_file() - 🔍 [Thread-6240743424] Validating file type...
2025-09-07 23:18:32,966 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6223917056] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231832_6223917056_Baisheng_Song_Resume_.pdf
2025-09-07 23:18:32,966 - app.main - DEBUG - [main.py:210] - process_single_file() - 💾 [Thread-6240743424] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231832_6240743424_resume_1.pdf
2025-09-07 23:18:32,966 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6223917056] File saved successfully
2025-09-07 23:18:32,966 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6240743424] File saved successfully
2025-09-07 23:18:32,966 - app.main - INFO - [main.py:212] - process_single_file() - ✅ [Thread-6207090688] File saved successfully
2025-09-07 23:18:32,966 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6223917056] Validating PDF structure...
2025-09-07 23:18:32,966 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6240743424] Validating PDF structure...
2025-09-07 23:18:32,966 - app.main - DEBUG - [main.py:215] - process_single_file() - 🔍 [Thread-6207090688] Validating PDF structure...
2025-09-07 23:18:32,968 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6240743424] PDF validation passed
2025-09-07 23:18:32,968 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6240743424] Extracting text from PDF...
2025-09-07 23:18:32,969 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6207090688] PDF validation passed
2025-09-07 23:18:32,983 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6207090688] Extracting text from PDF...
2025-09-07 23:18:32,987 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6240743424] Text extracted successfully - 859 characters
2025-09-07 23:18:32,987 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6223917056] PDF validation passed
2025-09-07 23:18:32,987 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6240743424] Starting AI analysis with Qwen...
2025-09-07 23:18:32,988 - app.main - DEBUG - [main.py:228] - process_single_file() - 📄 [Thread-6223917056] Extracting text from PDF...
2025-09-07 23:18:32,988 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6240743424] Job description length: 17 chars
2025-09-07 23:18:32,988 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6240743424] Resume text length: 859 chars
2025-09-07 23:18:32,989 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:18:32,989 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 859 chars
2025-09-07 23:18:32,997 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6223917056] Text extracted successfully - 3471 characters
2025-09-07 23:18:32,998 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6223917056] Starting AI analysis with Qwen...
2025-09-07 23:18:33,005 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6223917056] Job description length: 17 chars
2025-09-07 23:18:33,005 - app.main - INFO - [main.py:243] - process_single_file() - ✅ [Thread-6207090688] Text extracted successfully - 388 characters
2025-09-07 23:18:33,005 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6223917056] Resume text length: 3471 chars
2025-09-07 23:18:33,005 - app.main - INFO - [main.py:248] - process_single_file() - 🤖 [Thread-6207090688] Starting AI analysis with Qwen...
2025-09-07 23:18:33,005 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:18:33,005 - app.main - DEBUG - [main.py:249] - process_single_file() - 📊 [Thread-6207090688] Job description length: 17 chars
2025-09-07 23:18:33,005 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 3471 chars
2025-09-07 23:18:33,005 - app.main - DEBUG - [main.py:250] - process_single_file() - 📊 [Thread-6207090688] Resume text length: 388 chars
2025-09-07 23:18:33,006 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:18:33,006 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 388 chars
2025-09-07 23:18:33,124 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-da0c5392-4b48-4b15-9010-a78aa2d1f8eb', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nBaisheng Song\n London, UK \x7f [email] \x7f [phone] \x7f [LinkedIn] \x7f [GitHub]\nProfessional Summary\nSenior Software Engineer with 9+ years of experience designing and building high-performance trading systems,\ndata platforms, and risk modeling frameworks across hedge funds, investment management, and financial\ntechnology. Proven ability to lead development of scalable, low-latency infrastructure and collaborate closely with\nquantitative researchers, traders, and risk teams. Strong expertise in Python, algorithms, and time series data,\nwith additional experience in C++ and distributed systems. Adept at translating complex financial strategies into\nrobust, production-grade code with rigorous risk and compliance standards.\nProfessional Experience\nOakNorth, London — Senior Software Engineer    Jan 2020 – Present\n- Led development of an impact model framework to forecast climate and credit risk, incorporating stress testing\nand scenario analysis.\n- Built data integration workflows and APIs enabling real-time ingestion of external and client-provided datasets;\noptimized pipelines for performance and reliability.\n- Designed and developed a federated API platform to unify access to distributed financial and market data\nsources.\n- Partnered with quantitative analysts and product managers to deliver scalable Python-based data processing\nsystems, ensuring quality, compliance, and resilience.\n- Championed code quality, CI/CD pipelines, and testing frameworks to ensure maintainability and robustness.\nBloomberg, London — Senior Software Engineer    Aug 2016 – Dec 2019\n- Designed and implemented FX and IRS order book systems with a distributed matching algorithm, enabling\nhigh-throughput, low-latency primary market trading.\n- Led cross-business-unit initiative to deliver a multi-asset auction platform (government bonds, repo, FX).\n- Developed a trade reporting platform handling large-scale financial transactions with strict latency and\ncompliance requirements.\n- Acted as a technical representative for the fixed-income trading group, building DevX tools and interfacing with\nresearch, operations, and product stakeholders.\n- Optimized C++ and Python codebases for performance and reliability, focusing on algorithms, memory\nefficiency, and concurrency.\nBlackRock, London — Software Engineer    Apr 2015 – Aug 2016\n- Built quantitative algorithms and frameworks to enable passive fixed-income portfolio management at scale.\n- Designed software to process time series financial data for strategy backtesting and risk analysis.\n- Partnered with portfolio managers to translate financial models into production-grade code.\nEducation\nBSc Computer Science, First Class Honours — [University Name], [Year]\nTechnical Skills\nProgramming: Python (advanced), C++ (strong), Java, Rust (familiar)\nLibraries: pandas, numpy, scipy, SQL/NoSQL\nSystems: Linux, distributed systems, APIs, CI/CD, testing frameworks\nDomains: Systematic trading, risk modeling, financial data, time series analysis\nOther: Cloud computing (AWS/GCP), version control (Git), performance optimization\nSelected Achievements\n- Designed real-time trading infrastructure at Bloomberg supporting sub-millisecond order execution.\n\n\n--- Page 2 ---\n- Built risk and scenario analysis frameworks at OakNorth, enabling regulatory-grade climate and credit risk\nforecasting.\n- Delivered multi-asset trading platforms used by institutional clients, integrating compliance and operational\nsafeguards.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:18:33,124 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1ddc88ae-226f-4c52-89f3-185d171f1fda', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nJohn Lee\n Email: john.lee@gmail.com | Phone: +1-409-397-2292\nAddress: 580 Main Street, London, UK\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Stripe (2018 - 2020)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Netflix (2020 - 2021)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, UC Berkeley (2010 - 2016)\nSkills\nKubernetes, Node.js, Docker, Microservices, Java, AWS, C++, Go\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:18:33,124 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-90fb8e3b-8ea3-4a95-9bf2-599fbac5ca8d', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlexanderersonAndersonilsonnen\nProjectManager-Construction\nEducation\nBachelor\'sdegreefromNationalUniversityofSingapore\nExperience\nWorkedasProjectManageratSiemens(2019-2024)\nKeyachievementsincludedeliveringprojectsontime,collaboratingwithcross-functional\nteams,\nandachievingmeasurableresults.\nSkills\nIndustry-relevantskills,strongcommunication,problem-solving,andleadership.\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:18:33,141 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:18:33,141 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:18:33,142 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:18:33,142 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:18:33,142 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:18:33,143 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:18:33,143 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109a18830>
2025-09-07 23:18:33,143 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109a1d950>
2025-09-07 23:18:33,143 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109a1da90>
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:18:33,143 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:18:33,144 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:18:33,144 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:18:33,144 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:18:33,144 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:18:33,144 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x104335ac0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:18:33,144 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x104335a30> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:18:33,144 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x104335b50> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:18:33,668 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1044aac40>
2025-09-07 23:18:33,669 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:18:33,669 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:18:33,670 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:18:33,670 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:18:33,670 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:18:33,765 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1044aaea0>
2025-09-07 23:18:33,765 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:18:33,765 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:18:33,765 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:18:33,766 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:18:33,766 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:18:36,917 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1043f7770>
2025-09-07 23:18:36,917 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:18:36,917 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:18:36,918 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:18:36,918 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:18:36,918 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:18:38,880 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'c1145369-48e9-499d-8ddd-56150f6221eb'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3699'), (b'req-arrive-time', b'1757258314979'), (b'resp-start-time', b'1757258318679'), (b'x-envoy-upstream-service-time', b'3555'), (b'set-cookie', b'acw_tc=c1145369-48e9-499d-8ddd-56150f6221ebc3e17270d1d01e67cc74abd51ef9ee50;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:18:38 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:18:38,881 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:18:38,882 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:18:38,882 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:18:38,882 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:18:38,882 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:18:38,882 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'c1145369-48e9-499d-8ddd-56150f6221eb', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3699', 'req-arrive-time': '1757258314979', 'resp-start-time': '1757258318679', 'x-envoy-upstream-service-time': '3555', 'set-cookie': 'acw_tc=c1145369-48e9-499d-8ddd-56150f6221ebc3e17270d1d01e67cc74abd51ef9ee50;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:18:38 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:18:38,882 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: c1145369-48e9-499d-8ddd-56150f6221eb
2025-09-07 23:18:38,897 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:18:38,898 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:18:38,898 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6207090688] AI analysis completed successfully
2025-09-07 23:18:38,898 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6207090688] Analysis result - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:18:38,898 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6207090688] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231832_6207090688_1.pdf
2025-09-07 23:18:38,899 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6207090688] File processing completed successfully for: 1.pdf
2025-09-07 23:18:38,899 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6207090688] Saving successful result to cache
2025-09-07 23:18:38,901 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 65 cached responses
2025-09-07 23:18:38,904 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 66
2025-09-07 23:18:38,904 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:18:38,905 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6207090688] Returning result: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:18:38,905 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 1/3 completed: 1.pdf - success
2025-09-07 23:18:39,539 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'b0e4e9bc-9135-4b36-8a9b-a7c3b7004935'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3756'), (b'req-arrive-time', b'1757258315713'), (b'resp-start-time', b'1757258319469'), (b'x-envoy-upstream-service-time', b'3754'), (b'set-cookie', b'acw_tc=b0e4e9bc-9135-4b36-8a9b-a7c3b7004935949921072fb3fa4b094191a49e03b82d;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:18:39 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:18:39,539 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:18:39,539 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:18:39,540 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:18:39,540 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:18:39,540 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:18:39,540 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'b0e4e9bc-9135-4b36-8a9b-a7c3b7004935', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3756', 'req-arrive-time': '1757258315713', 'resp-start-time': '1757258319469', 'x-envoy-upstream-service-time': '3754', 'set-cookie': 'acw_tc=b0e4e9bc-9135-4b36-8a9b-a7c3b7004935949921072fb3fa4b094191a49e03b82d;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:18:39 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:18:39,540 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: b0e4e9bc-9135-4b36-8a9b-a7c3b7004935
2025-09-07 23:18:39,540 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:18:39,540 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: John Lee, Score: 75
2025-09-07 23:18:39,540 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6240743424] AI analysis completed successfully
2025-09-07 23:18:39,540 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6240743424] Analysis result - Candidate: John Lee, Score: 75
2025-09-07 23:18:39,541 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6240743424] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231832_6240743424_resume_1.pdf
2025-09-07 23:18:39,541 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6240743424] File processing completed successfully for: resume_1.pdf
2025-09-07 23:18:39,541 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6240743424] Saving successful result to cache
2025-09-07 23:18:39,542 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 66 cached responses
2025-09-07 23:18:39,544 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 67
2025-09-07 23:18:39,544 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: John Lee - 75%
2025-09-07 23:18:39,544 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6240743424] Returning result: John Lee - 75%
2025-09-07 23:18:43,854 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'cbf9a270-f47d-40ad-8778-75698ebf1dcd'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'6451'), (b'req-arrive-time', b'1757258317325'), (b'resp-start-time', b'1757258323776'), (b'x-envoy-upstream-service-time', b'5053'), (b'set-cookie', b'acw_tc=cbf9a270-f47d-40ad-8778-75698ebf1dcdb3af9ff7c598c6f1e7b6fb69b5bf19d7;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:18:43 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:18:43,854 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:18:43,855 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:18:43,855 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:18:43,855 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:18:43,855 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:18:43,856 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'cbf9a270-f47d-40ad-8778-75698ebf1dcd', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '6451', 'req-arrive-time': '1757258317325', 'resp-start-time': '1757258323776', 'x-envoy-upstream-service-time': '5053', 'set-cookie': 'acw_tc=cbf9a270-f47d-40ad-8778-75698ebf1dcdb3af9ff7c598c6f1e7b6fb69b5bf19d7;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:18:43 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:18:43,856 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: cbf9a270-f47d-40ad-8778-75698ebf1dcd
2025-09-07 23:18:43,856 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:18:43,856 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Baisheng Song, Score: 88
2025-09-07 23:18:43,857 - app.main - INFO - [main.py:254] - process_single_file() - ✅ [Thread-6223917056] AI analysis completed successfully
2025-09-07 23:18:43,857 - app.main - DEBUG - [main.py:255] - process_single_file() - 📊 [Thread-6223917056] Analysis result - Candidate: Baisheng Song, Score: 88
2025-09-07 23:18:43,857 - app.main - DEBUG - [main.py:298] - process_single_file() - 🗑️ [Thread-6223917056] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_231832_6223917056_Baisheng_Song_Resume_.pdf
2025-09-07 23:18:43,857 - app.main - INFO - [main.py:300] - process_single_file() - ✅ [Thread-6223917056] File processing completed successfully for: Baisheng_Song_Resume_.pdf
2025-09-07 23:18:43,857 - app.main - DEBUG - [main.py:320] - process_single_file() - 💾 [Thread-6223917056] Saving successful result to cache
2025-09-07 23:18:43,858 - app.main - DEBUG - [main.py:95] - load_cached_responses() - 📂 Loaded 67 cached responses
2025-09-07 23:18:43,862 - app.main - INFO - [main.py:137] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 68
2025-09-07 23:18:43,862 - app.main - DEBUG - [main.py:138] - save_response_to_cache() - 💾 Cached entry: Baisheng Song - 88%
2025-09-07 23:18:43,862 - app.main - DEBUG - [main.py:325] - process_single_file() - 📊 [Thread-6223917056] Returning result: Baisheng Song - 88%
2025-09-07 23:18:43,863 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 2/3 completed: Baisheng_Song_Resume_.pdf - success
2025-09-07 23:18:43,863 - app.main - INFO - [main.py:399] - upload_resume() - ✅ Task 3/3 completed: resume_1.pdf - success
2025-09-07 23:18:43,863 - app.main - INFO - [main.py:413] - upload_resume() - 🏁 All concurrent processing completed - 3 results collected
2025-09-07 23:18:43,863 - app.main - INFO - [main.py:419] - upload_resume() - 📊 Processing summary - Success: 3, Failed: 0
2025-09-07 23:18:43,864 - app.main - DEBUG - [main.py:430] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:18:43,864 - app.main - INFO - [main.py:435] - upload_resume() - 🏆 Top candidate: Baisheng Song with 88% match
2025-09-07 23:18:43,864 - app.main - INFO - [main.py:472] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:18:43,864 - app.main - DEBUG - [main.py:473] - upload_resume() - 📊 Response size: 6804 characters
2025-09-07 23:18:43,865 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 7307 bytes
2025-09-07 23:18:43,865 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:18:43] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-07 23:25:33,175 - werkzeug - INFO - [_internal.py:97] - _log() - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.31.75:8000
2025-09-07 23:25:33,176 - werkzeug - INFO - [_internal.py:97] - _log() - [33mPress CTRL+C to quit[0m
2025-09-07 23:25:33,177 - werkzeug - INFO - [_internal.py:97] - _log() -  * Restarting with stat
2025-09-07 23:25:33,451 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-07 23:25:33,457 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 580-702-148
2025-09-07 23:25:34,056 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-07 23:25:34,057 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Purpose': 'prefetch;prerender', 'Purpose': 'prefetch', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-07 23:25:34,060 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-07 23:25:34,060 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:25:34] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-07 23:25:34,067 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-07 23:25:34,067 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Purpose': 'prefetch;prerender', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Purpose': 'prefetch', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757258233.9595125-25118-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:17:13 GMT'}
2025-09-07 23:25:34,067 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 25118 bytes
2025-09-07 23:25:34,068 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:25:34] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-07 23:25:34,107 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-07 23:25:34,107 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Purpose': 'prefetch;prerender', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Purpose': 'prefetch', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757258140.9735198-56816-1898780101"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:15:40 GMT'}
2025-09-07 23:25:34,107 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 58081 bytes
2025-09-07 23:25:34,107 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:25:34] "GET /static/script.js HTTP/1.1" 200 -
2025-09-07 23:25:34,113 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-07 23:25:34,113 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Purpose': 'prefetch;prerender', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Purpose': 'prefetch', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:25:34,113 - app.main - DEBUG - [main.py:503] - health_check() - 🏥 Health check endpoint called
2025-09-07 23:25:34,113 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-07 23:25:34,113 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:25:34] "GET /api/health HTTP/1.1" 200 -
2025-09-07 23:25:41,467 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-07 23:25:41,468 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '58191', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryFNUR5c1jS3KA6fIW', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-07 23:25:41,468 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryFNUR5c1jS3KA6fIW
2025-09-07 23:25:41,468 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 58191
2025-09-07 23:25:41,470 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['文字文稿1.pdf', 'Baisheng_Song_Resume_副本.pdf', 'resume_1.pdf']
2025-09-07 23:25:41,470 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-07 23:25:41,470 - app.main - INFO - [main.py:363] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-07 23:25:41,470 - app.main - INFO - [main.py:379] - upload_resume() - 📊 Request details - Files: 3, Job desc length: 17, Mock: False
2025-09-07 23:25:41,470 - app.main - DEBUG - [main.py:380] - upload_resume() - 📎 File names: ['文字文稿1.pdf', 'Baisheng_Song_Resume_副本.pdf', 'resume_1.pdf']
2025-09-07 23:25:41,470 - app.main - INFO - [main.py:392] - upload_resume() - 🔄 Starting concurrent processing with 3 workers for 3 files
2025-09-07 23:25:41,470 - app.main - DEBUG - [main.py:396] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-07 23:25:41,471 - app.main - INFO - [main.py:205] - process_single_file() - 🚀 [Thread-6178091008] Starting processing file: 文字文稿1.pdf
2025-09-07 23:25:41,471 - app.main - INFO - [main.py:205] - process_single_file() - 🚀 [Thread-6194917376] Starting processing file: Baisheng_Song_Resume_副本.pdf
2025-09-07 23:25:41,471 - app.main - DEBUG - [main.py:208] - process_single_file() - 📋 [Thread-6178091008] File details - Name: 文字文稿1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:25:41,471 - app.main - INFO - [main.py:205] - process_single_file() - 🚀 [Thread-6211743744] Starting processing file: resume_1.pdf
2025-09-07 23:25:41,471 - app.main - INFO - [main.py:402] - upload_resume() - ✅ All 3 tasks submitted to thread pool
2025-09-07 23:25:41,471 - app.main - DEBUG - [main.py:208] - process_single_file() - 📋 [Thread-6194917376] File details - Name: Baisheng_Song_Resume_副本.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:25:41,471 - app.main - DEBUG - [main.py:211] - process_single_file() - 🔍 [Thread-6178091008] Validating file type...
2025-09-07 23:25:41,471 - app.main - DEBUG - [main.py:208] - process_single_file() - 📋 [Thread-6211743744] File details - Name: resume_1.pdf, Content-Type: application/pdf, Size: 0
2025-09-07 23:25:41,473 - app.main - DEBUG - [main.py:211] - process_single_file() - 🔍 [Thread-6211743744] Validating file type...
2025-09-07 23:25:41,471 - app.main - DEBUG - [main.py:211] - process_single_file() - 🔍 [Thread-6194917376] Validating file type...
2025-09-07 23:25:41,475 - app.main - DEBUG - [main.py:223] - process_single_file() - 💾 [Thread-6194917376] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_232541_6194917376_Baisheng_Song_Resume_.pdf
2025-09-07 23:25:41,472 - app.main - DEBUG - [main.py:223] - process_single_file() - 💾 [Thread-6178091008] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_232541_6178091008_1.pdf
2025-09-07 23:25:41,475 - app.main - DEBUG - [main.py:223] - process_single_file() - 💾 [Thread-6211743744] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_232541_6211743744_resume_1.pdf
2025-09-07 23:25:41,478 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6178091008] File saved successfully
2025-09-07 23:25:41,479 - app.main - DEBUG - [main.py:228] - process_single_file() - 🔍 [Thread-6178091008] Validating PDF structure...
2025-09-07 23:25:41,482 - app.main - INFO - [main.py:238] - process_single_file() - ✅ [Thread-6178091008] PDF validation passed
2025-09-07 23:25:41,482 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6211743744] File saved successfully
2025-09-07 23:25:41,483 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6194917376] File saved successfully
2025-09-07 23:25:41,483 - app.main - DEBUG - [main.py:241] - process_single_file() - 📄 [Thread-6178091008] Extracting text from PDF...
2025-09-07 23:25:41,483 - app.main - DEBUG - [main.py:228] - process_single_file() - 🔍 [Thread-6211743744] Validating PDF structure...
2025-09-07 23:25:41,483 - app.main - DEBUG - [main.py:228] - process_single_file() - 🔍 [Thread-6194917376] Validating PDF structure...
2025-09-07 23:25:41,486 - app.main - INFO - [main.py:238] - process_single_file() - ✅ [Thread-6211743744] PDF validation passed
2025-09-07 23:25:41,486 - app.main - INFO - [main.py:238] - process_single_file() - ✅ [Thread-6194917376] PDF validation passed
2025-09-07 23:25:41,487 - app.main - DEBUG - [main.py:241] - process_single_file() - 📄 [Thread-6211743744] Extracting text from PDF...
2025-09-07 23:25:41,487 - app.main - DEBUG - [main.py:241] - process_single_file() - 📄 [Thread-6194917376] Extracting text from PDF...
2025-09-07 23:25:41,507 - app.main - INFO - [main.py:256] - process_single_file() - ✅ [Thread-6194917376] Text extracted successfully - 3471 characters
2025-09-07 23:25:41,509 - app.main - INFO - [main.py:256] - process_single_file() - ✅ [Thread-6211743744] Text extracted successfully - 859 characters
2025-09-07 23:25:41,509 - app.main - INFO - [main.py:261] - process_single_file() - 🤖 [Thread-6194917376] Starting AI analysis with Qwen...
2025-09-07 23:25:41,510 - app.main - INFO - [main.py:261] - process_single_file() - 🤖 [Thread-6211743744] Starting AI analysis with Qwen...
2025-09-07 23:25:41,510 - app.main - DEBUG - [main.py:262] - process_single_file() - 📊 [Thread-6194917376] Job description length: 17 chars
2025-09-07 23:25:41,510 - app.main - DEBUG - [main.py:262] - process_single_file() - 📊 [Thread-6211743744] Job description length: 17 chars
2025-09-07 23:25:41,510 - app.main - DEBUG - [main.py:263] - process_single_file() - 📊 [Thread-6194917376] Resume text length: 3471 chars
2025-09-07 23:25:41,510 - app.main - DEBUG - [main.py:263] - process_single_file() - 📊 [Thread-6211743744] Resume text length: 859 chars
2025-09-07 23:25:41,510 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:25:41,516 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:25:41,517 - app.main - INFO - [main.py:256] - process_single_file() - ✅ [Thread-6178091008] Text extracted successfully - 388 characters
2025-09-07 23:25:41,517 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 3471 chars
2025-09-07 23:25:41,517 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 859 chars
2025-09-07 23:25:41,517 - app.main - INFO - [main.py:261] - process_single_file() - 🤖 [Thread-6178091008] Starting AI analysis with Qwen...
2025-09-07 23:25:41,518 - app.main - DEBUG - [main.py:262] - process_single_file() - 📊 [Thread-6178091008] Job description length: 17 chars
2025-09-07 23:25:41,518 - app.main - DEBUG - [main.py:263] - process_single_file() - 📊 [Thread-6178091008] Resume text length: 388 chars
2025-09-07 23:25:41,518 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-07 23:25:41,518 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 388 chars
2025-09-07 23:25:41,639 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f55e5176-22e5-4628-b9e9-1538a6ba72ad', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nJohn Lee\n Email: john.lee@gmail.com | Phone: +1-409-397-2292\nAddress: 580 Main Street, London, UK\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Stripe (2018 - 2020)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nSenior Software Engineer, Netflix (2020 - 2021)\nDeveloped and maintained data pipelines. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, UC Berkeley (2010 - 2016)\nSkills\nKubernetes, Node.js, Docker, Microservices, Java, AWS, C++, Go\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:25:41,639 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9a366aed-8b06-4ea3-92fa-e25e1059f5e8', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nBaisheng Song\n London, UK \x7f [email] \x7f [phone] \x7f [LinkedIn] \x7f [GitHub]\nProfessional Summary\nSenior Software Engineer with 9+ years of experience designing and building high-performance trading systems,\ndata platforms, and risk modeling frameworks across hedge funds, investment management, and financial\ntechnology. Proven ability to lead development of scalable, low-latency infrastructure and collaborate closely with\nquantitative researchers, traders, and risk teams. Strong expertise in Python, algorithms, and time series data,\nwith additional experience in C++ and distributed systems. Adept at translating complex financial strategies into\nrobust, production-grade code with rigorous risk and compliance standards.\nProfessional Experience\nOakNorth, London — Senior Software Engineer    Jan 2020 – Present\n- Led development of an impact model framework to forecast climate and credit risk, incorporating stress testing\nand scenario analysis.\n- Built data integration workflows and APIs enabling real-time ingestion of external and client-provided datasets;\noptimized pipelines for performance and reliability.\n- Designed and developed a federated API platform to unify access to distributed financial and market data\nsources.\n- Partnered with quantitative analysts and product managers to deliver scalable Python-based data processing\nsystems, ensuring quality, compliance, and resilience.\n- Championed code quality, CI/CD pipelines, and testing frameworks to ensure maintainability and robustness.\nBloomberg, London — Senior Software Engineer    Aug 2016 – Dec 2019\n- Designed and implemented FX and IRS order book systems with a distributed matching algorithm, enabling\nhigh-throughput, low-latency primary market trading.\n- Led cross-business-unit initiative to deliver a multi-asset auction platform (government bonds, repo, FX).\n- Developed a trade reporting platform handling large-scale financial transactions with strict latency and\ncompliance requirements.\n- Acted as a technical representative for the fixed-income trading group, building DevX tools and interfacing with\nresearch, operations, and product stakeholders.\n- Optimized C++ and Python codebases for performance and reliability, focusing on algorithms, memory\nefficiency, and concurrency.\nBlackRock, London — Software Engineer    Apr 2015 – Aug 2016\n- Built quantitative algorithms and frameworks to enable passive fixed-income portfolio management at scale.\n- Designed software to process time series financial data for strategy backtesting and risk analysis.\n- Partnered with portfolio managers to translate financial models into production-grade code.\nEducation\nBSc Computer Science, First Class Honours — [University Name], [Year]\nTechnical Skills\nProgramming: Python (advanced), C++ (strong), Java, Rust (familiar)\nLibraries: pandas, numpy, scipy, SQL/NoSQL\nSystems: Linux, distributed systems, APIs, CI/CD, testing frameworks\nDomains: Systematic trading, risk modeling, financial data, time series analysis\nOther: Cloud computing (AWS/GCP), version control (Git), performance optimization\nSelected Achievements\n- Designed real-time trading infrastructure at Bloomberg supporting sub-millisecond order execution.\n\n\n--- Page 2 ---\n- Built risk and scenario analysis frameworks at OakNorth, enabling regulatory-grade climate and credit risk\nforecasting.\n- Delivered multi-asset trading platforms used by institutional clients, integrating compliance and operational\nsafeguards.\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:25:41,639 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f02d881d-b822-4890-bffa-c8223dd236c8', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlexanderersonAndersonilsonnen\nProjectManager-Construction\nEducation\nBachelor\'sdegreefromNationalUniversityofSingapore\nExperience\nWorkedasProjectManageratSiemens(2019-2024)\nKeyachievementsincludedeliveringprojectsontime,collaboratingwithcross-functional\nteams,\nandachievingmeasurableresults.\nSkills\nIndustry-relevantskills,strongcommunication,problem-solving,andleadership.\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-07 23:25:41,655 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:25:41,655 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:25:41,656 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-07 23:25:41,656 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:25:41,656 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:25:41,656 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-07 23:25:41,656 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x116a1c830>
2025-09-07 23:25:41,656 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x116a11950>
2025-09-07 23:25:41,657 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x116a11a90>
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:25:41,657 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:25:41,658 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-07 23:25:41,658 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107f816d0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:25:41,658 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107f81760> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:25:41,658 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x107f817f0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-07 23:25:42,087 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1113ea8b0>
2025-09-07 23:25:42,087 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:25:42,088 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:25:42,088 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:25:42,088 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:25:42,088 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:25:43,385 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1113eafd0>
2025-09-07 23:25:43,386 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:25:43,386 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:25:43,386 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:25:43,386 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:25:43,386 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:25:43,717 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1116ebad0>
2025-09-07 23:25:43,718 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-07 23:25:43,718 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-07 23:25:43,718 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-07 23:25:43,719 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-07 23:25:43,720 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-07 23:25:46,114 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ca139ac7-32da-4f91-a2f3-60d4e86748c1'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3584'), (b'req-arrive-time', b'1757258742225'), (b'resp-start-time', b'1757258745809'), (b'x-envoy-upstream-service-time', b'3582'), (b'set-cookie', b'acw_tc=ca139ac7-32da-4f91-a2f3-60d4e86748c1c57c1f15db1c96d43b773ca500f61cc2;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:25:45 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:25:46,115 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:25:46,115 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:25:46,116 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:25:46,116 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:25:46,116 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:25:46,116 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ca139ac7-32da-4f91-a2f3-60d4e86748c1', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3584', 'req-arrive-time': '1757258742225', 'resp-start-time': '1757258745809', 'x-envoy-upstream-service-time': '3582', 'set-cookie': 'acw_tc=ca139ac7-32da-4f91-a2f3-60d4e86748c1c57c1f15db1c96d43b773ca500f61cc2;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:25:45 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:25:46,116 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: ca139ac7-32da-4f91-a2f3-60d4e86748c1
2025-09-07 23:25:46,131 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:25:46,132 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: John Lee, Score: 75
2025-09-07 23:25:46,132 - app.main - INFO - [main.py:267] - process_single_file() - ✅ [Thread-6211743744] AI analysis completed successfully
2025-09-07 23:25:46,132 - app.main - DEBUG - [main.py:268] - process_single_file() - 📊 [Thread-6211743744] Analysis result - Candidate: John Lee, Score: 75
2025-09-07 23:25:46,132 - app.main - DEBUG - [main.py:311] - process_single_file() - 🗑️ [Thread-6211743744] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_232541_6211743744_resume_1.pdf
2025-09-07 23:25:46,132 - app.main - INFO - [main.py:313] - process_single_file() - ✅ [Thread-6211743744] File processing completed successfully for: resume_1.pdf
2025-09-07 23:25:46,132 - app.main - DEBUG - [main.py:333] - process_single_file() - 💾 [Thread-6211743744] Saving successful result to cache
2025-09-07 23:25:46,134 - app.main - DEBUG - [main.py:108] - load_cached_responses() - 📂 Loaded 68 cached responses
2025-09-07 23:25:46,137 - app.main - INFO - [main.py:150] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 69
2025-09-07 23:25:46,137 - app.main - DEBUG - [main.py:151] - save_response_to_cache() - 💾 Cached entry: John Lee - 75%
2025-09-07 23:25:46,137 - app.main - DEBUG - [main.py:338] - process_single_file() - 📊 [Thread-6211743744] Returning result: John Lee - 75%
2025-09-07 23:25:48,159 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ef729f56-ad0b-46e4-abba-6e7bda45912b'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4255'), (b'req-arrive-time', b'1757258743836'), (b'resp-start-time', b'1757258748092'), (b'x-envoy-upstream-service-time', b'3809'), (b'set-cookie', b'acw_tc=ef729f56-ad0b-46e4-abba-6e7bda45912b496beb5420eb2de8886833dda6844ceb;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:25:47 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:25:48,160 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:25:48,160 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:25:48,161 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:25:48,161 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:25:48,161 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:25:48,161 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ef729f56-ad0b-46e4-abba-6e7bda45912b', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4255', 'req-arrive-time': '1757258743836', 'resp-start-time': '1757258748092', 'x-envoy-upstream-service-time': '3809', 'set-cookie': 'acw_tc=ef729f56-ad0b-46e4-abba-6e7bda45912b496beb5420eb2de8886833dda6844ceb;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:25:47 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:25:48,161 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: ef729f56-ad0b-46e4-abba-6e7bda45912b
2025-09-07 23:25:48,162 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:25:48,162 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Baisheng Song, Score: 92
2025-09-07 23:25:48,162 - app.main - INFO - [main.py:267] - process_single_file() - ✅ [Thread-6194917376] AI analysis completed successfully
2025-09-07 23:25:48,162 - app.main - DEBUG - [main.py:268] - process_single_file() - 📊 [Thread-6194917376] Analysis result - Candidate: Baisheng Song, Score: 92
2025-09-07 23:25:48,162 - app.main - DEBUG - [main.py:311] - process_single_file() - 🗑️ [Thread-6194917376] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_232541_6194917376_Baisheng_Song_Resume_.pdf
2025-09-07 23:25:48,162 - app.main - INFO - [main.py:313] - process_single_file() - ✅ [Thread-6194917376] File processing completed successfully for: Baisheng_Song_Resume_.pdf
2025-09-07 23:25:48,163 - app.main - DEBUG - [main.py:333] - process_single_file() - 💾 [Thread-6194917376] Saving successful result to cache
2025-09-07 23:25:48,164 - app.main - DEBUG - [main.py:108] - load_cached_responses() - 📂 Loaded 69 cached responses
2025-09-07 23:25:48,170 - app.main - INFO - [main.py:150] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 70
2025-09-07 23:25:48,170 - app.main - DEBUG - [main.py:151] - save_response_to_cache() - 💾 Cached entry: Baisheng Song - 92%
2025-09-07 23:25:48,170 - app.main - DEBUG - [main.py:338] - process_single_file() - 📊 [Thread-6194917376] Returning result: Baisheng Song - 92%
2025-09-07 23:25:49,387 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ab07f0ee-2851-4597-a7e5-6d46825e9fd6'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3281'), (b'req-arrive-time', b'1757258743533'), (b'resp-start-time', b'1757258746815'), (b'x-envoy-upstream-service-time', b'3280'), (b'set-cookie', b'acw_tc=ab07f0ee-2851-4597-a7e5-6d46825e9fd6efa4ae2b3dacef6b3406bc35899ead09;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 15:25:46 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-07 23:25:49,387 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-07 23:25:49,387 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-07 23:25:49,388 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-07 23:25:49,388 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-07 23:25:49,388 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-07 23:25:49,388 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ab07f0ee-2851-4597-a7e5-6d46825e9fd6', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3281', 'req-arrive-time': '1757258743533', 'resp-start-time': '1757258746815', 'x-envoy-upstream-service-time': '3280', 'set-cookie': 'acw_tc=ab07f0ee-2851-4597-a7e5-6d46825e9fd6efa4ae2b3dacef6b3406bc35899ead09;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 15:25:46 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-07 23:25:49,388 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: ab07f0ee-2851-4597-a7e5-6d46825e9fd6
2025-09-07 23:25:49,389 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-07 23:25:49,389 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:25:49,389 - app.main - INFO - [main.py:267] - process_single_file() - ✅ [Thread-6178091008] AI analysis completed successfully
2025-09-07 23:25:49,389 - app.main - DEBUG - [main.py:268] - process_single_file() - 📊 [Thread-6178091008] Analysis result - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-07 23:25:49,389 - app.main - DEBUG - [main.py:311] - process_single_file() - 🗑️ [Thread-6178091008] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250907_232541_6178091008_1.pdf
2025-09-07 23:25:49,389 - app.main - INFO - [main.py:313] - process_single_file() - ✅ [Thread-6178091008] File processing completed successfully for: 1.pdf
2025-09-07 23:25:49,389 - app.main - DEBUG - [main.py:333] - process_single_file() - 💾 [Thread-6178091008] Saving successful result to cache
2025-09-07 23:25:49,390 - app.main - DEBUG - [main.py:108] - load_cached_responses() - 📂 Loaded 70 cached responses
2025-09-07 23:25:49,393 - app.main - INFO - [main.py:150] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 71
2025-09-07 23:25:49,393 - app.main - DEBUG - [main.py:151] - save_response_to_cache() - 💾 Cached entry: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:25:49,394 - app.main - DEBUG - [main.py:338] - process_single_file() - 📊 [Thread-6178091008] Returning result: AlexanderersonAndersonilsonnen - 35%
2025-09-07 23:25:49,394 - app.main - INFO - [main.py:412] - upload_resume() - ✅ Task 1/3 completed: 1.pdf - success
2025-09-07 23:25:49,394 - app.main - INFO - [main.py:412] - upload_resume() - ✅ Task 2/3 completed: Baisheng_Song_Resume_.pdf - success
2025-09-07 23:25:49,394 - app.main - INFO - [main.py:412] - upload_resume() - ✅ Task 3/3 completed: resume_1.pdf - success
2025-09-07 23:25:49,395 - app.main - INFO - [main.py:426] - upload_resume() - 🏁 All concurrent processing completed - 3 results collected
2025-09-07 23:25:49,395 - app.main - INFO - [main.py:432] - upload_resume() - 📊 Processing summary - Success: 3, Failed: 0
2025-09-07 23:25:49,395 - app.main - DEBUG - [main.py:443] - upload_resume() - 📊 Sorting results by match score
2025-09-07 23:25:49,396 - app.main - INFO - [main.py:448] - upload_resume() - 🏆 Top candidate: Baisheng Song with 92% match
2025-09-07 23:25:49,396 - app.main - INFO - [main.py:485] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-07 23:25:49,396 - app.main - DEBUG - [main.py:486] - upload_resume() - 📊 Response size: 6008 characters
2025-09-07 23:25:49,397 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 6535 bytes
2025-09-07 23:25:49,398 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [07/Sep/2025 23:25:49] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-08 00:53:50,443 - werkzeug - INFO - [_internal.py:97] - _log() - [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:8000
 * Running on http://192.168.31.75:8000
2025-09-08 00:53:50,443 - werkzeug - INFO - [_internal.py:97] - _log() - [33mPress CTRL+C to quit[0m
2025-09-08 00:53:50,444 - werkzeug - INFO - [_internal.py:97] - _log() -  * Restarting with stat
2025-09-08 00:53:50,693 - werkzeug - WARNING - [_internal.py:97] - _log() -  * Debugger is active!
2025-09-08 00:53:50,700 - werkzeug - INFO - [_internal.py:97] - _log() -  * Debugger PIN: 580-702-148
2025-09-08 00:53:50,805 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-08 00:53:50,805 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-08 00:53:50,808 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-08 00:53:50,808 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 00:53:50] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-08 00:53:50,817 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-08 00:53:50,817 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757258233.9595125-25118-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:17:13 GMT'}
2025-09-08 00:53:50,818 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-08 00:53:50,818 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757258724.4141054-58081-1898780101"', 'If-Modified-Since': 'Sun, 07 Sep 2025 15:25:24 GMT'}
2025-09-08 00:53:50,819 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 26726 bytes
2025-09-08 00:53:50,819 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 00:53:50] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-08 00:53:50,819 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 61050 bytes
2025-09-08 00:53:50,820 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 00:53:50] "GET /static/script.js HTTP/1.1" 200 -
2025-09-08 00:53:50,860 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-08 00:53:50,861 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 00:53:50,861 - app.main - DEBUG - [main.py:503] - health_check() - 🏥 Health check endpoint called
2025-09-08 00:53:50,861 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-08 00:53:50,861 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 00:53:50] "GET /api/health HTTP/1.1" 200 -
2025-09-08 00:54:01,035 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-08 00:54:01,035 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '50829', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryeg1N4Bkx5R4nN4is', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 00:54:01,035 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryeg1N4Bkx5R4nN4is
2025-09-08 00:54:01,035 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 50829
2025-09-08 00:54:01,037 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['文字文稿1.pdf']
2025-09-08 00:54:01,037 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-08 00:54:01,037 - app.main - INFO - [main.py:363] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-08 00:54:01,037 - app.main - INFO - [main.py:379] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-08 00:54:01,037 - app.main - DEBUG - [main.py:380] - upload_resume() - 📎 File names: ['文字文稿1.pdf']
2025-09-08 00:54:01,037 - app.main - INFO - [main.py:392] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-08 00:54:01,037 - app.main - DEBUG - [main.py:396] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-08 00:54:01,037 - app.main - INFO - [main.py:205] - process_single_file() - 🚀 [Thread-6211907584] Starting processing file: 文字文稿1.pdf
2025-09-08 00:54:01,038 - app.main - INFO - [main.py:402] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-08 00:54:01,038 - app.main - DEBUG - [main.py:208] - process_single_file() - 📋 [Thread-6211907584] File details - Name: 文字文稿1.pdf, Content-Type: application/pdf, Size: 0
2025-09-08 00:54:01,038 - app.main - DEBUG - [main.py:211] - process_single_file() - 🔍 [Thread-6211907584] Validating file type...
2025-09-08 00:54:01,039 - app.main - DEBUG - [main.py:223] - process_single_file() - 💾 [Thread-6211907584] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_005401_6211907584_1.pdf
2025-09-08 00:54:01,039 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6211907584] File saved successfully
2025-09-08 00:54:01,040 - app.main - DEBUG - [main.py:228] - process_single_file() - 🔍 [Thread-6211907584] Validating PDF structure...
2025-09-08 00:54:01,043 - app.main - INFO - [main.py:238] - process_single_file() - ✅ [Thread-6211907584] PDF validation passed
2025-09-08 00:54:01,043 - app.main - DEBUG - [main.py:241] - process_single_file() - 📄 [Thread-6211907584] Extracting text from PDF...
2025-09-08 00:54:01,064 - app.main - INFO - [main.py:256] - process_single_file() - ✅ [Thread-6211907584] Text extracted successfully - 388 characters
2025-09-08 00:54:01,064 - app.main - INFO - [main.py:261] - process_single_file() - 🤖 [Thread-6211907584] Starting AI analysis with Qwen...
2025-09-08 00:54:01,065 - app.main - DEBUG - [main.py:262] - process_single_file() - 📊 [Thread-6211907584] Job description length: 17 chars
2025-09-08 00:54:01,065 - app.main - DEBUG - [main.py:263] - process_single_file() - 📊 [Thread-6211907584] Resume text length: 388 chars
2025-09-08 00:54:01,065 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-08 00:54:01,065 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 388 chars
2025-09-08 00:54:01,190 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-6cb6bd9b-125a-43f0-af71-1e0b3f1e9e12', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlexanderersonAndersonilsonnen\nProjectManager-Construction\nEducation\nBachelor\'sdegreefromNationalUniversityofSingapore\nExperience\nWorkedasProjectManageratSiemens(2019-2024)\nKeyachievementsincludedeliveringprojectsontime,collaboratingwithcross-functional\nteams,\nandachievingmeasurableresults.\nSkills\nIndustry-relevantskills,strongcommunication,problem-solving,andleadership.\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-08 00:54:01,205 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-08 00:54:01,206 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-08 00:54:01,206 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109904590>
2025-09-08 00:54:01,206 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-08 00:54:01,206 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 00:54:01,207 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-08 00:54:01,207 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 00:54:01,207 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-08 00:54:01,207 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-08 00:54:01,207 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x103e55490> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-08 00:54:01,739 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109745e50>
2025-09-08 00:54:01,740 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-08 00:54:01,740 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 00:54:01,741 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-08 00:54:01,741 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 00:54:01,741 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-08 00:54:05,765 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'56cc29ad-9a59-43d1-966c-1b26640996c2'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3799'), (b'req-arrive-time', b'1757264041955'), (b'resp-start-time', b'1757264045754'), (b'x-envoy-upstream-service-time', b'3798'), (b'set-cookie', b'acw_tc=56cc29ad-9a59-43d1-966c-1b26640996c27132191f2fbfbd64f1fd70cb9c28f4e0;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 16:54:05 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-08 00:54:05,767 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-08 00:54:05,767 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-08 00:54:05,768 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-08 00:54:05,768 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-08 00:54:05,768 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-08 00:54:05,768 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '56cc29ad-9a59-43d1-966c-1b26640996c2', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3799', 'req-arrive-time': '1757264041955', 'resp-start-time': '1757264045754', 'x-envoy-upstream-service-time': '3798', 'set-cookie': 'acw_tc=56cc29ad-9a59-43d1-966c-1b26640996c27132191f2fbfbd64f1fd70cb9c28f4e0;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 16:54:05 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-08 00:54:05,768 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 56cc29ad-9a59-43d1-966c-1b26640996c2
2025-09-08 00:54:05,787 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-08 00:54:05,787 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-08 00:54:05,787 - app.main - INFO - [main.py:267] - process_single_file() - ✅ [Thread-6211907584] AI analysis completed successfully
2025-09-08 00:54:05,787 - app.main - DEBUG - [main.py:268] - process_single_file() - 📊 [Thread-6211907584] Analysis result - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-08 00:54:05,787 - app.main - DEBUG - [main.py:311] - process_single_file() - 🗑️ [Thread-6211907584] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_005401_6211907584_1.pdf
2025-09-08 00:54:05,788 - app.main - INFO - [main.py:313] - process_single_file() - ✅ [Thread-6211907584] File processing completed successfully for: 1.pdf
2025-09-08 00:54:05,788 - app.main - DEBUG - [main.py:333] - process_single_file() - 💾 [Thread-6211907584] Saving successful result to cache
2025-09-08 00:54:05,790 - app.main - DEBUG - [main.py:108] - load_cached_responses() - 📂 Loaded 71 cached responses
2025-09-08 00:54:05,792 - app.main - INFO - [main.py:150] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 72
2025-09-08 00:54:05,793 - app.main - DEBUG - [main.py:151] - save_response_to_cache() - 💾 Cached entry: AlexanderersonAndersonilsonnen - 35%
2025-09-08 00:54:05,793 - app.main - DEBUG - [main.py:338] - process_single_file() - 📊 [Thread-6211907584] Returning result: AlexanderersonAndersonilsonnen - 35%
2025-09-08 00:54:05,793 - app.main - INFO - [main.py:412] - upload_resume() - ✅ Task 1/1 completed: 1.pdf - success
2025-09-08 00:54:05,793 - app.main - INFO - [main.py:426] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-08 00:54:05,793 - app.main - INFO - [main.py:432] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-08 00:54:05,793 - app.main - DEBUG - [main.py:443] - upload_resume() - 📊 Sorting results by match score
2025-09-08 00:54:05,794 - app.main - INFO - [main.py:448] - upload_resume() - 🏆 Top candidate: AlexanderersonAndersonilsonnen with 35% match
2025-09-08 00:54:05,794 - app.main - DEBUG - [main.py:469] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-08 00:54:05,794 - app.main - INFO - [main.py:485] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-08 00:54:05,794 - app.main - DEBUG - [main.py:486] - upload_resume() - 📊 Response size: 3436 characters
2025-09-08 00:54:05,794 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 3689 bytes
2025-09-08 00:54:05,794 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 00:54:05] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-08 00:54:49,941 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-08 00:54:49,942 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-08 00:54:49,943 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-08 00:54:49,944 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 00:54:49] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-08 00:54:49,959 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-08 00:54:49,959 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757263863.686212-26726-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 16:51:03 GMT'}
2025-09-08 00:54:49,962 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-08 00:54:49,962 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757263863.6863058-61050-1898780101"', 'If-Modified-Since': 'Sun, 07 Sep 2025 16:51:03 GMT'}
2025-09-08 00:54:49,963 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 26726 bytes
2025-09-08 00:54:49,963 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 00:54:49] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-08 00:54:49,964 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 61050 bytes
2025-09-08 00:54:49,964 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 00:54:49] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-08 00:54:49,972 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-08 00:54:49,973 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 00:54:49,973 - app.main - DEBUG - [main.py:503] - health_check() - 🏥 Health check endpoint called
2025-09-08 00:54:49,975 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-08 00:54:49,975 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 00:54:49] "GET /api/health HTTP/1.1" 200 -
2025-09-08 01:06:50,619 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-08 01:06:50,620 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-08 01:06:50,622 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-08 01:06:50,622 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:06:50] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-08 01:06:50,635 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-08 01:06:50,635 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757263863.686212-26726-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 16:51:03 GMT'}
2025-09-08 01:06:50,636 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-08 01:06:50,636 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757263863.6863058-61050-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 16:51:03 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:06:50,637 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 27455 bytes
2025-09-08 01:06:50,638 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 63479 bytes
2025-09-08 01:06:50,638 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:06:50] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-08 01:06:50,639 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:06:50] "GET /static/script.js HTTP/1.1" 200 -
2025-09-08 01:06:50,680 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-08 01:06:50,680 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:06:50,680 - app.main - DEBUG - [main.py:503] - health_check() - 🏥 Health check endpoint called
2025-09-08 01:06:50,680 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-08 01:06:50,680 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:06:50] "GET /api/health HTTP/1.1" 200 -
2025-09-08 01:06:58,629 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-08 01:06:58,629 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '50829', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryuiLJUBhBe3q1U4jQ', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:06:58,629 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryuiLJUBhBe3q1U4jQ
2025-09-08 01:06:58,630 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 50829
2025-09-08 01:06:58,632 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['文字文稿1.pdf']
2025-09-08 01:06:58,632 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-08 01:06:58,632 - app.main - INFO - [main.py:363] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-08 01:06:58,632 - app.main - INFO - [main.py:379] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-08 01:06:58,632 - app.main - DEBUG - [main.py:380] - upload_resume() - 📎 File names: ['文字文稿1.pdf']
2025-09-08 01:06:58,632 - app.main - INFO - [main.py:392] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-08 01:06:58,632 - app.main - DEBUG - [main.py:396] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-08 01:06:58,633 - app.main - INFO - [main.py:205] - process_single_file() - 🚀 [Thread-6211907584] Starting processing file: 文字文稿1.pdf
2025-09-08 01:06:58,633 - app.main - INFO - [main.py:402] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-08 01:06:58,633 - app.main - DEBUG - [main.py:208] - process_single_file() - 📋 [Thread-6211907584] File details - Name: 文字文稿1.pdf, Content-Type: application/pdf, Size: 0
2025-09-08 01:06:58,633 - app.main - DEBUG - [main.py:211] - process_single_file() - 🔍 [Thread-6211907584] Validating file type...
2025-09-08 01:06:58,633 - app.main - DEBUG - [main.py:223] - process_single_file() - 💾 [Thread-6211907584] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_010658_6211907584_1.pdf
2025-09-08 01:06:58,634 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6211907584] File saved successfully
2025-09-08 01:06:58,634 - app.main - DEBUG - [main.py:228] - process_single_file() - 🔍 [Thread-6211907584] Validating PDF structure...
2025-09-08 01:06:58,635 - app.main - INFO - [main.py:238] - process_single_file() - ✅ [Thread-6211907584] PDF validation passed
2025-09-08 01:06:58,636 - app.main - DEBUG - [main.py:241] - process_single_file() - 📄 [Thread-6211907584] Extracting text from PDF...
2025-09-08 01:06:58,651 - app.main - INFO - [main.py:256] - process_single_file() - ✅ [Thread-6211907584] Text extracted successfully - 388 characters
2025-09-08 01:06:58,651 - app.main - INFO - [main.py:261] - process_single_file() - 🤖 [Thread-6211907584] Starting AI analysis with Qwen...
2025-09-08 01:06:58,651 - app.main - DEBUG - [main.py:262] - process_single_file() - 📊 [Thread-6211907584] Job description length: 17 chars
2025-09-08 01:06:58,651 - app.main - DEBUG - [main.py:263] - process_single_file() - 📊 [Thread-6211907584] Resume text length: 388 chars
2025-09-08 01:06:58,651 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-08 01:06:58,651 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 388 chars
2025-09-08 01:06:58,675 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-41e9840b-2812-4626-ab32-b8801685db87', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlexanderersonAndersonilsonnen\nProjectManager-Construction\nEducation\nBachelor\'sdegreefromNationalUniversityofSingapore\nExperience\nWorkedasProjectManageratSiemens(2019-2024)\nKeyachievementsincludedeliveringprojectsontime,collaboratingwithcross-functional\nteams,\nandachievingmeasurableresults.\nSkills\nIndustry-relevantskills,strongcommunication,problem-solving,andleadership.\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-08 01:06:58,675 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-08 01:06:58,675 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-08 01:06:58,676 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1099c8550>
2025-09-08 01:06:58,676 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:06:58,676 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:06:58,676 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-08 01:06:58,676 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:06:58,676 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:06:58,676 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-08 01:06:58,676 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1096e2570> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-08 01:06:59,122 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109719f30>
2025-09-08 01:06:59,123 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-08 01:06:59,123 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:06:59,123 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-08 01:06:59,123 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:06:59,123 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-08 01:07:02,987 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'154f1d17-ec84-41c3-8af6-6b8f3d253e00'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3593'), (b'req-arrive-time', b'1757264819317'), (b'resp-start-time', b'1757264822911'), (b'x-envoy-upstream-service-time', b'3592'), (b'set-cookie', b'acw_tc=154f1d17-ec84-41c3-8af6-6b8f3d253e00a93d3d23e280a398773f80fece50e15c;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 17:07:02 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-08 01:07:02,988 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-08 01:07:02,988 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-08 01:07:02,988 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-08 01:07:02,988 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-08 01:07:02,988 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-08 01:07:02,988 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '154f1d17-ec84-41c3-8af6-6b8f3d253e00', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3593', 'req-arrive-time': '1757264819317', 'resp-start-time': '1757264822911', 'x-envoy-upstream-service-time': '3592', 'set-cookie': 'acw_tc=154f1d17-ec84-41c3-8af6-6b8f3d253e00a93d3d23e280a398773f80fece50e15c;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 17:07:02 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-08 01:07:02,988 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 154f1d17-ec84-41c3-8af6-6b8f3d253e00
2025-09-08 01:07:02,989 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-08 01:07:02,989 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-08 01:07:02,989 - app.main - INFO - [main.py:267] - process_single_file() - ✅ [Thread-6211907584] AI analysis completed successfully
2025-09-08 01:07:02,989 - app.main - DEBUG - [main.py:268] - process_single_file() - 📊 [Thread-6211907584] Analysis result - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-08 01:07:02,989 - app.main - DEBUG - [main.py:311] - process_single_file() - 🗑️ [Thread-6211907584] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_010658_6211907584_1.pdf
2025-09-08 01:07:02,990 - app.main - INFO - [main.py:313] - process_single_file() - ✅ [Thread-6211907584] File processing completed successfully for: 1.pdf
2025-09-08 01:07:02,990 - app.main - DEBUG - [main.py:333] - process_single_file() - 💾 [Thread-6211907584] Saving successful result to cache
2025-09-08 01:07:02,992 - app.main - DEBUG - [main.py:108] - load_cached_responses() - 📂 Loaded 72 cached responses
2025-09-08 01:07:02,998 - app.main - INFO - [main.py:150] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 73
2025-09-08 01:07:02,998 - app.main - DEBUG - [main.py:151] - save_response_to_cache() - 💾 Cached entry: AlexanderersonAndersonilsonnen - 35%
2025-09-08 01:07:02,998 - app.main - DEBUG - [main.py:338] - process_single_file() - 📊 [Thread-6211907584] Returning result: AlexanderersonAndersonilsonnen - 35%
2025-09-08 01:07:02,998 - app.main - INFO - [main.py:412] - upload_resume() - ✅ Task 1/1 completed: 1.pdf - success
2025-09-08 01:07:02,999 - app.main - INFO - [main.py:426] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-08 01:07:02,999 - app.main - INFO - [main.py:432] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-08 01:07:02,999 - app.main - DEBUG - [main.py:443] - upload_resume() - 📊 Sorting results by match score
2025-09-08 01:07:02,999 - app.main - INFO - [main.py:448] - upload_resume() - 🏆 Top candidate: AlexanderersonAndersonilsonnen with 35% match
2025-09-08 01:07:02,999 - app.main - DEBUG - [main.py:469] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-08 01:07:02,999 - app.main - INFO - [main.py:485] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-08 01:07:02,999 - app.main - DEBUG - [main.py:486] - upload_resume() - 📊 Response size: 3896 characters
2025-09-08 01:07:03,000 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4125 bytes
2025-09-08 01:07:03,000 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:07:03] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-08 01:07:10,621 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-08 01:07:10,622 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2662', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryFcHZRmDQirBMSV7g', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:07:10,622 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryFcHZRmDQirBMSV7g
2025-09-08 01:07:10,622 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2662
2025-09-08 01:07:10,623 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_9.pdf']
2025-09-08 01:07:10,623 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-08 01:07:10,623 - app.main - INFO - [main.py:363] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-08 01:07:10,623 - app.main - INFO - [main.py:379] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-08 01:07:10,624 - app.main - DEBUG - [main.py:380] - upload_resume() - 📎 File names: ['resume_9.pdf']
2025-09-08 01:07:10,624 - app.main - INFO - [main.py:392] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-08 01:07:10,624 - app.main - DEBUG - [main.py:396] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-08 01:07:10,624 - app.main - INFO - [main.py:205] - process_single_file() - 🚀 [Thread-6211907584] Starting processing file: resume_9.pdf
2025-09-08 01:07:10,624 - app.main - INFO - [main.py:402] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-08 01:07:10,624 - app.main - DEBUG - [main.py:208] - process_single_file() - 📋 [Thread-6211907584] File details - Name: resume_9.pdf, Content-Type: application/pdf, Size: 0
2025-09-08 01:07:10,624 - app.main - DEBUG - [main.py:211] - process_single_file() - 🔍 [Thread-6211907584] Validating file type...
2025-09-08 01:07:10,624 - app.main - DEBUG - [main.py:223] - process_single_file() - 💾 [Thread-6211907584] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_010710_6211907584_resume_9.pdf
2025-09-08 01:07:10,625 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6211907584] File saved successfully
2025-09-08 01:07:10,625 - app.main - DEBUG - [main.py:228] - process_single_file() - 🔍 [Thread-6211907584] Validating PDF structure...
2025-09-08 01:07:10,626 - app.main - INFO - [main.py:238] - process_single_file() - ✅ [Thread-6211907584] PDF validation passed
2025-09-08 01:07:10,626 - app.main - DEBUG - [main.py:241] - process_single_file() - 📄 [Thread-6211907584] Extracting text from PDF...
2025-09-08 01:07:10,631 - app.main - INFO - [main.py:256] - process_single_file() - ✅ [Thread-6211907584] Text extracted successfully - 870 characters
2025-09-08 01:07:10,631 - app.main - INFO - [main.py:261] - process_single_file() - 🤖 [Thread-6211907584] Starting AI analysis with Qwen...
2025-09-08 01:07:10,631 - app.main - DEBUG - [main.py:262] - process_single_file() - 📊 [Thread-6211907584] Job description length: 17 chars
2025-09-08 01:07:10,631 - app.main - DEBUG - [main.py:263] - process_single_file() - 📊 [Thread-6211907584] Resume text length: 870 chars
2025-09-08 01:07:10,631 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-08 01:07:10,631 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 870 chars
2025-09-08 01:07:10,661 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-102ffb9b-70ac-45c8-ab01-7c619150caae', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nJohn Lee\n Email: john.lee@gmail.com | Phone: +1-869-955-1818\nAddress: 416 Main Street, London, UK\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nData Engineer, Apple (2016 - 2018)\nDeveloped and maintained web applications. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nData Engineer, Google (2018 - 2019)\nDeveloped and maintained backend services. Collaborated with cross-functional teams to deliver\nfeatures improving system performance and user experience.\nEducation\nBachelor of Computer Science, Stanford University (2010 - 2015)\nSkills\nMachine Learning, REST APIs, JavaScript, AWS, Go, Node.js, Python, GraphQL\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-08 01:07:10,662 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-08 01:07:10,662 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-08 01:07:10,662 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10971a8b0>
2025-09-08 01:07:10,662 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:07:10,662 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:07:10,662 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-08 01:07:10,663 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:07:10,663 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:07:10,663 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-08 01:07:10,663 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1096e2de0> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-08 01:07:11,080 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109994950>
2025-09-08 01:07:11,081 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-08 01:07:11,081 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:07:11,081 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-08 01:07:11,081 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:07:11,081 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-08 01:07:15,889 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'e94796ea-a4ec-43a7-8a8c-31fbf6c03528'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4289'), (b'req-arrive-time', b'1757264831277'), (b'resp-start-time', b'1757264835567'), (b'x-envoy-upstream-service-time', b'4288'), (b'set-cookie', b'acw_tc=e94796ea-a4ec-43a7-8a8c-31fbf6c035284cf78c6c9f0aba2f7fa0e9528dcc30ed;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 17:07:15 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-08 01:07:15,890 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-08 01:07:15,890 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-08 01:07:15,890 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-08 01:07:15,890 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-08 01:07:15,890 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-08 01:07:15,890 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'e94796ea-a4ec-43a7-8a8c-31fbf6c03528', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4289', 'req-arrive-time': '1757264831277', 'resp-start-time': '1757264835567', 'x-envoy-upstream-service-time': '4288', 'set-cookie': 'acw_tc=e94796ea-a4ec-43a7-8a8c-31fbf6c035284cf78c6c9f0aba2f7fa0e9528dcc30ed;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 17:07:15 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-08 01:07:15,891 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: e94796ea-a4ec-43a7-8a8c-31fbf6c03528
2025-09-08 01:07:15,891 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-08 01:07:15,891 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: John Lee, Score: 75
2025-09-08 01:07:15,892 - app.main - INFO - [main.py:267] - process_single_file() - ✅ [Thread-6211907584] AI analysis completed successfully
2025-09-08 01:07:15,892 - app.main - DEBUG - [main.py:268] - process_single_file() - 📊 [Thread-6211907584] Analysis result - Candidate: John Lee, Score: 75
2025-09-08 01:07:15,892 - app.main - DEBUG - [main.py:311] - process_single_file() - 🗑️ [Thread-6211907584] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_010710_6211907584_resume_9.pdf
2025-09-08 01:07:15,892 - app.main - INFO - [main.py:313] - process_single_file() - ✅ [Thread-6211907584] File processing completed successfully for: resume_9.pdf
2025-09-08 01:07:15,892 - app.main - DEBUG - [main.py:333] - process_single_file() - 💾 [Thread-6211907584] Saving successful result to cache
2025-09-08 01:07:15,893 - app.main - DEBUG - [main.py:108] - load_cached_responses() - 📂 Loaded 73 cached responses
2025-09-08 01:07:15,898 - app.main - INFO - [main.py:150] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 74
2025-09-08 01:07:15,898 - app.main - DEBUG - [main.py:151] - save_response_to_cache() - 💾 Cached entry: John Lee - 75%
2025-09-08 01:07:15,898 - app.main - DEBUG - [main.py:338] - process_single_file() - 📊 [Thread-6211907584] Returning result: John Lee - 75%
2025-09-08 01:07:15,898 - app.main - INFO - [main.py:412] - upload_resume() - ✅ Task 1/1 completed: resume_9.pdf - success
2025-09-08 01:07:15,899 - app.main - INFO - [main.py:426] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-08 01:07:15,899 - app.main - INFO - [main.py:432] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-08 01:07:15,899 - app.main - DEBUG - [main.py:443] - upload_resume() - 📊 Sorting results by match score
2025-09-08 01:07:15,899 - app.main - INFO - [main.py:448] - upload_resume() - 🏆 Top candidate: John Lee with 75% match
2025-09-08 01:07:15,899 - app.main - DEBUG - [main.py:469] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-08 01:07:15,899 - app.main - INFO - [main.py:485] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-08 01:07:15,899 - app.main - DEBUG - [main.py:486] - upload_resume() - 📊 Response size: 3986 characters
2025-09-08 01:07:15,899 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4227 bytes
2025-09-08 01:07:15,900 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:07:15] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-08 01:09:52,369 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-08 01:09:52,370 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-08 01:09:52,371 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-08 01:09:52,371 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:09:52] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-08 01:09:52,394 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-08 01:09:52,395 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757264205.3103201-27455-2280592960"', 'If-Modified-Since': 'Sun, 07 Sep 2025 16:56:45 GMT'}
2025-09-08 01:09:52,395 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-08 01:09:52,396 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757264205.3105648-63479-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 16:56:45 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:09:52,396 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 27397 bytes
2025-09-08 01:09:52,397 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 62372 bytes
2025-09-08 01:09:52,397 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:09:52] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-08 01:09:52,397 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:09:52] "GET /static/script.js HTTP/1.1" 200 -
2025-09-08 01:09:52,405 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-08 01:09:52,406 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:09:52,406 - app.main - DEBUG - [main.py:503] - health_check() - 🏥 Health check endpoint called
2025-09-08 01:09:52,407 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-08 01:09:52,407 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:09:52] "GET /api/health HTTP/1.1" 200 -
2025-09-08 01:10:00,214 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-08 01:10:00,215 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '50829', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarykXNQp7h8A1xxjL0X', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:10:00,215 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarykXNQp7h8A1xxjL0X
2025-09-08 01:10:00,215 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 50829
2025-09-08 01:10:00,217 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['文字文稿1.pdf']
2025-09-08 01:10:00,217 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-08 01:10:00,217 - app.main - INFO - [main.py:363] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-08 01:10:00,217 - app.main - INFO - [main.py:379] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-08 01:10:00,217 - app.main - DEBUG - [main.py:380] - upload_resume() - 📎 File names: ['文字文稿1.pdf']
2025-09-08 01:10:00,217 - app.main - INFO - [main.py:392] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-08 01:10:00,217 - app.main - DEBUG - [main.py:396] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-08 01:10:00,217 - app.main - INFO - [main.py:205] - process_single_file() - 🚀 [Thread-6211907584] Starting processing file: 文字文稿1.pdf
2025-09-08 01:10:00,217 - app.main - INFO - [main.py:402] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-08 01:10:00,218 - app.main - DEBUG - [main.py:208] - process_single_file() - 📋 [Thread-6211907584] File details - Name: 文字文稿1.pdf, Content-Type: application/pdf, Size: 0
2025-09-08 01:10:00,218 - app.main - DEBUG - [main.py:211] - process_single_file() - 🔍 [Thread-6211907584] Validating file type...
2025-09-08 01:10:00,218 - app.main - DEBUG - [main.py:223] - process_single_file() - 💾 [Thread-6211907584] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_011000_6211907584_1.pdf
2025-09-08 01:10:00,222 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6211907584] File saved successfully
2025-09-08 01:10:00,223 - app.main - DEBUG - [main.py:228] - process_single_file() - 🔍 [Thread-6211907584] Validating PDF structure...
2025-09-08 01:10:00,224 - app.main - INFO - [main.py:238] - process_single_file() - ✅ [Thread-6211907584] PDF validation passed
2025-09-08 01:10:00,224 - app.main - DEBUG - [main.py:241] - process_single_file() - 📄 [Thread-6211907584] Extracting text from PDF...
2025-09-08 01:10:00,251 - app.main - INFO - [main.py:256] - process_single_file() - ✅ [Thread-6211907584] Text extracted successfully - 388 characters
2025-09-08 01:10:00,251 - app.main - INFO - [main.py:261] - process_single_file() - 🤖 [Thread-6211907584] Starting AI analysis with Qwen...
2025-09-08 01:10:00,251 - app.main - DEBUG - [main.py:262] - process_single_file() - 📊 [Thread-6211907584] Job description length: 17 chars
2025-09-08 01:10:00,251 - app.main - DEBUG - [main.py:263] - process_single_file() - 📊 [Thread-6211907584] Resume text length: 388 chars
2025-09-08 01:10:00,251 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-08 01:10:00,251 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 388 chars
2025-09-08 01:10:00,270 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-50259595-ee3e-4cf5-b020-57561c69c49e', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlexanderersonAndersonilsonnen\nProjectManager-Construction\nEducation\nBachelor\'sdegreefromNationalUniversityofSingapore\nExperience\nWorkedasProjectManageratSiemens(2019-2024)\nKeyachievementsincludedeliveringprojectsontime,collaboratingwithcross-functional\nteams,\nandachievingmeasurableresults.\nSkills\nIndustry-relevantskills,strongcommunication,problem-solving,andleadership.\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-08 01:10:00,270 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-08 01:10:00,270 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-08 01:10:00,271 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1097ae690>
2025-09-08 01:10:00,271 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:10:00,271 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:10:00,271 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-08 01:10:00,271 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:10:00,271 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:10:00,271 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-08 01:10:00,271 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1096e3020> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-08 01:10:00,665 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1097aebe0>
2025-09-08 01:10:00,666 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-08 01:10:00,666 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:10:00,666 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-08 01:10:00,666 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:10:00,666 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-08 01:10:04,953 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'803ac73c-9284-4f48-acaf-1aa501598382'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4005'), (b'req-arrive-time', b'1757265000883'), (b'resp-start-time', b'1757265004889'), (b'x-envoy-upstream-service-time', b'4004'), (b'set-cookie', b'acw_tc=803ac73c-9284-4f48-acaf-1aa50159838205a39d9f47ee13a11fad1160cec77cb5;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 17:10:04 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-08 01:10:04,954 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-08 01:10:04,955 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-08 01:10:04,955 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-08 01:10:04,955 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-08 01:10:04,955 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-08 01:10:04,955 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '803ac73c-9284-4f48-acaf-1aa501598382', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4005', 'req-arrive-time': '1757265000883', 'resp-start-time': '1757265004889', 'x-envoy-upstream-service-time': '4004', 'set-cookie': 'acw_tc=803ac73c-9284-4f48-acaf-1aa50159838205a39d9f47ee13a11fad1160cec77cb5;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 17:10:04 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-08 01:10:04,955 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 803ac73c-9284-4f48-acaf-1aa501598382
2025-09-08 01:10:04,956 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-08 01:10:04,956 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-08 01:10:04,956 - app.main - INFO - [main.py:267] - process_single_file() - ✅ [Thread-6211907584] AI analysis completed successfully
2025-09-08 01:10:04,956 - app.main - DEBUG - [main.py:268] - process_single_file() - 📊 [Thread-6211907584] Analysis result - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-08 01:10:04,956 - app.main - DEBUG - [main.py:311] - process_single_file() - 🗑️ [Thread-6211907584] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_011000_6211907584_1.pdf
2025-09-08 01:10:04,956 - app.main - INFO - [main.py:313] - process_single_file() - ✅ [Thread-6211907584] File processing completed successfully for: 1.pdf
2025-09-08 01:10:04,956 - app.main - DEBUG - [main.py:333] - process_single_file() - 💾 [Thread-6211907584] Saving successful result to cache
2025-09-08 01:10:04,958 - app.main - DEBUG - [main.py:108] - load_cached_responses() - 📂 Loaded 74 cached responses
2025-09-08 01:10:04,961 - app.main - INFO - [main.py:150] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 75
2025-09-08 01:10:04,962 - app.main - DEBUG - [main.py:151] - save_response_to_cache() - 💾 Cached entry: AlexanderersonAndersonilsonnen - 35%
2025-09-08 01:10:04,963 - app.main - DEBUG - [main.py:338] - process_single_file() - 📊 [Thread-6211907584] Returning result: AlexanderersonAndersonilsonnen - 35%
2025-09-08 01:10:04,963 - app.main - INFO - [main.py:412] - upload_resume() - ✅ Task 1/1 completed: 1.pdf - success
2025-09-08 01:10:04,963 - app.main - INFO - [main.py:426] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-08 01:10:04,963 - app.main - INFO - [main.py:432] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-08 01:10:04,963 - app.main - DEBUG - [main.py:443] - upload_resume() - 📊 Sorting results by match score
2025-09-08 01:10:04,963 - app.main - INFO - [main.py:448] - upload_resume() - 🏆 Top candidate: AlexanderersonAndersonilsonnen with 35% match
2025-09-08 01:10:04,963 - app.main - DEBUG - [main.py:469] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-08 01:10:04,963 - app.main - INFO - [main.py:485] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-08 01:10:04,964 - app.main - DEBUG - [main.py:486] - upload_resume() - 📊 Response size: 3468 characters
2025-09-08 01:10:04,964 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 3709 bytes
2025-09-08 01:10:04,964 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:10:04] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-08 01:10:12,223 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-08 01:10:12,224 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-08 01:10:12,225 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-08 01:10:12,225 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:10:12] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-08 01:10:12,237 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-08 01:10:12,237 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757264950.2785876-27397-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:09:10 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:10:12,238 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-08 01:10:12,238 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757264950.2729979-62372-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:09:10 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:10:12,239 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 27397 bytes
2025-09-08 01:10:12,239 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:10:12] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-08 01:10:12,239 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 62372 bytes
2025-09-08 01:10:12,240 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:10:12] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-08 01:10:12,248 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-08 01:10:12,249 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:10:12,249 - app.main - DEBUG - [main.py:503] - health_check() - 🏥 Health check endpoint called
2025-09-08 01:10:12,249 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-08 01:10:12,250 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:10:12] "GET /api/health HTTP/1.1" 200 -
2025-09-08 01:11:16,495 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-08 01:11:16,495 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-08 01:11:16,496 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-08 01:11:16,496 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:11:16] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-08 01:11:16,514 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-08 01:11:16,515 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757264950.2785876-27397-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:09:10 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:11:16,518 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-08 01:11:16,518 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757264950.2729979-62372-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:09:10 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:11:16,519 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 27397 bytes
2025-09-08 01:11:16,519 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:11:16] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-08 01:11:16,520 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 61980 bytes
2025-09-08 01:11:16,520 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:11:16] "GET /static/script.js HTTP/1.1" 200 -
2025-09-08 01:11:16,536 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-08 01:11:16,536 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:11:16,536 - app.main - DEBUG - [main.py:503] - health_check() - 🏥 Health check endpoint called
2025-09-08 01:11:16,537 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-08 01:11:16,537 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:11:16] "GET /api/health HTTP/1.1" 200 -
2025-09-08 01:11:22,666 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-08 01:11:22,666 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '50829', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary23JR1Pos6ars7nsF', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:11:22,666 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundary23JR1Pos6ars7nsF
2025-09-08 01:11:22,666 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 50829
2025-09-08 01:11:22,667 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['文字文稿1.pdf']
2025-09-08 01:11:22,667 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-08 01:11:22,667 - app.main - INFO - [main.py:363] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-08 01:11:22,667 - app.main - INFO - [main.py:379] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-08 01:11:22,667 - app.main - DEBUG - [main.py:380] - upload_resume() - 📎 File names: ['文字文稿1.pdf']
2025-09-08 01:11:22,667 - app.main - INFO - [main.py:392] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-08 01:11:22,667 - app.main - DEBUG - [main.py:396] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-08 01:11:22,668 - app.main - INFO - [main.py:205] - process_single_file() - 🚀 [Thread-6211907584] Starting processing file: 文字文稿1.pdf
2025-09-08 01:11:22,668 - app.main - INFO - [main.py:402] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-08 01:11:22,668 - app.main - DEBUG - [main.py:208] - process_single_file() - 📋 [Thread-6211907584] File details - Name: 文字文稿1.pdf, Content-Type: application/pdf, Size: 0
2025-09-08 01:11:22,668 - app.main - DEBUG - [main.py:211] - process_single_file() - 🔍 [Thread-6211907584] Validating file type...
2025-09-08 01:11:22,668 - app.main - DEBUG - [main.py:223] - process_single_file() - 💾 [Thread-6211907584] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_011122_6211907584_1.pdf
2025-09-08 01:11:22,668 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6211907584] File saved successfully
2025-09-08 01:11:22,668 - app.main - DEBUG - [main.py:228] - process_single_file() - 🔍 [Thread-6211907584] Validating PDF structure...
2025-09-08 01:11:22,669 - app.main - INFO - [main.py:238] - process_single_file() - ✅ [Thread-6211907584] PDF validation passed
2025-09-08 01:11:22,669 - app.main - DEBUG - [main.py:241] - process_single_file() - 📄 [Thread-6211907584] Extracting text from PDF...
2025-09-08 01:11:22,681 - app.main - INFO - [main.py:256] - process_single_file() - ✅ [Thread-6211907584] Text extracted successfully - 388 characters
2025-09-08 01:11:22,681 - app.main - INFO - [main.py:261] - process_single_file() - 🤖 [Thread-6211907584] Starting AI analysis with Qwen...
2025-09-08 01:11:22,681 - app.main - DEBUG - [main.py:262] - process_single_file() - 📊 [Thread-6211907584] Job description length: 17 chars
2025-09-08 01:11:22,681 - app.main - DEBUG - [main.py:263] - process_single_file() - 📊 [Thread-6211907584] Resume text length: 388 chars
2025-09-08 01:11:22,681 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-08 01:11:22,681 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 388 chars
2025-09-08 01:11:22,699 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f1595cba-a72e-414b-bc21-d4e2b31ad4d7', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlexanderersonAndersonilsonnen\nProjectManager-Construction\nEducation\nBachelor\'sdegreefromNationalUniversityofSingapore\nExperience\nWorkedasProjectManageratSiemens(2019-2024)\nKeyachievementsincludedeliveringprojectsontime,collaboratingwithcross-functional\nteams,\nandachievingmeasurableresults.\nSkills\nIndustry-relevantskills,strongcommunication,problem-solving,andleadership.\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-08 01:11:22,699 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-08 01:11:22,700 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-08 01:11:22,700 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10974f350>
2025-09-08 01:11:22,700 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:11:22,700 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:11:22,700 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-08 01:11:22,700 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:11:22,700 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:11:22,700 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-08 01:11:22,700 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1096e3770> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-08 01:11:23,089 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x10974fd50>
2025-09-08 01:11:23,089 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-08 01:11:23,090 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:11:23,091 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-08 01:11:23,091 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:11:23,091 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-08 01:11:26,991 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'ab8f90ad-f7ca-4df9-8541-adb54550ec94'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3706'), (b'req-arrive-time', b'1757265083281'), (b'resp-start-time', b'1757265086988'), (b'x-envoy-upstream-service-time', b'3700'), (b'set-cookie', b'acw_tc=ab8f90ad-f7ca-4df9-8541-adb54550ec94632475d8936a45f450a7b601d9f35cb5;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 17:11:26 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-08 01:11:26,992 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-08 01:11:26,992 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-08 01:11:26,993 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-08 01:11:26,993 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-08 01:11:26,993 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-08 01:11:26,993 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': 'ab8f90ad-f7ca-4df9-8541-adb54550ec94', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3706', 'req-arrive-time': '1757265083281', 'resp-start-time': '1757265086988', 'x-envoy-upstream-service-time': '3700', 'set-cookie': 'acw_tc=ab8f90ad-f7ca-4df9-8541-adb54550ec94632475d8936a45f450a7b601d9f35cb5;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 17:11:26 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-08 01:11:26,993 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: ab8f90ad-f7ca-4df9-8541-adb54550ec94
2025-09-08 01:11:26,994 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-08 01:11:26,994 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-08 01:11:26,994 - app.main - INFO - [main.py:267] - process_single_file() - ✅ [Thread-6211907584] AI analysis completed successfully
2025-09-08 01:11:26,994 - app.main - DEBUG - [main.py:268] - process_single_file() - 📊 [Thread-6211907584] Analysis result - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-08 01:11:26,994 - app.main - DEBUG - [main.py:311] - process_single_file() - 🗑️ [Thread-6211907584] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_011122_6211907584_1.pdf
2025-09-08 01:11:26,995 - app.main - INFO - [main.py:313] - process_single_file() - ✅ [Thread-6211907584] File processing completed successfully for: 1.pdf
2025-09-08 01:11:26,995 - app.main - DEBUG - [main.py:333] - process_single_file() - 💾 [Thread-6211907584] Saving successful result to cache
2025-09-08 01:11:26,996 - app.main - DEBUG - [main.py:108] - load_cached_responses() - 📂 Loaded 75 cached responses
2025-09-08 01:11:27,000 - app.main - INFO - [main.py:150] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 76
2025-09-08 01:11:27,001 - app.main - DEBUG - [main.py:151] - save_response_to_cache() - 💾 Cached entry: AlexanderersonAndersonilsonnen - 35%
2025-09-08 01:11:27,001 - app.main - DEBUG - [main.py:338] - process_single_file() - 📊 [Thread-6211907584] Returning result: AlexanderersonAndersonilsonnen - 35%
2025-09-08 01:11:27,001 - app.main - INFO - [main.py:412] - upload_resume() - ✅ Task 1/1 completed: 1.pdf - success
2025-09-08 01:11:27,001 - app.main - INFO - [main.py:426] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-08 01:11:27,001 - app.main - INFO - [main.py:432] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-08 01:11:27,001 - app.main - DEBUG - [main.py:443] - upload_resume() - 📊 Sorting results by match score
2025-09-08 01:11:27,001 - app.main - INFO - [main.py:448] - upload_resume() - 🏆 Top candidate: AlexanderersonAndersonilsonnen with 35% match
2025-09-08 01:11:27,001 - app.main - DEBUG - [main.py:469] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-08 01:11:27,001 - app.main - INFO - [main.py:485] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-08 01:11:27,002 - app.main - DEBUG - [main.py:486] - upload_resume() - 📊 Response size: 3726 characters
2025-09-08 01:11:27,002 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 3979 bytes
2025-09-08 01:11:27,002 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:11:27] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-08 01:14:34,601 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-08 01:14:34,603 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-08 01:14:34,604 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-08 01:14:34,604 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:14:34] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-08 01:14:34,618 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-08 01:14:34,618 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757264950.2785876-27397-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:09:10 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:14:34,618 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-08 01:14:34,619 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757265074.9869444-61980-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:11:14 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:14:34,619 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 26787 bytes
2025-09-08 01:14:34,619 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 62492 bytes
2025-09-08 01:14:34,619 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:14:34] "GET /static/styles.css HTTP/1.1" 200 -
2025-09-08 01:14:34,620 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:14:34] "GET /static/script.js HTTP/1.1" 200 -
2025-09-08 01:14:34,632 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-08 01:14:34,632 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:14:34,632 - app.main - DEBUG - [main.py:503] - health_check() - 🏥 Health check endpoint called
2025-09-08 01:14:34,633 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-08 01:14:34,633 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:14:34] "GET /api/health HTTP/1.1" 200 -
2025-09-08 01:14:40,036 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-08 01:14:40,037 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '50829', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundary4blVvgKp5ONNvpyL', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:14:40,037 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundary4blVvgKp5ONNvpyL
2025-09-08 01:14:40,037 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 50829
2025-09-08 01:14:40,039 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['文字文稿1.pdf']
2025-09-08 01:14:40,040 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-08 01:14:40,040 - app.main - INFO - [main.py:363] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-08 01:14:40,040 - app.main - INFO - [main.py:379] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-08 01:14:40,040 - app.main - DEBUG - [main.py:380] - upload_resume() - 📎 File names: ['文字文稿1.pdf']
2025-09-08 01:14:40,040 - app.main - INFO - [main.py:392] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-08 01:14:40,041 - app.main - DEBUG - [main.py:396] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-08 01:14:40,041 - app.main - INFO - [main.py:205] - process_single_file() - 🚀 [Thread-6211907584] Starting processing file: 文字文稿1.pdf
2025-09-08 01:14:40,041 - app.main - INFO - [main.py:402] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-08 01:14:40,042 - app.main - DEBUG - [main.py:208] - process_single_file() - 📋 [Thread-6211907584] File details - Name: 文字文稿1.pdf, Content-Type: application/pdf, Size: 0
2025-09-08 01:14:40,042 - app.main - DEBUG - [main.py:211] - process_single_file() - 🔍 [Thread-6211907584] Validating file type...
2025-09-08 01:14:40,042 - app.main - DEBUG - [main.py:223] - process_single_file() - 💾 [Thread-6211907584] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_011440_6211907584_1.pdf
2025-09-08 01:14:40,043 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6211907584] File saved successfully
2025-09-08 01:14:40,044 - app.main - DEBUG - [main.py:228] - process_single_file() - 🔍 [Thread-6211907584] Validating PDF structure...
2025-09-08 01:14:40,045 - app.main - INFO - [main.py:238] - process_single_file() - ✅ [Thread-6211907584] PDF validation passed
2025-09-08 01:14:40,045 - app.main - DEBUG - [main.py:241] - process_single_file() - 📄 [Thread-6211907584] Extracting text from PDF...
2025-09-08 01:14:40,070 - app.main - INFO - [main.py:256] - process_single_file() - ✅ [Thread-6211907584] Text extracted successfully - 388 characters
2025-09-08 01:14:40,070 - app.main - INFO - [main.py:261] - process_single_file() - 🤖 [Thread-6211907584] Starting AI analysis with Qwen...
2025-09-08 01:14:40,070 - app.main - DEBUG - [main.py:262] - process_single_file() - 📊 [Thread-6211907584] Job description length: 17 chars
2025-09-08 01:14:40,070 - app.main - DEBUG - [main.py:263] - process_single_file() - 📊 [Thread-6211907584] Resume text length: 388 chars
2025-09-08 01:14:40,070 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-08 01:14:40,070 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 388 chars
2025-09-08 01:14:40,091 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-109500b5-de8f-4212-a34d-5fdfa85f7369', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlexanderersonAndersonilsonnen\nProjectManager-Construction\nEducation\nBachelor\'sdegreefromNationalUniversityofSingapore\nExperience\nWorkedasProjectManageratSiemens(2019-2024)\nKeyachievementsincludedeliveringprojectsontime,collaboratingwithcross-functional\nteams,\nandachievingmeasurableresults.\nSkills\nIndustry-relevantskills,strongcommunication,problem-solving,andleadership.\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-08 01:14:40,092 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-08 01:14:40,092 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-08 01:14:40,092 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109757980>
2025-09-08 01:14:40,092 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:14:40,092 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:14:40,092 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-08 01:14:40,092 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:14:40,092 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:14:40,092 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-08 01:14:40,092 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1096e3d10> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-08 01:14:40,573 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1099d4410>
2025-09-08 01:14:40,574 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-08 01:14:40,574 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:14:40,574 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-08 01:14:40,574 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:14:40,575 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-08 01:14:44,377 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'352ab077-6a83-4346-8fa4-df9afb2367ad'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3613'), (b'req-arrive-time', b'1757265280780'), (b'resp-start-time', b'1757265284394'), (b'x-envoy-upstream-service-time', b'3612'), (b'set-cookie', b'acw_tc=352ab077-6a83-4346-8fa4-df9afb2367add329596ed682d9256d2a3b5497222cee;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 17:14:44 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-08 01:14:44,378 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-08 01:14:44,378 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-08 01:14:44,379 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-08 01:14:44,379 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-08 01:14:44,379 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-08 01:14:44,379 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '352ab077-6a83-4346-8fa4-df9afb2367ad', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3613', 'req-arrive-time': '1757265280780', 'resp-start-time': '1757265284394', 'x-envoy-upstream-service-time': '3612', 'set-cookie': 'acw_tc=352ab077-6a83-4346-8fa4-df9afb2367add329596ed682d9256d2a3b5497222cee;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 17:14:44 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-08 01:14:44,379 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 352ab077-6a83-4346-8fa4-df9afb2367ad
2025-09-08 01:14:44,381 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-08 01:14:44,381 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-08 01:14:44,381 - app.main - INFO - [main.py:267] - process_single_file() - ✅ [Thread-6211907584] AI analysis completed successfully
2025-09-08 01:14:44,381 - app.main - DEBUG - [main.py:268] - process_single_file() - 📊 [Thread-6211907584] Analysis result - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-08 01:14:44,381 - app.main - DEBUG - [main.py:311] - process_single_file() - 🗑️ [Thread-6211907584] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_011440_6211907584_1.pdf
2025-09-08 01:14:44,382 - app.main - INFO - [main.py:313] - process_single_file() - ✅ [Thread-6211907584] File processing completed successfully for: 1.pdf
2025-09-08 01:14:44,382 - app.main - DEBUG - [main.py:333] - process_single_file() - 💾 [Thread-6211907584] Saving successful result to cache
2025-09-08 01:14:44,385 - app.main - DEBUG - [main.py:108] - load_cached_responses() - 📂 Loaded 76 cached responses
2025-09-08 01:14:44,389 - app.main - INFO - [main.py:150] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 77
2025-09-08 01:14:44,389 - app.main - DEBUG - [main.py:151] - save_response_to_cache() - 💾 Cached entry: AlexanderersonAndersonilsonnen - 35%
2025-09-08 01:14:44,389 - app.main - DEBUG - [main.py:338] - process_single_file() - 📊 [Thread-6211907584] Returning result: AlexanderersonAndersonilsonnen - 35%
2025-09-08 01:14:44,390 - app.main - INFO - [main.py:412] - upload_resume() - ✅ Task 1/1 completed: 1.pdf - success
2025-09-08 01:14:44,390 - app.main - INFO - [main.py:426] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-08 01:14:44,390 - app.main - INFO - [main.py:432] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-08 01:14:44,391 - app.main - DEBUG - [main.py:443] - upload_resume() - 📊 Sorting results by match score
2025-09-08 01:14:44,391 - app.main - INFO - [main.py:448] - upload_resume() - 🏆 Top candidate: AlexanderersonAndersonilsonnen with 35% match
2025-09-08 01:14:44,391 - app.main - DEBUG - [main.py:469] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-08 01:14:44,391 - app.main - INFO - [main.py:485] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-08 01:14:44,391 - app.main - DEBUG - [main.py:486] - upload_resume() - 📊 Response size: 3424 characters
2025-09-08 01:14:44,391 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 3653 bytes
2025-09-08 01:14:44,392 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:14:44] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-08 01:14:48,739 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-08 01:14:48,740 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '2696', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundarycsEhqoTLYHOKkncb', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:14:48,740 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundarycsEhqoTLYHOKkncb
2025-09-08 01:14:48,740 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 2696
2025-09-08 01:14:48,742 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['resume_5.pdf']
2025-09-08 01:14:48,742 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-08 01:14:48,742 - app.main - INFO - [main.py:363] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-08 01:14:48,742 - app.main - INFO - [main.py:379] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-08 01:14:48,742 - app.main - DEBUG - [main.py:380] - upload_resume() - 📎 File names: ['resume_5.pdf']
2025-09-08 01:14:48,742 - app.main - INFO - [main.py:392] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-08 01:14:48,742 - app.main - DEBUG - [main.py:396] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-08 01:14:48,743 - app.main - INFO - [main.py:205] - process_single_file() - 🚀 [Thread-6211907584] Starting processing file: resume_5.pdf
2025-09-08 01:14:48,743 - app.main - INFO - [main.py:402] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-08 01:14:48,743 - app.main - DEBUG - [main.py:208] - process_single_file() - 📋 [Thread-6211907584] File details - Name: resume_5.pdf, Content-Type: application/pdf, Size: 0
2025-09-08 01:14:48,743 - app.main - DEBUG - [main.py:211] - process_single_file() - 🔍 [Thread-6211907584] Validating file type...
2025-09-08 01:14:48,743 - app.main - DEBUG - [main.py:223] - process_single_file() - 💾 [Thread-6211907584] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_011448_6211907584_resume_5.pdf
2025-09-08 01:14:48,744 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6211907584] File saved successfully
2025-09-08 01:14:48,744 - app.main - DEBUG - [main.py:228] - process_single_file() - 🔍 [Thread-6211907584] Validating PDF structure...
2025-09-08 01:14:48,745 - app.main - INFO - [main.py:238] - process_single_file() - ✅ [Thread-6211907584] PDF validation passed
2025-09-08 01:14:48,746 - app.main - DEBUG - [main.py:241] - process_single_file() - 📄 [Thread-6211907584] Extracting text from PDF...
2025-09-08 01:14:48,755 - app.main - INFO - [main.py:256] - process_single_file() - ✅ [Thread-6211907584] Text extracted successfully - 922 characters
2025-09-08 01:14:48,756 - app.main - INFO - [main.py:261] - process_single_file() - 🤖 [Thread-6211907584] Starting AI analysis with Qwen...
2025-09-08 01:14:48,756 - app.main - DEBUG - [main.py:262] - process_single_file() - 📊 [Thread-6211907584] Job description length: 17 chars
2025-09-08 01:14:48,756 - app.main - DEBUG - [main.py:263] - process_single_file() - 📊 [Thread-6211907584] Resume text length: 922 chars
2025-09-08 01:14:48,756 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-08 01:14:48,756 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 922 chars
2025-09-08 01:14:48,780 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b2a76e06-f56e-4a38-9fc4-a2a9bb7ebe9f', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nOlivia Johnson\n Email: olivia.johnson@gmail.com | Phone: +1-745-334-3029\nAddress: 544 Main Street, San Francisco, CA\nProfessional Summary\nExperienced Software Engineer with a strong background in designing, developing, and deploying\nscalable applications. Skilled in cloud computing, microservices, and modern web technologies.\nExperience\nSoftware Engineer, Bloomberg (2017 - 2018)\nDeveloped and maintained real-time trading platforms. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nFull Stack Developer, Bloomberg (2019 - 2021)\nDeveloped and maintained cloud-based applications. Collaborated with cross-functional teams to\ndeliver features improving system performance and user experience.\nEducation\nBachelor of Computer Science, Carnegie Mellon (2012 - 2016)\nSkills\nC++, Machine Learning, REST APIs, Node.js, Docker, Kubernetes, React, Java\n\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-08 01:14:48,781 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-08 01:14:48,781 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-08 01:14:48,781 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109941b70>
2025-09-08 01:14:48,781 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:14:48,781 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:14:48,781 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-08 01:14:48,781 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:14:48,781 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:14:48,782 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-08 01:14:48,782 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1096e2600> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-08 01:14:49,315 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x109942c10>
2025-09-08 01:14:49,315 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-08 01:14:49,316 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:14:49,316 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-08 01:14:49,316 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:14:49,316 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-08 01:14:53,469 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'80c49d49-4cf5-4e47-a041-b22c920653ff'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'3955'), (b'req-arrive-time', b'1757265289523'), (b'resp-start-time', b'1757265293479'), (b'x-envoy-upstream-service-time', b'3954'), (b'set-cookie', b'acw_tc=80c49d49-4cf5-4e47-a041-b22c920653ffa2cd468118c4b226855fd29d8ffd452c;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 17:14:53 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-08 01:14:53,470 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-08 01:14:53,470 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-08 01:14:53,470 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-08 01:14:53,470 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-08 01:14:53,470 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-08 01:14:53,471 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '80c49d49-4cf5-4e47-a041-b22c920653ff', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '3955', 'req-arrive-time': '1757265289523', 'resp-start-time': '1757265293479', 'x-envoy-upstream-service-time': '3954', 'set-cookie': 'acw_tc=80c49d49-4cf5-4e47-a041-b22c920653ffa2cd468118c4b226855fd29d8ffd452c;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 17:14:53 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-08 01:14:53,471 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 80c49d49-4cf5-4e47-a041-b22c920653ff
2025-09-08 01:14:53,472 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-08 01:14:53,473 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: Olivia Johnson, Score: 85
2025-09-08 01:14:53,473 - app.main - INFO - [main.py:267] - process_single_file() - ✅ [Thread-6211907584] AI analysis completed successfully
2025-09-08 01:14:53,473 - app.main - DEBUG - [main.py:268] - process_single_file() - 📊 [Thread-6211907584] Analysis result - Candidate: Olivia Johnson, Score: 85
2025-09-08 01:14:53,473 - app.main - DEBUG - [main.py:311] - process_single_file() - 🗑️ [Thread-6211907584] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_011448_6211907584_resume_5.pdf
2025-09-08 01:14:53,473 - app.main - INFO - [main.py:313] - process_single_file() - ✅ [Thread-6211907584] File processing completed successfully for: resume_5.pdf
2025-09-08 01:14:53,473 - app.main - DEBUG - [main.py:333] - process_single_file() - 💾 [Thread-6211907584] Saving successful result to cache
2025-09-08 01:14:53,475 - app.main - DEBUG - [main.py:108] - load_cached_responses() - 📂 Loaded 77 cached responses
2025-09-08 01:14:53,477 - app.main - INFO - [main.py:150] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 78
2025-09-08 01:14:53,478 - app.main - DEBUG - [main.py:151] - save_response_to_cache() - 💾 Cached entry: Olivia Johnson - 85%
2025-09-08 01:14:53,478 - app.main - DEBUG - [main.py:338] - process_single_file() - 📊 [Thread-6211907584] Returning result: Olivia Johnson - 85%
2025-09-08 01:14:53,478 - app.main - INFO - [main.py:412] - upload_resume() - ✅ Task 1/1 completed: resume_5.pdf - success
2025-09-08 01:14:53,478 - app.main - INFO - [main.py:426] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-08 01:14:53,478 - app.main - INFO - [main.py:432] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-08 01:14:53,478 - app.main - DEBUG - [main.py:443] - upload_resume() - 📊 Sorting results by match score
2025-09-08 01:14:53,478 - app.main - INFO - [main.py:448] - upload_resume() - 🏆 Top candidate: Olivia Johnson with 85% match
2025-09-08 01:14:53,478 - app.main - DEBUG - [main.py:469] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-08 01:14:53,478 - app.main - INFO - [main.py:485] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-08 01:14:53,478 - app.main - DEBUG - [main.py:486] - upload_resume() - 📊 Response size: 3944 characters
2025-09-08 01:14:53,479 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4183 bytes
2025-09-08 01:14:53,479 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:14:53] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-08 01:14:55,930 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-08 01:14:55,931 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-08 01:14:55,932 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-08 01:14:55,933 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:14:55] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-08 01:14:55,945 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-08 01:14:55,945 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757265266.374961-26787-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:14:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:14:55,946 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-08 01:14:55,946 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757265266.3790383-62492-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:14:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:14:55,948 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 62492 bytes
2025-09-08 01:14:55,949 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:14:55] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-08 01:14:55,949 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 26787 bytes
2025-09-08 01:14:55,950 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:14:55] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-08 01:14:55,954 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-08 01:14:55,954 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:14:55,954 - app.main - DEBUG - [main.py:503] - health_check() - 🏥 Health check endpoint called
2025-09-08 01:14:55,955 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-08 01:14:55,955 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:14:55] "GET /api/health HTTP/1.1" 200 -
2025-09-08 01:16:48,038 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-08 01:16:48,038 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-08 01:16:48,039 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-08 01:16:48,039 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:16:48] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-08 01:16:48,052 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-08 01:16:48,053 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757265266.374961-26787-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:14:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:16:48,053 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 26787 bytes
2025-09-08 01:16:48,053 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:16:48] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-08 01:16:48,055 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-08 01:16:48,055 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757265266.3790383-62492-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:14:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:16:48,056 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 64009 bytes
2025-09-08 01:16:48,056 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:16:48] "GET /static/script.js HTTP/1.1" 200 -
2025-09-08 01:16:48,070 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-08 01:16:48,070 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:16:48,070 - app.main - DEBUG - [main.py:503] - health_check() - 🏥 Health check endpoint called
2025-09-08 01:16:48,070 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-08 01:16:48,071 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:16:48] "GET /api/health HTTP/1.1" 200 -
2025-09-08 01:16:49,271 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-08 01:16:49,271 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-08 01:16:49,271 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-08 01:16:49,272 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:16:49] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-08 01:16:49,288 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-08 01:16:49,288 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757265266.374961-26787-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:14:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:16:49,289 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-08 01:16:49,290 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757265403.7902265-64009-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:16:43 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:16:49,290 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 26787 bytes
2025-09-08 01:16:49,291 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:16:49] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-08 01:16:49,292 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 64009 bytes
2025-09-08 01:16:49,293 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:16:49] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-08 01:16:49,302 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-08 01:16:49,302 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:16:49,302 - app.main - DEBUG - [main.py:503] - health_check() - 🏥 Health check endpoint called
2025-09-08 01:16:49,303 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-08 01:16:49,303 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:16:49] "GET /api/health HTTP/1.1" 200 -
2025-09-08 01:16:53,814 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: POST http://localhost:8000/api/upload-resume
2025-09-08 01:16:53,815 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Content-Length': '50829', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Content-Type': 'multipart/form-data; boundary=----WebKitFormBoundaryAlx9pEB355DlujDo', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Origin': 'http://localhost:8000', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:16:53,815 - app.main - INFO - [main.py:49] - log_request_info() - 📦 Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryAlx9pEB355DlujDo
2025-09-08 01:16:53,815 - app.main - INFO - [main.py:50] - log_request_info() - 📊 Content-Length: 50829
2025-09-08 01:16:53,816 - app.main - INFO - [main.py:52] - log_request_info() - 📎 Files: ['文字文稿1.pdf']
2025-09-08 01:16:53,816 - app.main - INFO - [main.py:58] - log_request_info() - 📝 Form data: {'job_description': '[17 chars]'}
2025-09-08 01:16:53,816 - app.main - INFO - [main.py:363] - upload_resume() - 🚀 Starting upload_resume endpoint
2025-09-08 01:16:53,816 - app.main - INFO - [main.py:379] - upload_resume() - 📊 Request details - Files: 1, Job desc length: 17, Mock: False
2025-09-08 01:16:53,816 - app.main - DEBUG - [main.py:380] - upload_resume() - 📎 File names: ['文字文稿1.pdf']
2025-09-08 01:16:53,817 - app.main - INFO - [main.py:392] - upload_resume() - 🔄 Starting concurrent processing with 1 workers for 1 files
2025-09-08 01:16:53,817 - app.main - DEBUG - [main.py:396] - upload_resume() - 📋 Submitting all file processing tasks to thread pool
2025-09-08 01:16:53,817 - app.main - INFO - [main.py:205] - process_single_file() - 🚀 [Thread-6211907584] Starting processing file: 文字文稿1.pdf
2025-09-08 01:16:53,817 - app.main - INFO - [main.py:402] - upload_resume() - ✅ All 1 tasks submitted to thread pool
2025-09-08 01:16:53,817 - app.main - DEBUG - [main.py:208] - process_single_file() - 📋 [Thread-6211907584] File details - Name: 文字文稿1.pdf, Content-Type: application/pdf, Size: 0
2025-09-08 01:16:53,817 - app.main - DEBUG - [main.py:211] - process_single_file() - 🔍 [Thread-6211907584] Validating file type...
2025-09-08 01:16:53,817 - app.main - DEBUG - [main.py:223] - process_single_file() - 💾 [Thread-6211907584] Saving file to: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_011653_6211907584_1.pdf
2025-09-08 01:16:53,818 - app.main - INFO - [main.py:225] - process_single_file() - ✅ [Thread-6211907584] File saved successfully
2025-09-08 01:16:53,818 - app.main - DEBUG - [main.py:228] - process_single_file() - 🔍 [Thread-6211907584] Validating PDF structure...
2025-09-08 01:16:53,819 - app.main - INFO - [main.py:238] - process_single_file() - ✅ [Thread-6211907584] PDF validation passed
2025-09-08 01:16:53,819 - app.main - DEBUG - [main.py:241] - process_single_file() - 📄 [Thread-6211907584] Extracting text from PDF...
2025-09-08 01:16:53,849 - app.main - INFO - [main.py:256] - process_single_file() - ✅ [Thread-6211907584] Text extracted successfully - 388 characters
2025-09-08 01:16:53,849 - app.main - INFO - [main.py:261] - process_single_file() - 🤖 [Thread-6211907584] Starting AI analysis with Qwen...
2025-09-08 01:16:53,849 - app.main - DEBUG - [main.py:262] - process_single_file() - 📊 [Thread-6211907584] Job description length: 17 chars
2025-09-08 01:16:53,849 - app.main - DEBUG - [main.py:263] - process_single_file() - 📊 [Thread-6211907584] Resume text length: 388 chars
2025-09-08 01:16:53,849 - app.qwen_analyzer - INFO - [qwen_analyzer.py:228] - analyze_resume_job_match_qwen() - 🤖 Starting Qwen analysis
2025-09-08 01:16:53,849 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:229] - analyze_resume_job_match_qwen() - 📊 Input lengths - Job: 17 chars, Resume: 388 chars
2025-09-08 01:16:53,869 - openai._base_client - DEBUG - [_base_client.py:482] - _build_request() - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-3c8a4e24-83b0-4e5c-b3e7-60796374fcc7', 'json_data': {'messages': [{'role': 'user', 'content': '\nYou are an expert HR recruiter and AI analyst. Your task is to analyze how well a candidate\'s resume matches a specific job description.\n\nJOB DESCRIPTION:\nsoftware engineer\n\nRESUME CONTENT:\n--- Page 1 ---\nAlexanderersonAndersonilsonnen\nProjectManager-Construction\nEducation\nBachelor\'sdegreefromNationalUniversityofSingapore\nExperience\nWorkedasProjectManageratSiemens(2019-2024)\nKeyachievementsincludedeliveringprojectsontime,collaboratingwithcross-functional\nteams,\nandachievingmeasurableresults.\nSkills\nIndustry-relevantskills,strongcommunication,problem-solving,andleadership.\n\nPlease analyze the match and provide:\n\n1. A match score from 0-100 (where 100 is perfect match)\n2. Detailed reasoning for the score\n3. Key strengths of the candidate for this role\n4. Areas where the candidate might need improvement\n5. Overall recommendation (Strong Match, Good Match, Moderate Match, Weak Match, or Poor Match)\n\nFormat your response as JSON with the following structure:\n{\n    "candidate_name": "<candidate name if found>",\n    "match_score": <number>,\n    "reasoning": "<detailed explanation>",\n    "strengths": ["<strength1>", "<strength2>", ...],\n    "improvement_areas": ["<area1>", "<area2>", ...],\n    "recommendation": "<recommendation>",\n    "summary": "<brief summary>"\n}\n\nBe objective, thorough, and provide actionable insights. Focus on specific skills, experience, and qualifications mentioned in both the job description and resume.\n'}], 'model': 'qwen-turbo', 'max_tokens': 2000, 'temperature': 0.3, 'top_p': 0.9}}
2025-09-08 01:16:53,870 - openai._base_client - DEBUG - [_base_client.py:978] - request() - Sending HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions
2025-09-08 01:16:53,870 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.started host='127.0.0.1' port=7890 local_address=None timeout=5.0 socket_options=None
2025-09-08 01:16:53,870 - httpcore.connection - DEBUG - [_trace.py:47] - trace() - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1097cfd40>
2025-09-08 01:16:53,870 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:16:53,870 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:16:53,870 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'CONNECT']>
2025-09-08 01:16:53,870 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:16:53,870 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'CONNECT']>
2025-09-08 01:16:53,870 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'Connection established', [])
2025-09-08 01:16:53,870 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.started ssl_context=<ssl.SSLContext object at 0x1096e3e30> server_hostname='dashscope.aliyuncs.com' timeout=5.0
2025-09-08 01:16:54,332 - httpcore.proxy - DEBUG - [_trace.py:47] - trace() - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x1096c7f50>
2025-09-08 01:16:54,332 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.started request=<Request [b'POST']>
2025-09-08 01:16:54,333 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_headers.complete
2025-09-08 01:16:54,333 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.started request=<Request [b'POST']>
2025-09-08 01:16:54,333 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - send_request_body.complete
2025-09-08 01:16:54,333 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.started request=<Request [b'POST']>
2025-09-08 01:16:58,783 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'vary', b'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding'), (b'x-request-id', b'7e3ca5fe-5ada-46c8-aeb7-fee17c78bb3d'), (b'x-dashscope-call-gateway', b'true'), (b'content-type', b'application/json'), (b'req-cost-time', b'4259'), (b'req-arrive-time', b'1757265414524'), (b'resp-start-time', b'1757265418784'), (b'x-envoy-upstream-service-time', b'4258'), (b'set-cookie', b'acw_tc=7e3ca5fe-5ada-46c8-aeb7-fee17c78bb3d7b77e88d06ce1c58cbe782187a926f7c;path=/;HttpOnly;Max-Age=1800'), (b'content-encoding', b'gzip'), (b'date', b'Sun, 07 Sep 2025 17:16:58 GMT'), (b'server', b'istio-envoy'), (b'transfer-encoding', b'chunked')])
2025-09-08 01:16:58,783 - httpx - INFO - [_client.py:1025] - _send_single_request() - HTTP Request: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "HTTP/1.1 200 OK"
2025-09-08 01:16:58,783 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.started request=<Request [b'POST']>
2025-09-08 01:16:58,784 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - receive_response_body.complete
2025-09-08 01:16:58,784 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.started
2025-09-08 01:16:58,784 - httpcore.http11 - DEBUG - [_trace.py:47] - trace() - response_closed.complete
2025-09-08 01:16:58,784 - openai._base_client - DEBUG - [_base_client.py:1016] - request() - HTTP Response: POST https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions "200 OK" Headers({'vary': 'Origin,Access-Control-Request-Method,Access-Control-Request-Headers, Accept-Encoding', 'x-request-id': '7e3ca5fe-5ada-46c8-aeb7-fee17c78bb3d', 'x-dashscope-call-gateway': 'true', 'content-type': 'application/json', 'req-cost-time': '4259', 'req-arrive-time': '1757265414524', 'resp-start-time': '1757265418784', 'x-envoy-upstream-service-time': '4258', 'set-cookie': 'acw_tc=7e3ca5fe-5ada-46c8-aeb7-fee17c78bb3d7b77e88d06ce1c58cbe782187a926f7c;path=/;HttpOnly;Max-Age=1800', 'content-encoding': 'gzip', 'date': 'Sun, 07 Sep 2025 17:16:58 GMT', 'server': 'istio-envoy', 'transfer-encoding': 'chunked'})
2025-09-08 01:16:58,784 - openai._base_client - DEBUG - [_base_client.py:1024] - request() - request_id: 7e3ca5fe-5ada-46c8-aeb7-fee17c78bb3d
2025-09-08 01:16:58,785 - app.qwen_analyzer - INFO - [qwen_analyzer.py:235] - analyze_resume_job_match_qwen() - ✅ Qwen analysis completed successfully
2025-09-08 01:16:58,785 - app.qwen_analyzer - DEBUG - [qwen_analyzer.py:236] - analyze_resume_job_match_qwen() - 📊 Result summary - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-08 01:16:58,785 - app.main - INFO - [main.py:267] - process_single_file() - ✅ [Thread-6211907584] AI analysis completed successfully
2025-09-08 01:16:58,785 - app.main - DEBUG - [main.py:268] - process_single_file() - 📊 [Thread-6211907584] Analysis result - Candidate: AlexanderersonAndersonilsonnen, Score: 35
2025-09-08 01:16:58,785 - app.main - DEBUG - [main.py:311] - process_single_file() - 🗑️ [Thread-6211907584] Cleaning up temporary file: /var/folders/y6/pvrfsq4d02jf74mp92vz0jqr0000gp/T/resume_20250908_011653_6211907584_1.pdf
2025-09-08 01:16:58,785 - app.main - INFO - [main.py:313] - process_single_file() - ✅ [Thread-6211907584] File processing completed successfully for: 1.pdf
2025-09-08 01:16:58,785 - app.main - DEBUG - [main.py:333] - process_single_file() - 💾 [Thread-6211907584] Saving successful result to cache
2025-09-08 01:16:58,787 - app.main - DEBUG - [main.py:108] - load_cached_responses() - 📂 Loaded 78 cached responses
2025-09-08 01:16:58,792 - app.main - INFO - [main.py:150] - save_response_to_cache() - 💾 Saved response to cache - Total cached: 79
2025-09-08 01:16:58,792 - app.main - DEBUG - [main.py:151] - save_response_to_cache() - 💾 Cached entry: AlexanderersonAndersonilsonnen - 35%
2025-09-08 01:16:58,792 - app.main - DEBUG - [main.py:338] - process_single_file() - 📊 [Thread-6211907584] Returning result: AlexanderersonAndersonilsonnen - 35%
2025-09-08 01:16:58,792 - app.main - INFO - [main.py:412] - upload_resume() - ✅ Task 1/1 completed: 1.pdf - success
2025-09-08 01:16:58,792 - app.main - INFO - [main.py:426] - upload_resume() - 🏁 All concurrent processing completed - 1 results collected
2025-09-08 01:16:58,792 - app.main - INFO - [main.py:432] - upload_resume() - 📊 Processing summary - Success: 1, Failed: 0
2025-09-08 01:16:58,793 - app.main - DEBUG - [main.py:443] - upload_resume() - 📊 Sorting results by match score
2025-09-08 01:16:58,793 - app.main - INFO - [main.py:448] - upload_resume() - 🏆 Top candidate: AlexanderersonAndersonilsonnen with 35% match
2025-09-08 01:16:58,793 - app.main - DEBUG - [main.py:469] - upload_resume() - 📋 Single file result - using backward compatibility format
2025-09-08 01:16:58,793 - app.main - INFO - [main.py:485] - upload_resume() - ✅ upload_resume endpoint completed successfully
2025-09-08 01:16:58,793 - app.main - DEBUG - [main.py:486] - upload_resume() - 📊 Response size: 3844 characters
2025-09-08 01:16:58,793 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 4085 bytes
2025-09-08 01:16:58,793 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:16:58] "POST /api/upload-resume HTTP/1.1" 200 -
2025-09-08 01:17:02,581 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/
2025-09-08 01:17:02,581 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Cache-Control': 'max-age=0', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Sec-Ch-Ua-Platform': '"macOS"', 'Upgrade-Insecure-Requests': '1', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7', 'Sec-Fetch-Site': 'none', 'Sec-Fetch-Mode': 'navigate', 'Sec-Fetch-User': '?1', 'Sec-Fetch-Dest': 'document', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6', 'If-None-Match': '"1757256204.7250392-10876-2258441760"', 'If-Modified-Since': 'Sun, 07 Sep 2025 14:43:24 GMT'}
2025-09-08 01:17:02,582 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 10876 bytes
2025-09-08 01:17:02,583 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:17:02] "[36mGET / HTTP/1.1[0m" 304 -
2025-09-08 01:17:02,597 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/styles.css
2025-09-08 01:17:02,598 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757265266.374961-26787-2280592960"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:14:26 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': 'text/css,*/*;q=0.1', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'style', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:17:02,599 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/static/script.js
2025-09-08 01:17:02,599 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'If-None-Match': '"1757265403.7902265-64009-1898780101"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'If-Modified-Since': 'Sun, 07 Sep 2025 17:16:43 GMT', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'no-cors', 'Sec-Fetch-Dest': 'script', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:17:02,600 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 26787 bytes
2025-09-08 01:17:02,600 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:17:02] "[36mGET /static/styles.css HTTP/1.1[0m" 304 -
2025-09-08 01:17:02,600 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 304 - 64009 bytes
2025-09-08 01:17:02,601 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:17:02] "[36mGET /static/script.js HTTP/1.1[0m" 304 -
2025-09-08 01:17:02,607 - app.main - INFO - [main.py:46] - log_request_info() - 🔍 REQUEST: GET http://localhost:8000/api/health
2025-09-08 01:17:02,607 - app.main - INFO - [main.py:47] - log_request_info() - 📋 Headers: {'Host': 'localhost:8000', 'Connection': 'keep-alive', 'Sec-Ch-Ua-Platform': '"macOS"', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36', 'Sec-Ch-Ua': '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"', 'Sec-Ch-Ua-Mobile': '?0', 'Accept': '*/*', 'Sec-Fetch-Site': 'same-origin', 'Sec-Fetch-Mode': 'cors', 'Sec-Fetch-Dest': 'empty', 'Referer': 'http://localhost:8000/', 'Accept-Encoding': 'gzip, deflate, br, zstd', 'Accept-Language': 'en-GB,en;q=0.9,zh-CN;q=0.8,zh;q=0.7,ja;q=0.6'}
2025-09-08 01:17:02,607 - app.main - DEBUG - [main.py:503] - health_check() - 🏥 Health check endpoint called
2025-09-08 01:17:02,607 - app.main - INFO - [main.py:62] - log_response_info() - ✅ RESPONSE: 200 - 112 bytes
2025-09-08 01:17:02,607 - werkzeug - INFO - [_internal.py:97] - _log() - 127.0.0.1 - - [08/Sep/2025 01:17:02] "GET /api/health HTTP/1.1" 200 -
